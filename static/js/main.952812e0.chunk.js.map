{"version":3,"sources":["../../src/directives/attributeMap.ts","../../src/directives/classMap.ts","../../src/util/string.ts","../../src/directives/functions.ts","../../src/directives/resolveAttributeValue.ts","../../src/directives/classSwitches.ts","../../src/directives/styleAttributes.ts","../../src/util/lang.ts","../../src/directives/useInlineStyle.ts","../../src/directives/useStyleDirectives.ts","../../src/MediaCard.tsx","../../src/Counter.tsx","../../src/Layout.tsx","../../src/loremIpsum.ts","../../src/Masonry/index.tsx","../../src/Modal.tsx","../../src/validation.ts","../../src/Throttle.ts","../../src/Page/Panel.tsx","../../src/hooks/createStripes.ts","../../src/hooks/createLinearGradient.ts","../../src/hooks/createBoxShadow.ts","../../src/hooks/pageEvents.ts","../../src/Page/index.tsx","../../src/DataTable/Header.tsx","../../src/DataTable/TableRow.tsx","../../src/Tabs.tsx","../../src/index.tsx","../../src/Div.tsx","../../src/Col.tsx","../../src/Row.tsx","../../src/Drawer.tsx","../../src/Dropdown.tsx","../../src/Element.tsx","../../src/NumberInput/index.js","../../src/PropertyPage.tsx","../../src/DataTable/index.tsx","../../src/Text.tsx","demos/table/index.tsx","App.tsx","index.tsx"],"names":["attributeMap","bgColor","classMap","scrollableX","scrollableY","borderBox","camelToSentenceCase","string","t","trimmed","token","createStyle","x","Object","value","resolvedKey","Reflect","getOrMakeStyle","createClass","resolvedClass","switches","absolute","alignStart","alignCenter","alignEnd","alignStretch","alignBaseline","alignAuto","alignSelfStart","alignSelfCenter","alignSelfEnd","alignSelfStretch","alignSelfBaseline","anchorBottom","anchorLeft","anchorRight","anchorTop","beveled","block","centerX","centerXY","centerY","clickable","coverImage","fill","fixed","fullWidth","fullWidthAlways","grow","hidden","horizontal","inline","inlineBlock","justifyStart","justifyCenter","justifyEnd","mobileCenter","mobileColumn","mobileOnly","noBr","noBreak","noMargin","noMobile","noOverflow","noPadding","noSelect","noTransform","noWrap","opaque","overlay","relative","round","rounded","scrollable","shrink","small","smaller","solid","spaced","sticky","tall","translucent","vertical","wide","backgroundColor","backgroundImage","backgroundRepeat","backgroundPosition","backgroundSize","border","borderTop","borderRight","borderBottom","borderLeft","borderRadius","borderTopLeftRadius","borderTopRightRadius","borderBottomLeftRadius","borderBottomRightRadius","color","cursor","dataProps","fontSize","fontStyle","fontWeight","innerProps","lineHeight","margin","marginTop","marginRight","marginBottom","marginLeft","minHeight","minWidth","opacity","padding","paddingTop","paddingRight","paddingBottom","paddingLeft","pseudo","textAlign","textTransform","title","width","height","top","right","bottom","left","fnOrValue","element","matchSingleKey","key","matchKey","Array","pairs","i","defaultValue","useInlineStyle","style","useMemo","makeStyles","createStyles","useStyleDirectives","id","directives","children","className","ref","data","css","onBlur","onClick","onChange","onFocus","onMouseUp","onMouseDown","onMouseMove","other","ignoredProps","ownProps","utilizedKeys","keys","bag","classes","debug","styleAttributes","props","pseudoStyles","s","fullKey","usedStyles","events","attr","baseClasses","result","root","clsx","useStyles","maxWidth","media","div","row","col","options","count","format","paragraphLowerBound","paragraphUpperBound","sentenceLowerBound","sentenceUpperBound","suffix","units","words","loremIpsum","dictionary","sentences","paragraphs","ElementContainer","colSpan","image","DefaultMasonryItem","description","gridColumnEnd","Transition","direction","isNullOrUndefined","isUndefined","isNull","Throttle","ticking","invokeWithAnimationFrame","this","params","_this","dispatch","callback","window","_ownProps","stickyTop","defaultProps","angle","parseColor","tokens","parts","Error","colorFromString","generateLinearGradientStyle","colors","g","tuple","functions","BoxShadowDefaults","xOffset","yOffset","blur","spread","rgba","r","b","a","isClient","gridSizeValues","xs","sm","md","lg","xl","xxl","xxxl","breakpointSystem","bootstrap","material","getGridSize","system","makeGridSizeResult","code","getWindowHeight","getWindowWidth","useWindowSize","useState","innerHeight","state","setState","useEffect","windowEventHandler","getScrollPosition","document","handleEvent","readValue","compare","steps","c","step","colorCount","n","outSegments","distance","index","nextIndex","size","type","isNumber","generateStripesStyle","colorString","ui","Header","cols","TableRow","item","isArray","cellClass","formatValue","TabPanel","active","role","aria-labelledby","React.createElement","card","footerActions","gutterBottom","variant","component","counter","position","zIndex","drawer","React","open","setOpen","closed","setClosed","externallyControlled","drawerOpen","toggleDrawer","anchor","onClose","dropdown","localStorageKey","label","labelId","uuidv4","localStorage","selectedValue","setSelectedValue","auxOptions","text","aux","event","obj","masonry","min","max","items","elementForItem","revision","d","theme","useTheme","mutable","resizing","gridItems","grid","rowHeight","parseInt","rowGap","innerElement","e","heightRatio","container","resizeGridItem","rect","gi","heightWithGap","Math","remainder","rowSpan","resizeAllGridItems","handleResizeAllGridItems","timer","setTimeout","clearTimeout","gridTemplateColumns","boxShadow","overflow","modal","handleClose","handleEscapeKey","TransitionComponent","disableBackdropClick","disableEscapeKeyDown","numberInput","throttle","useRef","inputRef","buffer","setBuffer","constraints","precision","context","handleChange","parsedValue","parseFloat","newValue","lib","handleFocus","handleBlur","innerValue","tight","alignItems","sliderInput","inputMode","pattern","required","placeholder","inputWithUpDown","page","layout","panel","undefined","propertyPage","table","baseStyle","cellPadding","cellSpacing","tabs","activeKey","keyForItem","selectedKey","setActiveKey","internalStyle","tabStrip","orientation","aria-label","tabContent","isActiveTab","verticalLayout","horizontalLayout","isVertical","Table","columns","array","App","winSize","gridStyle","entries","demos","map","href","ReactDOM","render","getElementById"],"mappings":"6tDAAA,IAAMA,EAAe,CACnBC,QAAS,mBCDX,IAAMC,EAAW,CACfC,YADe,0BAEfC,YAFe,0BAGfC,UAAW,cCFEC,EAAsB,SAACC,GAClC,SACeA,iDAAf,KAIO,QACG,mBAAOC,GAAKA,EAAZ,UADH,KAEA,YACH,IAAMC,EAAUC,EAAhB,OACA,OAAOD,mBAA2BA,YAAlC,MAJG,KAAP,KALoBF,GCkBxB,SAAgBI,EAAYC,GAE1B,OADAC,cAAcD,MAAdC,M,SAR6BD,G,MCb4BE,EDcnDC,EAAcC,cAA0BJ,EAA1BI,KACfhB,EAAqBY,EADNI,KAEhBJ,EAFJ,IAGA,iBCjByDE,EDiBEF,EAA3D,QCfOE,MAAYA,EAAZA,MADYA,EDgBnB,EAI2BG,CAA3BJ,KACA,EAGF,SAAgBK,EAAYN,GAC1B,IDViCL,ECU3BY,EAAgBH,cAAsBJ,EAAtBI,KACjBd,EAAiBU,EADAI,MDVWT,ECYZK,EAFrB,KDRiBL,0CAAf,KAIO,KACA,mBAAWG,SAAX,iBADA,KAAP,KALoBH,ECatB,OADAK,uBACA,EE2DF,IAAMQ,EAA0B,CAC9BC,UAD8B,EAG9BC,YAH8B,EAI9BC,aAJ8B,EAK9BC,UAL8B,EAM9BC,cAN8B,EAO9BC,eAP8B,EAQ9BC,WAR8B,EAU9BC,gBAV8B,EAW9BC,iBAX8B,EAY9BC,cAZ8B,EAa9BC,kBAb8B,EAc9BC,mBAd8B,EAgB9BC,cAhB8B,EAiB9BC,YAjB8B,EAkB9BC,aAlB8B,EAmB9BC,WAnB8B,EAqB9BC,SArB8B,EAsB9BC,OAtB8B,EAuB9BjC,WAvB8B,EAyB9BkC,SAzB8B,EA0B9BC,UA1B8B,EA2B9BC,SA3B8B,EA4B9BC,WA5B8B,EA6B9BC,YA7B8B,EA+B9BC,MA/B8B,EAgC9BC,OAhC8B,EAiC9BC,WAjC8B,EAkC9BC,iBAlC8B,EAoC9BC,MApC8B,EAsC9BC,QAtC8B,EAuC9BC,YAvC8B,EAyC9BC,QAzC8B,EA0C9BC,aA1C8B,EA4C9BC,cA5C8B,EA6C9BC,eA7C8B,EA8C9BC,YA9C8B,EAgD9BC,cAhD8B,EAiD9BC,cAjD8B,EAkD9BC,YAlD8B,EAoD9BC,MApD8B,EAqD9BC,SArD8B,EAsD9BC,UAtD8B,EAuD9BC,UAvD8B,EAwD9BC,YAxD8B,EAyD9BC,WAzD8B,EA0D9BC,UA1D8B,EA2D9BC,aA3D8B,EA4D9BC,QA5D8B,EA8D9BC,QA9D8B,EA+D9BC,SA/D8B,EAiE9BC,UAjE8B,EAkE9BC,OAlE8B,EAmE9BC,SAnE8B,EAqE9BC,YArE8B,EAsE9BtE,aAtE8B,EAuE9BC,aAvE8B,EAwE9BsE,QAxE8B,EAyE9BC,OAzE8B,EA0E9BC,SA1E8B,EA2E9BC,OA3E8B,EA4E9BC,QA5E8B,EA6E9BC,QA7E8B,EA+E9BC,MA/E8B,EAgF9BC,aAhF8B,EAkF9BC,UAlF8B,EAoF9BC,MAAM,GCpFR,EAAe,CACbC,gBADa,EAEbnF,QAFa,EAIboF,gBAJa,EAKbC,iBALa,EAMbC,mBANa,EAObC,eAPa,EASbC,OATa,EAUbC,UAVa,EAWbC,YAXa,EAYbC,aAZa,EAabC,WAba,EAebC,aAfa,EAgBbC,oBAhBa,EAiBbC,qBAjBa,EAkBbC,uBAlBa,EAmBbC,wBAnBa,EAqBbC,MArBa,EAsBbC,OAtBa,EAwBbC,UAxBa,EAyBbC,SAzBa,EA0BbC,UA1Ba,EA2BbC,WA3Ba,EA6BbC,WA7Ba,EA8BbC,WA9Ba,EAgCbC,OAhCa,EAiCbC,UAjCa,EAkCbC,YAlCa,EAmCbC,aAnCa,EAoCbC,WApCa,EAsCbC,UAtCa,EAuCbC,SAvCa,EAyCbC,QAzCa,EA2CbC,QA3Ca,EA4CbC,WA5Ca,EA6CbC,aA7Ca,EA8CbC,cA9Ca,EA+CbC,YA/Ca,EAiDbC,OAjDa,EAmDbC,UAnDa,EAoDbC,cApDa,EAqDbC,MArDa,EAsDbC,MAtDa,EAuDbC,OAvDa,EA0DbC,IA1Da,EA2DbC,MA3Da,EA4DbC,OA5Da,EA6DbC,KAAMtH,GC3HKuH,EAAY,SAACC,EAAD,GACvB,0BAAWA,EACDA,EAAR,GAEF,GAIWhF,EAOD,c,IAKN,IAAMiF,EAAiB,SAACC,GACtB,0BAAWA,EACDA,EAAR,GAEKA,IAAP,GAGIC,EAAW,SAACD,GAChB,OAAIE,cAAJ,GACUF,OAAR,GAEKD,EAAP,I,mBAbCI,uDAgBH,IAAK,IAAIC,EAAT,EAAgBA,EAAID,EAApB,OAAkCC,GAAlC,EAA0C,CACxC,IAAMJ,EAAMG,EAAZ,GACA,GAAIF,EAAJ,GACE,OAAOJ,EAAUM,EAAMC,EAAP,GAAhB,GAKJ,OAAOP,EAAUQ,EAAjB,ICjEAC,EAAiB,SAACC,EAAD,GAMrB,OALWC,mBAAQ,kBACjBC,aAAW,kBACTC,YAAa,EAAD,GAAMb,EADT,UAGV,CAACU,EAJJ,K,iLCEF,SAASI,EAAT,OAOE,IACEC,EAmBEC,EApBJ,GAEEC,EAkBED,EApBJ,SAGEN,EAiBEM,EApBJ,MAIEE,EAgBEF,EApBJ,UAKEG,EAeEH,EApBJ,IAMEI,EAcEJ,EApBJ,KAOE1B,EAaE0B,EApBJ,OAQEzC,EAYEyC,EApBJ,WASEK,EAWEL,EApBJ,IAWEM,EASEN,EApBJ,OAYEO,EAQEP,EApBJ,QAaEQ,EAOER,EApBJ,SAcES,EAMET,EApBJ,QAeEU,EAKEV,EApBJ,UAgBEW,EAIEX,EApBJ,YAiBEY,EAGEZ,EApBJ,YAmBKa,EAnBL,OAuBMC,EAAe,CACnBf,GADmB,EAEnBE,SAFmB,EAGnBP,MAHmB,EAInBQ,UAJmB,EAKnBC,IALmB,EAMnBC,KANmB,EAOnB9B,OAPmB,EAQnBf,WARmB,EASnBwD,SATmB,EAUnBV,IAVmB,EAWnBC,OAXmB,EAYnBC,QAZmB,EAanBC,SAbmB,EAcnBC,QAdmB,EAenBC,UAfmB,EAgBnBC,YAhBmB,EAiBnBC,eAGII,EAAN,GACMC,EAAOtJ,YAAb,GAEMuJ,EAAgB,CACpBxB,MAAO,EAAF,KADe,GAKpByB,QAAS,IAIXF,WAAa,YACX,IAAKnJ,cAAL,GAAqC,CACnC,IAAMF,EAAQoI,EAAd,GAEA,GAAIlI,cAAJ,GAGE,OAFAE,EAAY,CAAEkJ,IAAF,EAAO/B,IAAP,EAAYvH,MAAZ,EAAmBwJ,OAAO,SACtCJ,UAIF,GAAIlJ,cAAJ,GAGE,OAFCuJ,KAA6B,CAAEH,IAAF,EAAO/B,IAAP,EAAYvH,eAC1CoJ,WAIF,IAAIpJ,GACFI,EAAY,CAAEkJ,IAAF,EAAO/B,IAAP,EAAYvH,MAAZ,EAAmBwJ,OAAO,QAM5C,IAAME,EAAQ,EAAH,GAAX,GACAN,WAAqB,mBACZM,EAAP,M,IAGF,IAAMC,EAAe5J,OAAA,KAAYqI,UAAZ,YACnB,c,MACQwB,EAAIxB,SAAV,GACMyB,EAAUtC,mBAAhB,EACA,OAAOxH,6BAAP,MAJJ,IASM+J,EAAkB,OAAA9B,EAAA,IAAW,WACjC,IAAM4B,EAAN,GAGA,OAFI7J,YAAYuJ,EAAZvJ,OAAJ,SAAmC6J,MAAQN,EAARM,OAC/B7J,eAAJ,SAAsC6J,YACtC,IAJsB,GAOlBG,EAAS,CACbrB,OADa,EAEbC,QAFa,EAGbC,SAHa,EAIbC,QAJa,EAKbC,UALa,EAMbC,YANa,EAObC,eAGMzD,EAAwB6C,EAAhC,UAAsB4B,EAAtB,O,mBAhHGC,uDAiHH,IAAMC,EAAS,CACbC,KAAM,CACJ7B,UAAW8B,YAAK,EAAD,IAIbd,EAJa,QAKbQ,EALa,IAMbA,EANa,SASjBJ,MAAO,EAAF,KAXQ,GAYbM,KAZa,EAabxB,KAba,EAcbuB,UAGF,S,mDCjIIM,GAAYrC,YAAW,CAC3BmC,KAAM,CACJG,SAAU,KAEZC,MAAO,CACLxD,OAAQ,OCdZ,I,gDCIayD,GAAM,SAACpC,GAClB,IAAQC,EAA4BD,EAApC,SACA,EAA+BF,EAD/B,QACA,MAAQiC,EAAR,OAAc3B,EAAd,OAAoBuB,EAApB,SACA,OACE,gCAAezB,UAAW6B,EAAK7B,WAA/B,GADF,IAQWmC,GAAM,SAACrC,GAClB,IAAQC,EAAuBD,EAA/B,SACA,EAAgCF,EADhC,QACkD,WAAlD,YAAQiC,EAAR,OAAc3B,EAAd,OAAoBuB,EAApB,SAMA,OACE,gCAAezB,UAAW6B,EAAK7B,WAA/B,GADF,IAQWoC,GAAM,SAACtC,GAClB,IAAQC,EAAuBD,EAA/B,SACA,EAAgCF,EADhC,QACkD,WAAlD,eAAQiC,EAAR,OAAc3B,EAAd,OAAoBuB,EAApB,SAMA,OACE,gCAAezB,UAAW6B,EAAK7B,WAA/B,GADF,I,oEC3BWqC,GAA6B,CACxCC,MADwC,EAExCC,OAFwC,QAGxCC,oBAHwC,EAIxCC,oBAJwC,EAMxCC,mBANwC,EAOxCC,mBAPwC,GAQxCC,OARwC,KASxCC,MAAO,SAkCT,OAAe,CACbC,MA/BF,SAAeR,EAAf,GACE,OAAOS,qBAAW,EAAD,OAGfT,MAHe,EAIfO,MAJe,QAKfC,MAAOE,MA0BTC,UAtBF,SAAmBX,EAAnB,GACE,OAAOS,qBAAW,EAAD,OAGfT,MAHe,EAIfO,MAJe,YAKfC,MAAOE,MAiBTE,WAbF,SAAoBZ,EAApB,GACE,OAAOS,qBAAW,EAAD,OAGfT,MAHe,EAIfO,MAJe,aAKfC,MAAOE,O,4GCRLG,GAAmB,SAAC/B,GACxB,IAAQrC,EAA4BqC,EAApC,QAAiBgC,EAAmBhC,EAApC,QAA0BiC,EAAUjC,EAApC,MACMrH,EAASwF,GAAe,WAC5B,IAAMsC,EAAN,GAIA,OAHA,IACEA,2BAEK,CACLA,KADK,EAELwB,MAAO,CAAEpH,gBAAiB,QAAF,WAEzB,CAACmH,EATJ,GAAe7D,GAWf,OACE,yBAAKS,UAAW8B,YAAK,eAAgB,WAAY/H,EAA7B,OAClB,yBAAKiG,UAAU,gBAFnB,KAOWsD,GAAqB,SAAC,GAGjC,IACEF,EACEtD,EAFJ,QACWuD,EACPvD,EAFJ,MACkBvB,EACduB,EAFJ,MACyByD,EACrBzD,EAFJ,YACsCO,EAClCP,EAFJ,QAGQ+B,EAASjC,EAHjB,QAGmC,mBAAnC,qBAMM7F,EAASwF,GAAe,iBAAO,CACnCsC,KAAM,CAAE2B,cAAeJ,EAAU,QAAH,EAAuB,MACrDC,MAAO,CAAEpH,gBAAiB,QAAF,WACtB,CAACmH,EAHL,GAAe7D,GAIf,OAEE,yBACES,UAAW8B,YAAKD,EAAD,UAAiB9H,EADlC,MAEEsG,QAAS,kBAAMA,GAAWA,MAE1B,uBAAOL,UAAU,WACdqD,GAAS,yBAAKrD,UAAW8B,YAAK,cAAe/H,EAAhB,SAC7BwE,GAAS,yBAAKyB,UAAU,SAF3B,GAGGuD,GAAe,yBAAKvD,UAAU,QAPnC,MCxEEyD,GAAa,gBAAiB,SAAoB,EAApB,GAGhC,OAAO,yBAAOC,UAAP,OAAwBzD,IAAKA,GAApC,OCXS0D,GAAoB,SAAAjM,GAAK,OAFX,SAAAA,GAAK,gBAAIA,EAEMkM,KADpB,SAAAlM,GAAK,cAAIA,EACiCmM,CAA1B,ICJjBC,cAArB,aAKI,KAAAC,SAAA,E,mBAEAC,qCAEIC,KAAA,e,2BAF4CC,uDAK5C,GAFAD,KAAA,mBAEKA,KAAL,QAAmB,CAEf,IAAME,EAAN,KAEMC,EAAW,SAAXA,EAAYC,G,2BAAuBH,uDACrCC,aACAA,sBACAA,yBACAG,8BAA6B,WACzBD,kBACAF,aACIA,EAAJ,cACIC,gBAASD,EAATC,qBAAgCD,EAAhCC,sBAKZA,gBAASH,KAATG,qBAA+BH,KAA/BG,oB,EA7BSN,G,ICWfS,GAAY,IANlB,WACI,KAAA5I,QAAA,EACA,KAAA6I,UAAA,GCOEC,GAAe,CAAEC,MAAO,IAO9B,SAASC,GAAW5H,GAChB,wBAAWA,EAPf,SAAyBA,GACrB,IAAM6H,EAAS7H,QAAf,KACA,OAAI6H,SAAqB,MAAO,CAAE7H,MAAO6H,EAAT,GAAoBC,MAAO,GAC3D,OAAID,SAAqB,MAAO,CAAE7H,MAAO6H,EAAT,GAAoBC,OAAQD,EAAO,IACnE,MAAM,IAAIE,MAAV,4CAGsCC,CAAP,GAC/B,ECFJ,SAASC,GAA4B3C,GAUjC,MAAO,CAAEpG,iBARwCkD,mBAAmC,CAApF,IAEkB,KAAc,YAC5B,IAAM8F,EAASC,EAAA,YAAa,mBAjBpC,Y,MAQI,wBAAWnI,EAPX,YACI,IAAM6H,EAAS7H,QAAf,KACA,GAAI6H,SAAJ,EACI,MAAM,IAAIE,MAAV,2JAEJ,SAEkCC,CAAP,GACxB,CAAEhI,EAAF,gBAAeA,EAAf,+BAAeA,EAAtB,YAQ2D4H,CAA3B,MAE5B,OADqBO,qCAArB,mBACA,IAA0BA,EAA1B,cAAyCD,EAAA,KAAW,mBAAqBE,OAArB,QAAX,KAAzC,aAGsBC,YCjBvB,IAAMC,GAAoB,CAC7BC,QAD6B,EAE7BC,QAF6B,EAG7BC,KAH6B,EAI7BC,OAJ6B,EAK7BC,KAAM,CAAEC,EAAF,EAAQT,EAAR,EAAcU,EAAd,EAAoBC,EAAG,MClB3BC,GAAN,kBAAwBxB,OAClByB,GAAsB,CACxBC,GADwB,EAExBC,GAFwB,EAGxBC,GAHwB,EAIxBC,GAJwB,EAKxBC,GALwB,EAMxBC,IANwB,EAOxBC,KAAM,GAEJC,GAAmB,CACrBC,UAAW,CACP,CAAC,KADM,QAEP,CAAC,KAFM,OAGP,CAAC,KAHM,MAIP,CAAC,IAJM,MAKP,CAAC,IALM,MAMP,CAAC,IAPgB,OASrBC,SAAU,CACN,CAAC,KADK,MAEN,CAAC,KAFK,MAGN,CAAC,IAHK,MAIN,CAAC,IAJK,QAORC,GAAc,SAACC,GACjB,OAAc,MAAO,KAErB,IADA,IACA,MADeJ,GAAf,MACA,aAAqB,KAAb/O,EAAa,QACjB,GAAG8M,mBAAqB9M,EAAxB,GACI,OAAOA,EAAP,GAGR,YAGEoP,GAAqB,SAACC,GAAD,MAAmB,CAAEA,KAAF,EAAQnP,MAAOqO,GAAec,KAgB5E,SAASC,KAAoB,OAAOxC,OAAP,YAW7B,SAASyC,KAAmB,OAAOzC,OAAP,WAC5B,IASa0C,GAAgB,WACzB,IAAM/G,EAAM,iBAAO,CAAEvI,MAAO,CAAE8G,MAAF,EAAYC,OAAQ,GAAKsF,SAAS,IAA9D,QACA,EAA0BkD,oBAAS,kBAAOnB,GAAqC,CAAEtH,MAAO8F,OAAT,WAA4B7F,OAAQ6F,OAAO4C,aAArE,CAAE1I,MAAF,EAAYC,OAAQ,MAAlE0I,EAAP,KAAcC,EAAd,KAUA,OATAC,qBACI,kBAAMC,GAAmB,EAAD,YAIpB,iBAAO,CAAE9I,MAAO8F,OAAT,WAA4B7F,OAAQ6F,OAAO4C,gBAClD,qBAAUrB,UAAYD,EAAZC,OAAuBA,WAAaD,EAA9C,YAEN,CARFyB,IASA,GAGEE,GAAoB,kBAAMC,yBAA2BA,yBAAjC,WAU1B,SAASF,GAAmBrH,EAA5B,SACI,OACA,IAAMwH,EAAc,WAChB,IAAM/P,EAAQgQ,KACQC,GAAY,qBAAqB9B,IAArB,IAChB5F,EAAD,MAAjB,KACAA,UACKA,EAAL,UACIqE,8BAA6B,WACzB8C,EAASnH,EAATmH,OACAnH,gBAEJA,gBAIR,OADAqE,6BACO,kBAAMA,6BAAN,K,qCHxDX,SAA8BjC,GAE1B,OArCJ,SAA8B6B,GAe1B,IAdA,IACQQ,EAAUR,EAAlB,MACMe,EAASf,EAAA,OAAgBA,EAAA,YAAkB,mBAA2BS,GAA3B,MAAjD,KAGMiD,EAAN,EAD0B3C,EAAA,QAAc,qBAAmC,EAAW4C,EAA9C,QAAxC,GAEMC,EAAO,IAAb,EAEMC,EAAa9C,EAAnB,OACM+C,EAAN,EAAUD,EAEJE,EAAN,GACIC,EAAJ,EAES7I,EAAT,EAAgBA,EAAhB,EAAuBA,IAAK,CACxB,IAAM8I,EAAQ9I,EAAd,EACM+I,GAAa/I,EAAD,GAAlB,EACA6I,GAAYJ,EAAO7C,KAAnBiD,MACAD,OAAiBhD,eAA4BiD,UAA5BjD,GAAjBgD,KACI5I,EAAI2I,EAAR,GACIC,OAAiBhD,eAAgCiD,UAAhCjD,GAAjBgD,KAIR,IAAMI,EAAOnE,QAAb,EAOA,MALmB,CACfjI,gBAAoBqM,mBAAL,UAA0BL,OAA1B,MADA,IAEf7L,eAAgBmM,sBAAoBF,UAApBE,SAAyCF,UAAzCE,QAA+DF,GAQ5EG,CADQ,EAAH,MAAZ,K,qBC3BJ,SAAqCnG,GACjC,OAAO2C,GAAP,I,gBCb2B,SAAC5D,GAC5B,IAAM5J,EAAI,EAAH,MAAP,GACMiR,EAAcrH,eACN5J,OADM4J,OACO5J,OADP4J,OACoB5J,OADpB4J,OACiC5J,OADjC4J,MAEdA,EAFN,IAKM1J,GADQ0J,iBAAd,KACyB5J,EAAN,eAAqBA,EAArB,cAAoCA,EAApC,WAAgDA,EAAhD,aAAnB,EACA,MAAO,CACH,qBADG,EAEH,kBAFG,EAGH,aAAcE,I,YCMK,SAACiP,GACxB,IAAM1G,EAAM,iBAAO,CAAEvI,MAAF,KAAeqM,SAAS,IAA3C,QACA,EAA0BkD,oBAAS,kBAAML,GAAmBF,GAAzB,OAA5BS,EAAP,KAAcC,EAAd,KAUA,OATAC,qBACI,kBAAMC,GAAmB,GAErB,mBAAmBF,EAASR,GAA5B,MAFoB,UAIpB,kBAAMF,GAAN,QALRW,IASA,G,eAe0B,WAC1B,IAAMpH,EAAM,iBAAO,CAAEvI,MAAF,EAAYqM,SAAS,IAAxC,QACA,EAA0BkD,oBAAS,kBAAOnB,GAAeiB,KAAJ,KAA9CI,EAAP,KAAcC,EAAd,KAIA,OAHAC,qBACI,kBAAMC,GAAmBrH,EAAKmH,EAAU,SAAxC,MACF,CAFFC,IAGA,G,gBAjB2B,WAC3B,IAAMpH,EAAM,iBAAO,CAAEvI,MAAF,EAAYqM,SAAS,IAAxC,QACA,EAA0BkD,oBAAS,kBAAOnB,GAAegB,KAAJ,KAA9CK,EAAP,KAAcC,EAAd,KAIA,OAHAC,qBACI,kBAAMC,GAAmBrH,EAAKmH,EAAU,SAAxC,MACF,CAFFC,IAGA,G,mCA8B6B,WAC7B,IAAMpH,EAAM,iBAAO,CAAEvI,MAAF,EAAYqM,SAAS,IAAxC,QACA,EAA0BkD,oBAAS,kBAAOnB,GAAeyB,KAAJ,KAA9CJ,EAAP,KAAcC,EAAd,KAIA,OAHAC,qBACI,kBAAMC,GAAmBrH,EAAKmH,EAAU,SAAxC,MACF,CAFFC,IAGA,ICxFEqB,GAAK,EAAH,MAAR,IAUMnE,GAAY,IALlB,aCZMoE,GAAS,SAACvH,GAEZ,IAAMwH,EAAOxH,QAAb,GAEA,OAAO,+BACH,4BAEQwH,EAAA,KAAS,cACL,OAAO,wBAAI3J,IAAKkJ,GAAhB,SCRdU,GAAW,SAACzH,GAEd,IAAM0H,EAAO1H,EAAb,KACMwH,EAAOxH,EAAb,KAEM2H,EAAU5J,cAAhB,GAEA,OACI,wBAAIa,UAAU,oBAGN+I,GACAD,EAAA,KAAS,cACL,OAAO,wBAAI7J,IAAK2J,EAAT,GAAsB5I,UAAWgJ,GAAUtR,IAE1CuR,GAFR,QASHF,GACDH,EAAA,KAAS,cACL,OAAO,wBAAI3J,IAAK2J,EAAT,GAAsB5I,UAAWgJ,GAAUF,EAAD,KAEzCG,GAAYH,EAFpB,UAapB,SAASG,GAAYvR,GACjB,wBAAWA,EACAA,UAAP,GAEJ,EAEJ,SAASsR,GAAUtR,GACf,wBAAWA,EACP,SAEJ,G,kICDJ,SAASwR,GAAS9H,GAChB,IACErB,EACEqB,EAFJ,SACY+H,EACR/H,EAFJ,OACoB1J,EAChB0J,EAFJ,MAC2BvB,EACvBuB,EAFJ,GAGA,OACE,+BACEgI,KADF,WAEEvP,QAFF,EAGEgG,GAAOA,EAAL,IAHJ,EAIEwJ,kBAAoBxJ,EAApB,IAA0BnI,GAEzBqI,GAAYuJ,mCAPjB,eAYF,I,uBC7BA,I,GAAc,CACZpH,IChCU,SAACpC,GACX,IAAQC,EAA4BD,EAApC,SACA,EAA+BF,EAD/B,QACA,MAAQiC,EAAR,OAAc3B,EAAd,OAAoBuB,EAApB,SACA,OACE,gCAAezB,UAAW6B,EAAK7B,WAA/B,GADF,ID8BAoC,IEjCU,SAACtC,GACX,IAAQC,EAAuBD,EAA/B,SACA,EAAgCF,EADhC,OACkD,QAAlD,eAAQiC,EAAR,OAAc3B,EAAd,OAAoBuB,EAApB,SAMA,OACE,gCAAezB,UAAW6B,EAAK7B,WAA/B,GADF,IF0BAmC,IGlCU,SAACrC,GACX,IAAQC,EAAuBD,EAA/B,SACA,EAAgCF,EADhC,QACkD,QAAlD,YAAQiC,EAAR,OAAc3B,EAAd,OAAoBuB,EAApB,SAMA,OACE,gCAAezB,UAAW6B,EAAK7B,WAA/B,GADF,IH4BAuJ,KjBPF,SAAkCnI,GAChC,IACE7C,EACE6C,EAFJ,MACSmC,EACLnC,EAFJ,YACsBiC,EAClBjC,EAFJ,MAC6Bf,EACzBe,EAFJ,QACsCoI,EAClCpI,EAFJ,cACqDrB,EACjDqB,EAFJ,SAGMH,EAAUc,KAChB,OACE,uBAAM/B,UAAWiB,EAAQY,MACvB,uBAAgBxB,QAAS,kBAAMA,GAAWA,MACvCgD,GACC,uBACErD,UAAWiB,EADb,MAEEoC,MAAOA,EAFT,IAGE9E,MAAOA,IAGX,2BACGA,GACC,uBAAYkL,cAAZ,EAAyBC,QAAzB,KAAsCC,UAAU,MAFpD,GAOGpG,GACC,uBAAYmG,QAAZ,QAA4B3M,MAA5B,gBAAkD4M,UAAU,KARhE,GAaG5J,GAtBP,IAyBGyJ,GACC,2BACG/R,OAAA,aAA+B,mBAC9B,uBACEwH,IADF,EAEEoJ,KAFF,QAGEtL,MAHF,UAIEsD,QAAS,kBAAMmJ,EAAN,OAERtS,EAP2B,UiBzBxC0S,QhBnCa,SAACxI,GAEd,IAAMnB,EAAM,WAAa,CAAEqC,MAAO,IAAlC,QAEA,KACIrC,EAAF,QACC,qBAAOmB,EAAP,IAAmCA,EAAnC,IATL,GAWI,YAGF,IAAMH,EAAU,EAAe,CAC7BY,KAAM,CACJgI,SADI,WAEJC,OAFI,OAGJpL,IAHI,EAIJG,KAJI,EAKJd,QALI,QAMJT,WANI,EAOJJ,SAPI,QAQJlB,gBARI,MASJe,MAAO,UAVX,GAAgB,GAehB,OACE,yBACEwB,MAAO6C,EADT,MAEEpB,UAAWiB,EAAQY,MAElB5B,EALL,QgBWA8J,OI9Ba,SAAC3I,GACd,MAAwB4I,cAAxB,GAAOC,EAAP,KAAaC,EAAb,KACA,EAA4BF,IAA5B,WAAOG,EAAP,KAAeC,EAAf,KAEMC,EAAN,qBAAoCjJ,EAAP,KACvBkJ,GAAcH,IAAWE,EAAuBjJ,EAAH,KAAnD,GAEMmJ,EAAe,SAACN,GAAD,OAAmB,YACtCC,KACA,GACEE,MAEEH,GAAQ7I,EAAZ,QAA0BA,YACrB6I,GAAQ7I,EAAb,SAA4BA,cAG9B,OACE,kBAAC4I,IAAD,cAEI5I,cACA,iBAAmBA,EAAnB,OAAiC,CAC/Bf,QAASkK,GAAa,KAG1B,uBACEC,OAAQpJ,EADV,OAEE6I,KAFF,EAGEQ,QAASF,GAAa,KAGnBJ,GAAD,GAEA/I,EAhBR,YJeAsJ,S,SKrB+BtJ,GAC/B,IACEuJ,EAIEvJ,EALJ,gBAEEwJ,EAGExJ,EALJ,MAGE9B,EAEE8B,EALJ,aAIEiB,EACEjB,EALJ,QAMMyJ,EAAUC,cAEhB,EAA0C,cACxC,WAIE,OAHoCH,EAChCI,qBAD+C,GAAnD,OAGA,KALGC,EAAP,KAAsBC,EAAtB,KAeMC,EANsB7I,EAAA,MAAa,YAEvC,IACM3K,EAAuB,kBAD7B,IACc,MAAd,EACA,OAAOsT,IAAP,KAEF,GACI,CAAC,CAAEtT,MAAF,EAAwByT,KAAxB,EAA6CC,KAAK,IAYvD,OACE,2BACGR,GAAS,uBAAY/K,GAAIgL,GAD5B,GAEE,uBACEA,QADF,EAEEnT,MAFF,EAGE4I,SAfe,SAAC+K,GACpB,IAAM3T,EAAQ2T,SAAd,MACA,GACEN,0BAEFE,KACA7J,YAAkBA,WAAlBA,KAWK,oBAAgC,YAE/B,IAAMkK,EAAN,EACMH,EAAsB,kBAARG,EAAmBA,EAA1B,KAAb,EACM5T,EAAuB,kBAAR4T,EAAmBA,EAA1B,MAAd,EACMF,EAAqB,kBAARE,IAAP,IAA0BA,MACtC,OACE,uBAAUrM,IAAV,EAAsBvH,MAAOA,IAExB0T,GAFL,EAKIA,GAAO,sBAAKtN,QAAL,GAAmBX,UAAU,UAN1C,UL5BR4B,QM1Cc,SAACe,GACf,IAAQC,EAAkCD,EAA1C,SAAkBwI,EAAwBxI,EAA1C,KACA,EAA+BF,EAD/B,QACA,MAAQiC,EAAR,OAAc3B,EAAd,OAAoBuB,EAApB,SACA,OAAOuI,4BAAK,WAEChK,UAAW6B,EAAK7B,WAFjB,WAGPD,GAHL,MNyCAgD,WAbY,GAeZwI,Qb+Cc,SAACzL,GACf,IACE0L,EACE1L,EAFJ,IACO2L,EACH3L,EAFJ,IACY4L,EACR5L,EAFJ,MACmB6L,EACf7L,EAFJ,eACmC8L,EAC/B9L,EAFJ,SACgD+L,EADhD,QAIMC,EAAQC,cAENlK,EAASjC,EAAkB,iBAAnC,0CAOMoM,EAAU,iBAAO,CAAEC,UAAF,EAAmBC,UAAW,KAArD,QAEMhH,EAAIsC,gDAAV,GACA,EAKI/H,mBAAQ,WACV,SACO,CACL0M,KADK,EAELC,UAAWC,SACT/H,4CADiB,kBAFd,IAKLgI,OAAQD,SACN/H,4CADc,gBALX,IAQL4H,UAAW/M,MAAA,KAAWqI,gCAAX,sBAEP,YACE,IAAM+E,EAAeC,gBAArB,gBACMC,GAAeF,eAArB,eACA,MAAO,CACLG,UADK,EAELH,aAFK,EAGLE,mBAjBK,CAAEL,UAAF,EAAgBE,OAAhB,EAA2BJ,UAAW,MAsBpD,CAAChH,EAAGwG,EAAOE,EAAUI,EA5BxB,WACEG,EADF,OAEEC,EAFF,YAGEE,EAHF,SAIEJ,EAJF,YA8CMS,EAAiB,iBAAkB,YAEvC,IAAMC,EAAOC,eAAb,wBACA,OAAID,QAAJ,CAIA,MAEA,GAAIC,EAAJ,YAAoB,CAClB,IACMC,EADgBC,WAAWH,QAAaC,EAA9C,aACA,EACMG,EAAYF,GAAiBV,EAAnC,GACAa,EAAUF,YAAYD,EAAD,IAA+BV,EAApDa,QACK,CACL,IAAMH,EAAgBF,SAAtB,EACMI,EAAYF,GAAiBV,EAAnC,GACAa,EAAUF,YAAYD,EAAD,IAA+BV,EAApDa,IAGFJ,0CACC,CAACV,EAAMT,EAAOQ,EAAWN,EAAUI,EArBtC,WAuBMkB,EAAqB,iBAAkB,WACzChB,WAAkB,SAAAW,GAAE,OAAIF,EAAJ,QAEtB,CAACR,EAAMT,EAAOQ,EAAWN,EAAUI,EAAnC,SAHF,IAOMmB,EAA2B,iBAAkB,WACjD,IAAInB,EAAJ,UAGAA,cACA,IAAMoB,EAAQC,YAAW,WACvBrB,gBADF,KAGA1H,8BAA6B,WAC3BgJ,gBACAJ,IACAlB,oBAGD,CAACG,EAAMT,EAAOQ,EAAWN,EAAUI,EAAnC,SAdH,IAgBA3E,qBAAU,WAER,OADA/C,oCACO,WACLA,0CAED,CAAC6H,EAAMT,EAAOQ,EAAWN,EAAUI,EAAnC,SALH3E,IAOAA,qBAAU,WACRgG,YAAW,kBAAMF,MAAjBE,OACC,CAAClB,EAAMT,EAAOQ,EAAWN,EAAUI,EAAnC,SAFH3E,IAIAgG,YAAW,kBAAMF,MAAjBE,GAEA,IAAM7N,EAAQD,GAAe,WAG3B,MAAO,CACLsC,KAAM,CACJ0L,oBAAqB,6BAJV/B,GAAf,SAIuB,KAHRC,GAAf,SAEQ,KAEJ,kBAAmB,CACjB+B,UAAW,kBAET,2BAAM1B,iBAHS,uBAKjBpP,aALiB,EAMjB+Q,SAAU,UAEZ,wBAAyB,CACvBD,UAAW,8BAET,0BAAM1B,iBAFG,8BAOhB,CAACN,EAtBJ,GAAcjM,GAwBd,OACE,yBAAKS,UAAW8B,YAAK,OAAQD,EAAT,UAAyBrC,EAAzB,OAKhBkM,EAAA,KAAU,qBAAiBC,EAEvB,wBACE1M,IAAKkJ,GADP,GAGEpJ,QAAS4M,EAAe7C,EAAMX,MAGhC,wBAAoBlJ,IAAKkJ,GARnB,SatMhBuF,MZ/BY,SAACtM,GAEX,IAAMuM,EAAc,kBAAMvM,EAAN,WACdwM,EAAkB,kBAAMxM,YAAkBA,EAAxB,YAYxB,OALAiG,qBAAU,WAEN,OADAG,0CACO,kBAAMA,0CAAN,MAFXH,IAMI,uBACI4C,KAAM7I,EADV,KAEIyM,oBAFJ,GAGIpD,QAHJ,EAIIqD,sBAJJ,EAKIC,sBALJ,EAMI/L,SAAS,MAET,sBAAK9G,UAAQ,GACRkG,EADL,MAEKA,EAVT,MAaI,2BACI,uBAAQf,QAAR,EAA8BtD,MAAM,WAI5BqE,gBALZ,SASQA,QACA,uBAAQf,QAlCP,WACbe,QAAcA,EAAdA,OACAuM,KAgCuC5Q,MAAM,WAxBjD,SYkBFiR,YO1Ca,SAAqB5M,GAEhC,IACM6M,EADcC,iBAAO,IAA3B,IACA,QAEMC,EAAWD,iBAAjB,MACA,EAA4BlE,aAAe5I,EAA3C,OAAOgN,EAAP,KAAeC,EAAf,KAEMC,EAAc,CAChB9C,IAAM7H,GAAkBvC,EAAnB,MADW,IACqBA,EAAhC,IACLqK,IAAM9H,GAAkBvC,EAAnB,KAFW,IAEqBA,EAAhC,IACL0G,KAAM1G,QAHU,EAIhBmN,UAAWnN,aAAmB,GAGlC,GAAIkN,EAAJ,KAAsB,CAClB,IAAMzJ,EAAQyJ,wBAAd,KACIzJ,SAAJ,IACIyJ,YAAwBzJ,KAAxByJ,QAIJlN,YAAkBkN,MAAtB,IAA2CA,SAE3C,IAkBME,EAAU,EAAH,CACTL,SADS,EAETM,aApBiB,SAAC/W,GAElB,IAAIgX,EAAcC,WAAlB,GACID,EAAcJ,EAAlB,MAAmCI,EAAcJ,EAAdI,KAC/BA,EAAcJ,EAAlB,MAAmCI,EAAcJ,EAAdI,KAEnC,IAAME,EAAWC,wBAAmCP,EAApD,WACAD,KAEIjN,EAAJ,UACI6M,2BAAkC7M,EAAlC6M,aAWJa,YANgB,SAACtC,GAAQ2B,oBAOzBY,WANe,SAACvC,KAOhBpL,MALS,EAMT1J,MAAO0W,GANX,GAUA,OAAOhN,EAAP,SACI,aACI,OAiCL,SAAqBoN,GAExB,IAAQL,EAAkFK,EAA1F,SAAkBC,EAAwED,EAA1F,aAAgCM,EAA0DN,EAA1F,YAA6CO,EAA6CP,EAA1F,WAAyDpN,EAAiCoN,EAA1F,MAAgE9W,EAA0B8W,EAA1F,MAAuE1G,EAAmB0G,EAA1F,KAA6EhD,EAAagD,EAA1F,IAAkF/C,EAAQ+C,EAA1F,IAEMQ,EAAN,EAEA,OACI,kBAACtG,GAAD,MAASvG,KAAT,EAAa8M,OAAb,EAAmBC,WAAnB,SAAuClP,UAAU,0BAC7C,2BACIC,IADJ,EAEID,UAFJ,SAGIsI,KAHJ,QAIIhI,SAAU,mBAAOmO,EAAajC,SAApB,QACVjM,QALJ,EAMIH,OANJ,EAOI7B,MAAO6C,EAPX,MAQI1J,MARJ,EASI8T,IATJ,EAUIC,IAVJ,EAWI3D,KAAMA,IAEV,kBAACY,GAAD,KAAQnN,OAAR,EAAcoC,WAAY,IAflC,IAvCewR,CAAP,GACJ,QACI,OAIL,SAAyBX,GAE5B,IAAQL,EAAkFK,EAA1F,SAAkBC,EAAwED,EAA1F,aAAgCM,EAA0DN,EAA1F,YAA6CO,EAA6CP,EAA1F,WAAyDpN,EAAiCoN,EAA1F,MAAgE9W,EAA0B8W,EAA1F,MAAuE1G,EAAmB0G,EAA1F,KAEA,OACI,kBAAC9F,GAAD,MAASvG,KAAT,EAAa8M,OAAb,EAAmBjP,UAAU,2BACzB,4BAAQA,UAAR,uBAAyCK,QAAS,kBAAMoO,EAAa/W,EAAnB,KAAkCsS,8BADxF,MAEI,2BACI/J,IADJ,EAEID,UAFJ,gBAGIsI,KAHJ,SAII8G,UAJJ,SAKIC,QALJ,SAMI/O,SAAU,mBAAOmO,EAAajC,SAApB,QACVjM,QAPJ,EAQIH,OARJ,EASI1I,MATJ,EAUI4X,SAAUlO,EAVd,SAWImO,YAAanO,EAXjB,YAYI7C,MAAO6C,EAAM7C,QAEjB,4BAAQyB,UAAR,wBAA0CK,QAAS,kBAAMoO,EAAa/W,EAAnB,KAAkCsS,8BAjB7F,OARewF,CAAP,KPZVC,KJMa,CACXC,OAzCkB,SAAC5P,GACnB,IACA,EAA8BF,EAD9B,QACA,IAAQiC,EAAR,OAAcT,EAAd,QAAqBlB,EAArB,OAEMV,EAAQ,EAAe,CACzBqC,KAAM,CACFjE,UADE,SAIF,cAAe,CAGX,WAAY,CAERa,OAFQ,SAIR,kBAAmB,CACfzC,gBAAiB,iBAbrC,GAAc,GAoBd,OACI,kBAAC0M,GAAD,OAAQ1I,UAAS,eAAiB6B,EAAjB,cAAmCrC,EAAMqC,MAA1D,GAA4EoN,OAAK,IAC7E,kBAACvG,GAAD,KAAQ3M,MAAI,GAEJqF,UACAtC,EAAUsC,EAHlB,QAKI4I,kBAACtB,GAADsB,SACM5I,EARlB,aAkBAuO,MLlDiB,SAAC7P,GAClB,IACA,EAA8BF,EAD9B,QACgD,UAAhD,cAAQiC,EAAR,OAAcT,EAAd,QAAqBlB,EAArB,OACA,OACI,wBAAQF,UAAW6B,EAAK7B,WAAxB,GAA6CrH,kBAAgB,IACzD,sBACIuC,UADJ,EAEI1C,gBAFJ,EAGImD,OAAQyF,EAHZ,OAII1C,IAAK0C,SAAeA,EAAfA,eAAiCwO,GAErC9Q,EAAUsC,EARvB,cSwCFyO,aQhDmB,SAACzO,GACpB,IAAQlB,EAASkB,EAAjB,KACML,EAAOtJ,OAAA,gBACH,SAAAwH,GAAG,QAAMiB,EAAF,IAAJ,IAAmBA,QAEhC,OACE,gCAEIa,EAAA,KAAS,SAAA9B,GAEP,IAAM2L,EAAQ1T,EAAd,GAEA,OACE,sBAAK+H,IAAL,EAAevD,QAAf,EAAsBwB,SAAS,UAC7B,sBAAKsB,MAAL,MAAiBV,QAAS,IAD5B,GAIE,sBAAKU,MAAM,OAEP,mBAAO0B,EAAP,GAAiCA,KAAjC,WAAwDA,EAPhE,URsCR4P,MS5CY,SAAChQ,GAEX,IACI8I,EAGA9I,EAJJ,KAEI4L,EAEA5L,EAJJ,MAKA,EAA+BF,EAL/B,QAKA,MAAQiC,EAAR,OAAc3B,EAAd,OAAoBuB,EAApB,SAEMsO,EAAY,GAAe,iBAAO,CACpClO,KAAM,CACF,OAAQ,CACJxD,UADI,OAEJC,cAFI,aAGJH,YAHI,EAIJF,aAAc,GAElB,OAAQ,CACJ3B,UADI,uBAEJ0B,WAFI,EAGJG,YAHI,EAIJF,aAJI,EAKJC,cALI,EAMJZ,WANI,EAOJe,UAAW,UAEf,cAAe,CACXA,UAAW,aAlBvB,GAAkB,GAuBlB,SAEO,6BACH2R,YADG,EAEHC,YAFG,EAGHjQ,UAAW8B,YAAKiO,EAAD,KAAiBlO,EAAjB,YAHZ,KAQC+G,GACAA,SADAA,GAEA,sBAAQA,KAAMA,IAElB,+BAEQ8C,EAAA,KAAU,qBACN,sBAAUzM,IAAV,EAA0B6J,KAA1B,EAAsCF,KAAMA,SAjBzC,MTarBsH,KDKa,SAACpQ,GACd,IAEEQ,EASER,EAXJ,SAGEqQ,EAQErQ,EAXJ,UAOE4L,EAIE5L,EAXJ,MAQEsQ,EAGEtQ,EAXJ,WASE6L,EAEE7L,EAXJ,eAYA,EAAwBF,EAZxB,QAY0C,KAA1C,WAAQiC,EAAR,OAAcT,EAAd,QAEML,EAAO2K,EAAA,KAAU,YACrB,MACE,iBACE,aACE,SACF,aACE,OAAO5C,EAAP,WACF,QACE,MAAM,IAAIhE,MAAV,eAGN,OAAOsL,EAAP,MAGF,EAAoC,oBAAe,uBAA5CC,EAAP,KAAoBC,EAApB,KAOMC,EAAgB,GACpB,iBAAO,CACL1S,SADK,kBAELD,UAAW,qBAHf,GAAsB,GAQtB,IAAKmD,EAAL,OAAkB,OAAO,KAEzB,IAAMyP,EACJ,6BACEC,YAAa3Q,EADf,YAEEpI,MAAO2Y,GAAetP,EAFxB,GAGET,SAnBiB,SAAC+K,EAAD,GACnBiF,KACA,GAAchQ,MAkBZoQ,aAAA,aAAyB3P,EAAzB,kBAECA,EAAA,KAAS,YACR,IAAM6J,EAAQ1T,EAAd,GACA,OAAO,6BAAK+H,IAAL,EAAe2L,MAAf,EAA6BlT,MAAOuH,QAK3C0R,EAAajF,EAAA,KAAU,cAC3B,IAAMzM,EAAM8B,EAAZ,GACM6P,EAAsC,qBAAhBP,GAAR,IAAuClI,GACtDkI,IADL,EAEA,OACE,4BACEpR,IADF,EAEEkK,OAFF,EAGEzR,MAHF,EAIEmI,GAAIuB,MAAY,UAEduK,EAAe7C,EAPrB,OAYI+H,EACJ,4BAAQ9U,MAAI,GACTgF,YAAmBuI,gCADtB,GAEE,4BAAQ1P,MAAI,GAHhB,IAOMkX,EACJxH,wCACGvI,YADHuI,EADF,GAOMyH,EAAN,aAAmBjR,cAEnB,OACE,+BAAKE,UAAW8B,YAAK,OAAQD,EAAM0O,IAChCQ,GADH,GAEIA,GAHN,IChGA5F,KUnDW,SAACrL,GACV,IACA,EAA+BF,EAD/B,QACA,MAAQiC,EAAR,OAAc3B,EAAd,OAAoBuB,EAApB,SACA,OAAKI,EAAL,UAII,gCAAe7B,UAAW6B,EAAK7B,WAA/B,GACKlB,EAAUgB,EAFnB,WAFWhB,EAAUgB,EAAjB,Y,SCTO,SAASkR,KACtB,OAAO,kBAAC,GAAGlB,MAAJ,CAAUlH,KAAM1I,GAAK+Q,QAASvF,MAAOxL,GAAKgR,Q,yBC0EpCC,GApEH,WAGV,IAAMC,EAAUpK,KAWVqK,EAAY,CAChB,mBAVgB,CAChBhV,OAAQ,oBACR0B,QAAS,OACT,aAAc,CACZb,SAAU,OACVK,OAAQ,gBAQZ,OAEE,kBAAC,GAAGkS,KAAKC,OAAT,KAEE,kBAAC,GAAGD,KAAKE,MAAT,CAAe9P,GAAG,aAAahC,SAAU,IAAKW,MAAM,MAAM9D,UAAQ,GAGhE,kBAAC,GAAGwH,IAAJ,CAAQ/B,IAAK,CAACnE,gBAAiB,YAAa+B,QAAS,QAAShC,MAAI,EAAC9E,WAAS,GAC1E,iDACA,oDACA,kBAAC,IAAD,CAAe8I,SA9BV,0OAmCT,kBAAC,GAAGoC,IAAJ,CAAQhK,aAAW,EAACgI,IAAKkR,GAEvB,kBAAC,GAAGnP,IAAJ,CAAQ/B,IAAK,CAACpD,MAAO,iBAErB,kBAAC,GAAGmF,IAAJ,CAAQlC,UAAS,4BACf,kBAAC,GAAGmL,KAAJ,CAASnL,UAAU,SAAnB,YAKF,kBAAC,GAAGkC,IAAJ,CAAQlC,UAAS,4BACf,kBAAC,GAAGmL,KAAJ,CAASnL,UAAU,SACjB,yCAAeoR,EAAQ5S,MAAvB,IAA+B4S,EAAQ3S,UAKzChH,OAAO6Z,QAAQC,GAAOC,KAAI,YAAmB,IAAD,mBAAhBvS,EAAgB,KAAXvH,EAAW,KAC1C,OAAO,kBAAC,GAAGwK,IAAJ,CAAQjD,IAAKA,EAAKe,UAAS,4BAC/BtI,QAKP,2BACE,uBAAG+Z,KAAK,mDAAR,OADF,MACsE,uBAAGA,KAAK,4CAAR,OADtE,eACyI,uBAAGA,KAAK,+BAAR,kBCjEjJC,IAASC,OAAO,kBAAC,GAAD,MAASnK,SAASoK,eAAe,U","file":"static/js/main.952812e0.chunk.js","sourcesContent":["const attributeMap = {\r\n  bgColor: 'backgroundColor',\r\n};\r\n\r\nexport default attributeMap;\r\n","const classMap = {\r\n  scrollableX: 'scrollable scrollable-x',\r\n  scrollableY: 'scrollable scrollable-y',\r\n  borderBox: 'border-box',\r\n};\r\n\r\nexport default classMap;\r\n","\r\n  export const camelToSentenceCase = (string: string) => {\r\n    if (!string) return string;\r\n    const tokens = string\r\n      .replace(/([A-Z]+|[0-9]+)/g, ' $1')\r\n      .trim()\r\n      .split(' ');\r\n    return tokens\r\n      .filter((t) => t && t.length)\r\n      .map((token) => {\r\n        const trimmed = token.trim();\r\n        return trimmed[0].toUpperCase() + trimmed.substring(1);\r\n      })\r\n      .join(' ');\r\n  }\r\n\r\n  export const camelToKebabCase = (string: string) => {\r\n    if (!string) return string;\r\n    const tokens = string\r\n      .replace(/([A-Z]+)/g, ' $1')\r\n      .trim()\r\n      .split(' ');\r\n    return tokens\r\n      .map((token) => token.trim().toLowerCase())\r\n      .join('-');\r\n  }\r\n\r\n  export const toProperCase = (string: string) => {\r\n    if (!string) return string;\r\n    return string[0].toUpperCase() + string.substring(1);\r\n  }\r\n\r\n  export const mutateWhile = (\r\n    original: string,\r\n    condition: { (value: string): boolean },\r\n    transform: { (value: string): string },\r\n  ) => {\r\n    let result = original;\r\n    while (condition(result)) {\r\n      result = transform(result);\r\n    }\r\n    return result;\r\n  }\r\n\r\n  export const toCamelCase = (string: string) => {\r\n    if (!string) return string;\r\n    const temp = string.replace(/\\s/g, '').trim();\r\n    if (temp.length === 0) return '';\r\n    return temp[0].toLowerCase() + temp.substring(1);\r\n  }\r\n\r\n  export const removeDoubleSpaces = (string: string) => (\r\n    mutateWhile(\r\n      string,\r\n      (s) => s.indexOf('  ') >= 0,\r\n      (s) => s.replaceAll(/\\s\\s/g, ' '),\r\n    ).trim()\r\n  )\r\n\r\n","import attributeMap from './attributeMap';\r\nimport resolveAttributeValue from './resolveAttributeValue';\r\nimport classMap from './classMap';\r\nimport { camelToKebabCase } from '../util/string';\r\n\r\nexport type StyleBag = { style: any; classes: string[] };\r\nexport type BagKeyValue = {\r\n  bag: StyleBag;\r\n  key: string;\r\n  value?: any;\r\n  debug: boolean;\r\n};\r\n\r\nexport function getOrMakeStyle(x: BagKeyValue) {\r\n  const resolvedKey = Reflect.has(attributeMap, x.key)\r\n    ? (attributeMap as any)[x.key]\r\n    : x.key;\r\n  return { [resolvedKey]: resolveAttributeValue(resolvedKey, x.value) };\r\n}\r\n\r\nexport function createStyle(x: BagKeyValue) {\r\n  Object.assign(x.bag.style, getOrMakeStyle(x));\r\n  return true;\r\n}\r\n\r\nexport function createClass(x: BagKeyValue) {\r\n  const resolvedClass = Reflect.has(classMap, x.key)\r\n    ? (classMap as any)[x.key]\r\n    : camelToKebabCase(x.key);\r\n  x.bag.classes.push(resolvedClass);\r\n  return true;\r\n}\r\n","export default function resolveAttributeValue(key: string, value?: any) {\r\n  if (!value) return value;\r\n  return value.hex ? value.hex() : value;\r\n}\r\n","export interface ClassSwitches {\r\n  absolute?: boolean;\r\n\r\n  alignStart?: boolean;\r\n  alignCenter?: boolean;\r\n  alignEnd?: boolean;\r\n  alignStretch?: boolean;\r\n  alignBaseline?: boolean;\r\n  alignAuto?: boolean;\r\n\r\n  alignSelfStart?: boolean;\r\n  alignSelfCenter?: boolean;\r\n  alignSelfEnd?: boolean;\r\n  alignSelfStretch?: boolean;\r\n  alignSelfBaseline?: boolean;\r\n\r\n  anchorBottom?: boolean;\r\n  anchorLeft?: boolean;\r\n  anchorRight?: boolean;\r\n  anchorTop?: boolean;\r\n\r\n  beveled?: boolean;\r\n  block?: boolean;\r\n  borderBox?: boolean;\r\n\r\n  centerX?: boolean;\r\n  centerXY?: boolean;\r\n  centerY?: boolean;\r\n  clickable?: boolean;\r\n  coverImage?: boolean;\r\n\r\n  fill?: boolean;\r\n  fixed?: boolean;\r\n  fullWidth?: boolean;\r\n  fullWidthAlways?: boolean;\r\n\r\n  grow?: boolean;\r\n\r\n  hidden?: boolean;\r\n  horizontal?: boolean;\r\n\r\n  inline?: boolean;\r\n  inlineBlock?: boolean;\r\n\r\n  justifyStart?: boolean;\r\n  justifyCenter?: boolean;\r\n  justifyEnd?: boolean;\r\n\r\n  mobileCenter?: boolean;\r\n  mobileColumn?: boolean;\r\n  mobileOnly?: boolean;\r\n\r\n  noBr?: boolean;\r\n  noBreak?: boolean;\r\n  noMargin?: boolean;\r\n  noMobile?: boolean;\r\n  noOverflow?: boolean;\r\n  noPadding?: boolean;\r\n  noSelect?: boolean;\r\n  noTransform?: boolean;\r\n  noWrap?: boolean;\r\n\r\n  opaque?: boolean;\r\n  overlay?: boolean;\r\n\r\n  relative?: boolean;\r\n  root?: boolean;\r\n  round?: boolean;\r\n  rounded?: boolean;\r\n\r\n  scrollable?: boolean;\r\n  scrollableX?: boolean;\r\n  scrollableY?: boolean;\r\n  shrink?: boolean;\r\n  small?: boolean;\r\n  smaller?: boolean;\r\n  solid?: boolean;\r\n  spaced?: boolean;\r\n  square?: boolean;\r\n  sticky?: boolean;\r\n\r\n  tall?: boolean;\r\n  translucent?: boolean;\r\n\r\n  vertical?: boolean;\r\n\r\n  wide?: boolean;\r\n}\r\n\r\nconst switches: ClassSwitches = {\r\n  absolute: true,\r\n\r\n  alignStart: true,\r\n  alignCenter: true,\r\n  alignEnd: true,\r\n  alignStretch: true,\r\n  alignBaseline: true,\r\n  alignAuto: true,\r\n\r\n  alignSelfStart: true,\r\n  alignSelfCenter: true,\r\n  alignSelfEnd: true,\r\n  alignSelfStretch: true,\r\n  alignSelfBaseline: true,\r\n\r\n  anchorBottom: true,\r\n  anchorLeft: true,\r\n  anchorRight: true,\r\n  anchorTop: true,\r\n\r\n  beveled: true,\r\n  block: true,\r\n  borderBox: true,\r\n\r\n  centerX: true,\r\n  centerXY: true,\r\n  centerY: true,\r\n  clickable: true,\r\n  coverImage: true,\r\n\r\n  fill: true,\r\n  fixed: true,\r\n  fullWidth: true,\r\n  fullWidthAlways: true,\r\n\r\n  grow: true,\r\n\r\n  hidden: true,\r\n  horizontal: true,\r\n\r\n  inline: true,\r\n  inlineBlock: true,\r\n\r\n  justifyStart: true,\r\n  justifyCenter: true,\r\n  justifyEnd: true,\r\n\r\n  mobileCenter: true,\r\n  mobileColumn: true,\r\n  mobileOnly: true,\r\n\r\n  noBr: true,\r\n  noBreak: true,\r\n  noMargin: true,\r\n  noMobile: true,\r\n  noOverflow: true,\r\n  noPadding: true,\r\n  noSelect: true,\r\n  noTransform: true,\r\n  noWrap: true,\r\n\r\n  opaque: true,\r\n  overlay: true,\r\n\r\n  relative: true,\r\n  round: true,\r\n  rounded: true,\r\n\r\n  scrollable: true,\r\n  scrollableX: true,\r\n  scrollableY: true,\r\n  shrink: true,\r\n  small: true,\r\n  smaller: true,\r\n  solid: true,\r\n  spaced: true,\r\n  sticky: true,\r\n\r\n  tall: true,\r\n  translucent: true,\r\n\r\n  vertical: true,\r\n\r\n  wide: true,\r\n};\r\n\r\nexport default switches;\r\n","import { ReactNode } from 'react';\r\nimport { createStyle } from './functions';\r\nimport * as CSS from 'csstype';\r\n\r\nexport interface StyleAttributes {\r\n  \r\n  backgroundColor?: any;\r\n  bgColor?: any;\r\n\r\n  backgroundImage?: any,\r\n  backgroundRepeat?: any,\r\n  backgroundPosition?: any,\r\n  backgroundSize?: any,\r\n\r\n  border?: any;\r\n  borderTop?: any;\r\n  borderRight?: any;\r\n  borderBottom?: any;\r\n  borderLeft?: any;\r\n\r\n  borderRadius?: any;\r\n  borderTopLeftRadius?: any;\r\n  borderTopRightRadius?: any;\r\n  borderBottomLeftRadius?: any;\r\n  borderBottomRightRadius?: any;\r\n\r\n  borderColor?: any;\r\n\r\n  children?: ReactNode;\r\n  className?: string;\r\n  color?: string;\r\n  css?: CSS.Properties | any;\r\n  cursor?: 'pointer' | string;\r\n\r\n  data?: any;\r\n  dataProps?: any;\r\n\r\n  fontSize?: any;\r\n  fontStyle?: any;\r\n  fontWeight?: any;\r\n\r\n  id?: any;\r\n  innerProps?: any;\r\n\r\n  lineHeight?: number;\r\n\r\n  margin?: any;\r\n  marginTop?: any;\r\n  marginRight?: any;\r\n  marginBottom?: any;\r\n  marginLeft?: any;\r\n\r\n  minHeight?: any;\r\n  minWidth?: any;\r\n\r\n  onBlur?: Function;\r\n  onClick?: Function;\r\n  onChange?: Function;\r\n  onFocus?: Function;\r\n  onMouseUp?: Function;\r\n  onMouseDown?: Function;\r\n  onMouseMove?: Function;\r\n\r\n  opacity?: any;\r\n\r\n  padding?: any;\r\n  paddingTop?: any;\r\n  paddingRight?: any;\r\n  paddingBottom?: any;\r\n  paddingLeft?: any;\r\n  pseudo?: any;\r\n\r\n  textAlign?: any;\r\n  textTransform?: any;\r\n  title?: any;\r\n\r\n  // SPECIAL GROUPS\r\n\r\n  // size\r\n  width?: any;\r\n  height?: any;\r\n\r\n  // position\r\n  top?: any;\r\n  right?: any;\r\n  bottom?: any;\r\n  left?: any;\r\n}\r\n\r\nexport default {\r\n  backgroundColor: createStyle,\r\n  bgColor: createStyle,\r\n\r\n  backgroundImage: createStyle,\r\n  backgroundRepeat: createStyle,\r\n  backgroundPosition: createStyle,\r\n  backgroundSize: createStyle,\r\n\r\n  border: createStyle,\r\n  borderTop: createStyle,\r\n  borderRight: createStyle,\r\n  borderBottom: createStyle,\r\n  borderLeft: createStyle,\r\n\r\n  borderRadius: createStyle,\r\n  borderTopLeftRadius: createStyle,\r\n  borderTopRightRadius: createStyle,\r\n  borderBottomLeftRadius: createStyle,\r\n  borderBottomRightRadius: createStyle,\r\n\r\n  color: createStyle,\r\n  cursor: createStyle,\r\n\r\n  dataProps: createStyle,\r\n  fontSize: createStyle,\r\n  fontStyle: createStyle,\r\n  fontWeight: createStyle,\r\n\r\n  innerProps: createStyle,\r\n  lineHeight: createStyle,\r\n\r\n  margin: createStyle,\r\n  marginTop: createStyle,\r\n  marginRight: createStyle,\r\n  marginBottom: createStyle,\r\n  marginLeft: createStyle,\r\n\r\n  minHeight: createStyle,\r\n  minWidth: createStyle,\r\n\r\n  opacity: createStyle,\r\n\r\n  padding: createStyle,\r\n  paddingTop: createStyle,\r\n  paddingRight: createStyle,\r\n  paddingBottom: createStyle,\r\n  paddingLeft: createStyle,\r\n\r\n  pseudo: createStyle,\r\n\r\n  textAlign: createStyle,\r\n  textTransform: createStyle,\r\n  title: createStyle,\r\n  width: createStyle,\r\n  height: createStyle,\r\n\r\n  // position\r\n  top: createStyle,\r\n  right: createStyle,\r\n  bottom: createStyle,\r\n  left: createStyle,\r\n};\r\n","import { ArrayOfValueTypes, FunctionOrValueOrElement, KeyOrKeys, KeyValuePairs, ValueSymbolObject } from \"./types\"\r\n\r\nexport const range = (...args: number[]) => {\r\n  if (args.length < 1) throw new Error('Usage: range(n) or range(s, e)')\r\n  if (args.length > 2) throw new Error('Usage: range(n) or range(s, e)')\r\n\r\n  const { start, end } =\r\n    args.length === 1\r\n      ? { start: 1, end: args[0] }\r\n      : { start: args[0], end: args[1] }\r\n\r\n  const n = Math.max(start, end) - Math.min(start, end) + 1\r\n  const arr = new Array(n)\r\n  const step = end > start ? 1 : -1\r\n\r\n  let i = 0\r\n  let j = n\r\n  let k = start\r\n\r\n  while (j--) {\r\n    arr[i++] = k\r\n    k += step\r\n  }\r\n\r\n  return arr\r\n}\r\n\r\nexport const fnOrValue = (element: FunctionOrValueOrElement, param?: any) => {\r\n  if (typeof element === 'function') {\r\n    return (element as Function)(param)\r\n  }\r\n  return element\r\n}\r\n\r\n\r\nexport const inline = {\r\n    /**\r\n     * Returns a matching element from k1, v1, k2, v2... args following the defaultElement.\r\n     * Each key argument can be an array of alternative keys for the corresponding element.\r\n     * @param key - key: Selector value\r\n     * @param defaultElement - defaultElement: Default return value\r\n     */\r\n    switch: (\r\n      rootKey: ValueSymbolObject,\r\n      defaultValue: FunctionOrValueOrElement,\r\n      ...pairs: KeyValuePairs\r\n    ) => {\r\n      const matchSingleKey = (key: Function | ValueSymbolObject) => {\r\n        if (typeof key === 'function') {\r\n          return (key as Function)(rootKey)\r\n        }\r\n        return key === rootKey\r\n      }\r\n  \r\n      const matchKey = (key: KeyOrKeys) => {\r\n        if (Array.isArray(key)) {\r\n          return (key as ArrayOfValueTypes).some(matchSingleKey)\r\n        }\r\n        return matchSingleKey(key)\r\n      }\r\n  \r\n      for (let i = 0; i < pairs.length; i += 2) {\r\n        const key = pairs[i] as KeyOrKeys\r\n        if (matchKey(key)) {\r\n          return fnOrValue(pairs[i + 1], key)\r\n        }\r\n      }\r\n  \r\n      // return default value\r\n      return fnOrValue(defaultValue, rootKey)\r\n    }\r\n  }\r\n  \r\n  ","import { useMemo } from 'react';\r\nimport { createStyles, makeStyles } from '@material-ui/core/styles';\r\nimport { fnOrValue } from '../util/lang';\r\n\r\nconst useInlineStyle = (style: any, dependencies: any) => {\r\n  const cb = useMemo(() => (\r\n    makeStyles(() => (\r\n      createStyles({ ...fnOrValue(style) })\r\n    ))\r\n  ), [style, dependencies]);\r\n  return cb;\r\n};\r\nexport default useInlineStyle;\r\n","// import React from 'react';\r\nimport clsx from 'clsx';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { StyleBag, createClass } from './functions';\r\nimport classSwitches from './classSwitches';\r\nimport styleAttributes, { StyleAttributes } from './styleAttributes';\r\n\r\nfunction useStyleDirectives<T>(\r\n  directives: any,\r\n  ownProps: any,\r\n  tagName?: string,\r\n  ...baseClasses: string[]\r\n) {\r\n\r\n  const {\r\n    id,\r\n    children,\r\n    style,\r\n    className,\r\n    ref,\r\n    data,\r\n    pseudo,\r\n    innerProps,\r\n    css,\r\n    //events\r\n    onBlur,\r\n    onClick,\r\n    onChange,\r\n    onFocus,\r\n    onMouseUp,\r\n    onMouseDown,\r\n    onMouseMove,\r\n    // ...\r\n    ...other\r\n  } = directives;\r\n\r\n\r\n  const ignoredProps = {\r\n    id,\r\n    children,\r\n    style,\r\n    className,\r\n    ref,\r\n    data,\r\n    pseudo,\r\n    innerProps,\r\n    ownProps,\r\n    css,\r\n    onBlur,\r\n    onClick,\r\n    onChange,\r\n    onFocus,\r\n    onMouseUp,\r\n    onMouseDown,\r\n    onMouseMove,\r\n  };\r\n\r\n  const utilizedKeys: string[] = [];\r\n  const keys = Object.keys(other);\r\n\r\n  const bag: StyleBag = { \r\n    style: { \r\n      ...css, \r\n      ...style \r\n    }, \r\n    classes: [] \r\n  };\r\n  \r\n  // Process each directive (except ignored ones)\r\n  keys.forEach((key: any) => {\r\n    if (!Reflect.has(ignoredProps, key)) {\r\n      const value = directives[key];\r\n\r\n      if (Reflect.has(classSwitches, key)) {             \r\n        createClass({ bag, key, value, debug: false });       // If its a CLASS SWITCH\r\n        utilizedKeys.push(key);\r\n        return;\r\n      } \r\n\r\n      if (Reflect.has(styleAttributes, key)) {                // If its an ATTRIBUTE\r\n        (styleAttributes as any)[key]({ bag, key, value });\r\n        utilizedKeys.push(key);\r\n        return;\r\n      } \r\n            \r\n      if (value === true) {\r\n        createClass({ bag, key, value, debug: false });\r\n      }\r\n    \r\n    }\r\n  });\r\n\r\n  const props = { ...other };\r\n  utilizedKeys.forEach((key) => {\r\n    delete props[key];\r\n  });\r\n\r\n  const pseudoStyles = Object.keys(directives.pseudo || {}).reduce(\r\n    (acc: any, key) => {\r\n      const s = directives.pseudo[key];\r\n      const fullKey = key[0] === '&' ? key : `& :${key}`;\r\n      return Object.assign(acc, { [fullKey]: s });\r\n    },\r\n    {},\r\n  );\r\n\r\n  const usedStyles: any = makeStyles(() => {\r\n    const s: any = {};\r\n    if (Object.keys(bag.style).length) s.bag = bag.style;\r\n    if (Object.keys(pseudoStyles).length) s.pseudo = pseudoStyles;\r\n    return s;\r\n  })();\r\n\r\n  const events = {\r\n    onBlur,\r\n    onClick,\r\n    onChange,\r\n    onFocus,\r\n    onMouseUp,\r\n    onMouseDown,\r\n    onMouseMove,\r\n  }\r\n\r\n  const { dataProps, ...attr } = (directives as StyleAttributes);\r\n  const result = {\r\n    root: {\r\n      className: clsx(\r\n        className,\r\n        baseClasses,\r\n        tagName,\r\n        bag.classes,\r\n        usedStyles.bag,\r\n        usedStyles.pseudo,\r\n      ),\r\n    },\r\n    props: { ...(props as T), ...ignoredProps },\r\n    attr,\r\n    data: dataProps,\r\n    events,\r\n  };\r\n\r\n  return result;\r\n}\r\n\r\nexport default useStyleDirectives;\r\n","/* eslint jsx-quotes: [\"error\", \"prefer-double\"] */\r\nimport React, { ReactNode } from 'react';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardActionArea from '@material-ui/core/CardActionArea';\r\nimport CardActions from '@material-ui/core/CardActions';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport CardMedia from '@material-ui/core/CardMedia';\r\nimport Button from '@material-ui/core/Button';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { camelToSentenceCase } from './util/string';\r\n\r\nconst useStyles = makeStyles({\r\n  root: {\r\n    maxWidth: 345,\r\n  },\r\n  media: {\r\n    height: 140,\r\n  },\r\n});\r\n\r\nexport type MediaCardActionMap = {\r\n  [index: string]: Function;\r\n};\r\nexport type MediaCardProps = {\r\n  title?: string;\r\n  description?: string;\r\n  children?: ReactNode;\r\n  image?: any;\r\n  onClick?: Function;\r\n  footerActions?: MediaCardActionMap;\r\n};\r\n\r\nexport default function MediaCard(props: MediaCardProps) {\r\n  const {\r\n    title, description, image, onClick, footerActions, children,\r\n  } = props;\r\n  const classes = useStyles();\r\n  return (\r\n    <Card className={classes.root}>\r\n      <CardActionArea onClick={() => onClick && onClick()}>\r\n        {image && (\r\n          <CardMedia\r\n            className={classes.media}\r\n            image={image.url}\r\n            title={title}\r\n          />\r\n        )}\r\n        <CardContent>\r\n          {title && (\r\n            <Typography gutterBottom variant=\"h5\" component=\"h2\">\r\n              {title}\r\n            </Typography>\r\n          )}\r\n\r\n          {description && (\r\n            <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\r\n              {description}\r\n            </Typography>\r\n          )}\r\n\r\n          {children && children}\r\n        </CardContent>\r\n      </CardActionArea>\r\n      {footerActions && (\r\n        <CardActions>\r\n          {Object.keys(footerActions).map((key) => (\r\n            <Button\r\n              key={key}\r\n              size=\"small\"\r\n              color=\"primary\"\r\n              onClick={() => footerActions![key]()}\r\n            >\r\n              {camelToSentenceCase(key)}\r\n            </Button>\r\n          ))}\r\n        </CardActions>\r\n      )}\r\n    </Card>\r\n  );\r\n}\r\n","import React from 'react';\r\nimport useInlineStyle from './directives/useInlineStyle';\r\n\r\nconst defaultMinCount = 0;\r\n\r\nexport type UiCounter = { min?: number; title?: string };\r\nexport default (props: UiCounter) => {\r\n  \r\n  const ref = React.useRef({ count: 0 }).current; \r\n\r\n  if (\r\n    ++ref.count <=\r\n    (typeof props.min !== 'undefined' ? props.min : defaultMinCount)\r\n  ) {\r\n    return null;\r\n  }\r\n  \r\n  const classes = useInlineStyle({\r\n    root: {\r\n      position: 'absolute',\r\n      zIndex: 999999,\r\n      top: 0,\r\n      left: 0,\r\n      padding: '0 3px',\r\n      lineHeight: 1,\r\n      fontSize: '.7rem',\r\n      backgroundColor: 'red',\r\n      color: 'white',\r\n    }\r\n  }, [])();\r\n\r\n\r\n  return (\r\n    <div\r\n      title={props.title}\r\n      className={classes.root}\r\n    >\r\n      {ref.count}\r\n    </div>\r\n  );\r\n};\r\n","import React, { ReactNode } from 'react';\r\n\r\n\r\nimport { PropsDirectives, useStyleDirectives } from './directives';\r\n\r\ntype DivProps = { children?: ReactNode, id?: string };\r\n\r\nexport const div = (directives: DivProps & PropsDirectives) => {\r\n  const { children, ...other }      = directives;\r\n  const { root, data, events } = useStyleDirectives<DivProps>(other, null);\r\n  return (\r\n    <div {...data} className={root.className} {...events}>\r\n      {children}\r\n    </div>\r\n  );\r\n};\r\n\r\ntype RowProps = { children?: ReactNode, id?: string };\r\nexport const row = (directives: RowProps & PropsDirectives) => {\r\n  const { children, ...other } = directives;\r\n  const { root, data, events  } = useStyleDirectives<RowProps>(\r\n    other,\r\n    null,\r\n    'Row',\r\n    'flex row',\r\n  );\r\n  return (\r\n    <div {...data} className={root.className} {...events}>\r\n      {children}\r\n    </div>\r\n  );\r\n};\r\n\r\ntype ColProps = { children?: ReactNode, id?: string };\r\nexport const col = (directives: ColProps & PropsDirectives) => {\r\n  const { children, ...other } = directives;\r\n  const { root, data, events  } = useStyleDirectives<ColProps>(\r\n    other,\r\n    null,\r\n    'Col',\r\n    'flex column',\r\n  );\r\n  return (\r\n    <div {...data} className={root.className} {...events}>\r\n      {children}\r\n    </div>\r\n  );\r\n};\r\n\r\n","import { loremIpsum } from 'lorem-ipsum'\r\n\r\nexport type LoremIpsumOptions = {\r\n  count: number\r\n  format: 'plain' | 'html' | undefined\r\n  paragraphLowerBound: number | undefined\r\n  paragraphUpperBound: number | undefined\r\n  // random: Math.random,     // A PRNG function\r\n  sentenceLowerBound: number | undefined\r\n  sentenceUpperBound: number | undefined\r\n  suffix: string | undefined\r\n  units: 'paragraphs' | 'sentences' | 'words' | undefined\r\n  words?: string[]\r\n}\r\n\r\nexport const options: LoremIpsumOptions = {\r\n  count: 1, // Number of \"words\", \"sentences\", or \"paragraphs\"\r\n  format: 'plain', // \"plain\" or \"html\"\r\n  paragraphLowerBound: 3, // Min. number of sentences per paragraph.\r\n  paragraphUpperBound: 7, // Max. number of sentences per paragarph.\r\n  // random: Math.random,     // A PRNG function\r\n  sentenceLowerBound: 5, // Min. number of words per sentence.\r\n  sentenceUpperBound: 15, // Max. number of words per sentence.\r\n  suffix: '\\n', // Line ending, defaults to \"\\n\" or \"\\r\\n\" (win32)\r\n  units: 'words' // paragraph(s), \"sentence(s)\", or \"word(s)\"\r\n  // words: [\"ad\", ...]       // Array of words to draw from\r\n}\r\n\r\nfunction words(count: number, dictionary?: string[]) {\r\n  return loremIpsum({\r\n    ...options,\r\n    // overrides\r\n    count,\r\n    units: 'words',\r\n    words: dictionary\r\n  })\r\n}\r\n\r\nfunction sentences(count: number, dictionary?: string[]) {\r\n  return loremIpsum({\r\n    ...options,\r\n    // overrides\r\n    count,\r\n    units: 'sentences',\r\n    words: dictionary\r\n  })\r\n}\r\n\r\nfunction paragraphs(count: number, dictionary?: string[]) {\r\n  return loremIpsum({\r\n    ...options,\r\n    // overrides\r\n    count,\r\n    units: 'paragraphs',\r\n    words: dictionary\r\n  })\r\n}\r\n\r\nexport default {\r\n  words,\r\n  sentences,\r\n  paragraphs\r\n}\r\n","/* eslint jsx-quotes: [\"error\", \"prefer-double\"] */\r\nimport React, { \r\n  useEffect, \r\n  useRef, \r\n  ReactNode, \r\n  useMemo \r\n} from 'react';\r\nimport clsx from 'clsx';\r\nimport { Paper } from '@material-ui/core';\r\nimport { useTheme } from '@material-ui/core/styles';\r\n\r\nimport { inline } from '../util/lang';\r\n\r\nimport {\r\n  PropsDirectives,\r\n  useStyleDirectives,\r\n  useInlineStyle,\r\n} from '../directives';\r\nimport './style.css';\r\n\r\n/**\r\n * colSpan: (Optional) number of columns the item spans.  Default is 1.\r\n * image: (Optional) cover image for the card.\r\n *\r\n */\r\nexport interface IMasonryItem {\r\n  colSpan?: number;\r\n  image?: any;\r\n  title?: string;\r\n  description?: string;\r\n  onClick?: Function;\r\n}\r\n\r\n/**\r\n * min: Min value for the grid's minmax(min, max) function. Default 150px.\r\n * max: Max value for the grid's minmax(min, max) function. Default 1fr.\r\n * items: IMasonryItem[]\r\n */\r\nexport type MasonryProps = {\r\n  min?: any;\r\n  max?: any;\r\n  items: IMasonryItem[];\r\n  elementForItem?: (item: IMasonryItem, index: number) => ReactNode;\r\n  revision: number,\r\n};\r\n\r\nconst ElementContainer = (props: any) => {\r\n  const { element, colSpan, image } = props;\r\n  const inline = useInlineStyle(() => {\r\n    const root: any = {};\r\n    if (colSpan) {\r\n      root.gridColumnEnd = `span ${colSpan}`;\r\n    }\r\n    return {\r\n      root,\r\n      image: { backgroundImage: `url(\"${image}\")` },\r\n    };\r\n  }, [colSpan, image])();\r\n\r\n  return (\r\n    <div className={clsx('masonry-item', 'relative', inline.root)}>\r\n      <div className=\"content fill\">{element}</div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport const DefaultMasonryItem = (\r\n  directives: IMasonryItem & PropsDirectives,\r\n) => {\r\n  const {\r\n    colSpan, image, title, description, onClick, ...d\r\n  } = directives;\r\n  const { root } = useStyleDirectives<IMasonryItem>(\r\n    d,\r\n    null,\r\n    'MasonryItem',\r\n    'masonry-item',\r\n  );\r\n  const inline = useInlineStyle(() => ({\r\n    root: { gridColumnEnd: colSpan ? `span ${colSpan}` : null },\r\n    image: { backgroundImage: `url(\"${image}\")` },\r\n  }), [colSpan, image])();\r\n  return (\r\n    // eslint-disable-next-line\r\n    <div\r\n      className={clsx(root.className, inline.root)}\r\n      onClick={() => onClick && onClick()}\r\n    >\r\n      <Paper className=\"content\">\r\n        {image && <div className={clsx('cover-image', inline.image)} />}\r\n        {title && <div className=\"title\">{title}</div>}\r\n        {description && <div className=\"desc\">{description}</div>}\r\n      </Paper>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst Masonry = (directives: MasonryProps & PropsDirectives) => {\r\n  const {\r\n    min, max, items, elementForItem, revision, ...d\r\n  } = directives;\r\n\r\n  const theme = useTheme();\r\n\r\n  const { root } = useStyleDirectives<MasonryProps>(\r\n    d,\r\n    null,\r\n    'Masonry',\r\n    'ui-masonry-grid masonry-grid grid',\r\n  );\r\n\r\n  const mutable = useRef({ resizing: false, gridItems: [] }).current;\r\n\r\n  const g = document.getElementsByClassName('masonry-grid')[0];\r\n  const { \r\n    grid, \r\n    rowHeight, \r\n    rowGap, \r\n    gridItems \r\n  } = useMemo(() => {\r\n    if (!g) return { rowHeight: 0, rowGap: 0, gridItems: [] };\r\n    return {\r\n      grid: g,\r\n      rowHeight: parseInt(\r\n        window.getComputedStyle(g).getPropertyValue('grid-auto-rows'), 10,\r\n      ),\r\n      rowGap: parseInt(\r\n        window.getComputedStyle(g).getPropertyValue('grid-row-gap'), 10,\r\n      ),\r\n      gridItems: Array.from(document.getElementsByClassName('masonry-item'))\r\n        .map(\r\n          (e: any) => {\r\n            const innerElement = e.querySelector('.content > *');\r\n            const heightRatio = +innerElement.getAttribute('heightratio');\r\n            return {\r\n              container: e,\r\n              innerElement,\r\n              heightRatio,\r\n            };\r\n          }\r\n        ),\r\n    };\r\n  }, [g, items, revision, mutable.resizing]);\r\n  \r\n  // const resizeGridItem = React.useCallback((item: any) => {\r\n  //   const grid = document.getElementsByClassName('masonry-grid')[0];\r\n  //   const rowHeight = parseInt(\r\n  //     window.getComputedStyle(grid).getPropertyValue('grid-auto-rows'), 10,\r\n  //   );\r\n  //   const rowGap = parseInt(\r\n  //     window.getComputedStyle(grid).getPropertyValue('grid-row-gap'), 10,\r\n  //   );\r\n  //   const innerEllement = item.querySelector('.content > *');\r\n  //   // const heightRatio = innerEllement.get\r\n  //   const rowSpan = Math.ceil(\r\n  //     innerEllement.getBoundingClientRect().height / (rowHeight + rowGap),\r\n  //   );\r\n  //   item.style.gridRowEnd = `span ${rowSpan}`;\r\n  // }, []);\r\n\r\n  const resizeGridItem = React.useCallback((gi: any) => {\r\n    \r\n    const rect = gi.innerElement.getBoundingClientRect();\r\n    if (rect.width === 0) {\r\n      return;\r\n    }\r\n\r\n    let rowSpan;\r\n\r\n    if (gi.heightRatio) {\r\n      const impliedHeight = Math.round(rect.width * gi.heightRatio);\r\n      const heightWithGap = impliedHeight + rowGap;\r\n      const remainder = heightWithGap % (rowHeight + rowGap);\r\n      rowSpan = Math.round((heightWithGap - remainder) / (rowHeight + rowGap));\r\n    } else {\r\n      const heightWithGap = rect.height + rowGap;\r\n      const remainder = heightWithGap % (rowHeight + rowGap);\r\n      rowSpan = Math.round((heightWithGap - remainder) / (rowHeight + rowGap));\r\n    }\r\n\r\n    gi.container.style.gridRowEnd = `span ${rowSpan}`;\r\n  }, [grid, items, gridItems, revision, mutable.resizing]);\r\n\r\n  const resizeAllGridItems = React.useCallback(() => {\r\n      gridItems.forEach(gi => resizeGridItem(gi));\r\n    },\r\n    [grid, items, gridItems, revision, mutable.resizing, resizeGridItem]\r\n  );\r\n\r\n  // Triggers\r\n  const handleResizeAllGridItems = React.useCallback(() => {\r\n    if (mutable.resizing) {\r\n      return;\r\n    }\r\n    mutable.resizing = true;\r\n    const timer = setTimeout(() => {\r\n      mutable.resizing = false;\r\n    }, 100);\r\n    window.requestAnimationFrame(() => {\r\n      clearTimeout(timer);\r\n      resizeAllGridItems();\r\n      mutable.resizing = false;\r\n    });\r\n    \r\n  }, [grid, items, gridItems, revision, mutable.resizing, resizeAllGridItems]);\r\n  \r\n  useEffect(() => {\r\n    window.addEventListener('resize', handleResizeAllGridItems);\r\n    return () => {\r\n      window.removeEventListener('resize', handleResizeAllGridItems);\r\n    };\r\n  }, [grid, items, gridItems, revision, mutable.resizing, handleResizeAllGridItems]);\r\n\r\n  useEffect(() => {\r\n    setTimeout(() => handleResizeAllGridItems(), 100);\r\n  }, [grid, items, gridItems, revision, mutable.resizing, handleResizeAllGridItems]);\r\n\r\n  setTimeout(() => handleResizeAllGridItems(), 0);\r\n\r\n  const style = useInlineStyle(() => {\r\n    const minval = min || '150px';\r\n    const maxval = max || '1.4fr';\r\n    return {\r\n      root: {\r\n        gridTemplateColumns: `repeat(auto-fill, minmax(${minval},${maxval}))`,\r\n        '& .masonry-item': {\r\n          boxShadow: inline.switch(\r\n            null, 'inherit', \r\n            () => theme.palette.type === 'light', '2px 2px 4px #9c9c9c',\r\n          ),\r\n          borderRadius: 3,\r\n          overflow: 'hidden',\r\n        },\r\n        '& .masonry-item:hover': {\r\n          boxShadow: inline.switch(\r\n            null, '3px 3px 6px #9c9c9c', \r\n            () => theme.palette.type === 'dark', '0px 0px 4px #55555522',\r\n          ),\r\n        },\r\n      },\r\n    };\r\n  }, [min, max])();\r\n\r\n  return (\r\n    <div className={clsx('root', root.className, style.root)}>\r\n      {\r\n        /* eslint-disable react/jsx-props-no-spreading */\r\n        /* eslint-disable no-confusing-arrow */\r\n        /* eslint-disable react/no-array-index-key */\r\n        items.map((item, index) => elementForItem\r\n          ? (\r\n            <ElementContainer\r\n              key={index}\r\n              {...item}\r\n              element={elementForItem(item, index)}\r\n            />\r\n          ) : (\r\n            <DefaultMasonryItem key={index} {...item} />\r\n          ))\r\n      }\r\n    </div>\r\n  );\r\n};\r\nexport default Masonry;\r\n","import React, { ReactNode, useEffect, useState } from 'react';\r\n\r\n// MUI\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport Slide from '@material-ui/core/Slide';\r\nimport { TransitionProps } from '@material-ui/core/transitions';\r\nimport Button from '@material-ui/core/Button';\r\n\r\n// components\r\nimport { div as Div } from './Layout';\r\n\r\nconst Transition = React.forwardRef(function Transition(\r\n    props: TransitionProps & { children?: React.ReactElement<any, any> },\r\n    ref: React.Ref<unknown>) {\r\n    return <Slide direction=\"down\" ref={ref} {...props} />;\r\n});\r\n\r\ntype ModalProps = {show: boolean, title?: ReactNode, body?: ReactNode, onClose: Function, onEscape?: Function, onOk?: Function};\r\n\r\nconst Modal = (props: ModalProps) => {\r\n\r\n    const handleClose = () => props.onClose();\r\n    const handleEscapeKey = () => props.onEscape && props.onEscape();\r\n\r\n    const handleOk = () => {\r\n        props.onOk && props.onOk();\r\n        handleClose();\r\n    }\r\n\r\n    useEffect(() => {\r\n        document.addEventListener(\"keydown\", handleEscapeKey, false);\r\n        return () => document.removeEventListener(\"keydown\", handleEscapeKey, false);\r\n    }, []);\r\n    \r\n    return (\r\n        <Dialog\r\n            open={props.show}\r\n            TransitionComponent={Transition}\r\n            onClose={handleClose}\r\n            disableBackdropClick\r\n            disableEscapeKeyDown\r\n            maxWidth=\"lg\"\r\n        >\r\n            <Div relative>\r\n                {props.title}\r\n                {props.body}\r\n            </Div>\r\n\r\n            <DialogActions>\r\n                <Button onClick={handleClose} color=\"default\">\r\n                    {\r\n                        // For semantic reasons: \r\n                        // if the 'Close' button is juxtaposed with 'OK' button, it should say 'Cancel'\r\n                        props.onOk ? 'Cancel' : 'Close'\r\n                    }\r\n                </Button>\r\n                {\r\n                    props.onOk &&\r\n                    <Button onClick={handleOk} color=\"default\">\r\n                        OK\r\n                    </Button>\r\n                }                \r\n            </DialogActions>\r\n            \r\n        </Dialog>\r\n    )\r\n}\r\n\r\nexport default Modal;","export const isString = value => typeof value === 'string';\r\nexport const isNumber = value => typeof value === 'number';\r\nexport const isUndefined = value => value === undefined;\r\nexport const isNull = value => value === null;\r\nexport const isNullOrUndefined = value => isUndefined(value) || isNull(value);\r\nexport const isJsonPath = value => isString(value) ? value.substring(0, 7) === 'json://' : false;\r\n\r\n","export default class Throttle {\r\n    \r\n    nextCallback?: Function;\r\n    lastKnownParams?: any[];\r\n\r\n    ticking = false;\r\n\r\n    invokeWithAnimationFrame(callback: Function, ...params: any[]) {\r\n        \r\n        this.nextCallback = callback;\r\n        this.lastKnownParams = params;\r\n\r\n        if (!this.ticking) {\r\n\r\n            const _this = this;\r\n\r\n            const dispatch = (callback: Function, ...params: any[]) => {\r\n                _this.ticking = true;\r\n                _this.nextCallback = undefined;\r\n                _this.lastKnownParams = undefined;\r\n                window.requestAnimationFrame(() => {\r\n                    callback(...params);\r\n                    _this.ticking = false;\r\n                    if (_this.nextCallback) {\r\n                        dispatch(_this.nextCallback, ..._this.lastKnownParams!);            \r\n                    }\r\n                });\r\n            }\r\n\r\n            dispatch(this.nextCallback, ...this.lastKnownParams);\r\n\r\n        }\r\n    }\r\n}","import React, { ReactNode } from 'react';\r\nimport { PropsDirectives, useStyleDirectives } from '../directives';\r\nimport * as ui from '../Layout';\r\nimport { fnOrValue } from '../util/lang';\r\n\r\nexport class PanelProps { \r\n    sticky?:    boolean = false;\r\n    stickyTop?: number  = 0;\r\n    children?:  ReactNode;\r\n}\r\n\r\nconst _ownProps = new PanelProps();\r\n\r\nexport const Panel = (directives: PanelProps & PropsDirectives) => {\r\n    const { ...other }          = directives;\r\n    const { root, props, data } = useStyleDirectives<PanelProps>(other, _ownProps, undefined,'page-panel');\r\n    return (\r\n        <ui.col className={root.className} {...data} alignSelfStretch> \r\n            <ui.div \r\n                relative \r\n                alignSelfStart\r\n                sticky={props.sticky} \r\n                top={props.sticky ? props.stickyTop : undefined} \r\n            >\r\n                {fnOrValue(props.children)}\r\n            </ui.div>\r\n        </ui.col>\r\n    )\r\n};\r\n\r\n\r\nexport default Panel;","import { isNumber } from 'lodash';\r\nimport ui from '..';\r\n\r\nexport type ColorPortion = { color: string, parts?: number };\r\nexport type ColorNameOrPortion = string|ColorPortion;\r\n\r\ninterface ParsedColor { color: string, parts: number };\r\n\r\nexport type StripeOptionsType = {\r\n    angle?: number,\r\n    size?: any,\r\n    colors?: ColorNameOrPortion[],\r\n};\r\n\r\nconst defaultProps = { angle: 90 };\r\nfunction colorFromString(color: string) {\r\n    const tokens = color.split(' ');\r\n    if (tokens.length === 1) return { color: tokens[0], parts: 1 };\r\n    if (tokens.length === 2) return { color: tokens[0], parts: +tokens[1] };\r\n    throw new Error('Max number of color tokens expected is 2');\r\n}\r\nfunction parseColor(color: ColorNameOrPortion) {\r\n    if (typeof color === 'string') return colorFromString(color);\r\n    return color as ParsedColor;\r\n}\r\nfunction generateStripesStyle(params: any) {\r\n    const type = 'linear-gradient';\r\n    const { angle } = params;\r\n    const colors = params.colors ? params.colors.map((c: ColorNameOrPortion) => parseColor(c)) : null;\r\n    \r\n    const partCount: number = colors.reduce((total: number, c: ParsedColor) => (+total) + c.parts, 0);\r\n    const steps = partCount * 2;\r\n    const step = 100 / steps;\r\n\r\n    const colorCount = colors.length;\r\n    const n = colorCount * 2;\r\n\r\n    const outSegments: string[] = [];\r\n    let distance = 0;\r\n    \r\n    for (let i = 0; i < n; i++) {\r\n        const index = i % colorCount;\r\n        const nextIndex = (i + 1) % colorCount;\r\n        distance += step * colors[index].parts;\r\n        outSegments.push(colors[index].color + ' ' + distance.toFixed(2) + '%');\r\n        if (i < n - 1) {\r\n            outSegments.push(colors[nextIndex].color + ' ' + distance.toFixed(2) + '%');\r\n        }\r\n    }\r\n\r\n    const size = params.size || steps;\r\n\r\n    const styleProps = {\r\n        backgroundImage: `${type}(${angle}deg, ${outSegments.join(', ')})`,\r\n        backgroundSize: isNumber(size) ? `${size.toFixed(2)}px ${size.toFixed(2)}px` : size,\r\n    };\r\n\r\n    return styleProps;\r\n}\r\n\r\nexport function createStripes(options: StripeOptionsType) {\r\n    const params = { ...defaultProps, ...options };\r\n    return generateStripesStyle(params);\r\n}\r\n","export type ColorPortion = { color: string, percentage?: number };\r\nexport type ColorNameOrPortion = string|ColorPortion;\r\n\r\nexport type LinearGradientSpecification = {\r\n    repeat?: boolean,\r\n    angle?: number,\r\n    colors?: ColorNameOrPortion[],\r\n};\r\n\r\nfunction parseColor(color: ColorNameOrPortion) {\r\n    function colorFromString(color: string) {\r\n        const tokens = color.split(' ');\r\n        if (tokens.length>2) {\r\n            throw new Error('Due to current limitation of this function, colors should be canonical without any spaces, e.g.: rgb(255,128,0,0.8) 75% is a valid color and stop pair.')\r\n        }\r\n        return tokens;\r\n    }    \r\n    if (typeof color === 'string') return colorFromString(color);\r\n    return [ color.color, color.percentage?.toString()];\r\n}\r\n\r\nfunction generateLinearGradientStyle(options: LinearGradientSpecification|LinearGradientSpecification[]) {\r\n    \r\n    const gradients: LinearGradientSpecification[] = Array.isArray(options) ? options : [options];\r\n\r\n    const functions = gradients.map((g: any) => {\r\n        const colors = g.colors.map((c: ColorNameOrPortion) => parseColor(c));\r\n        const functionName = g.repeat ? 'repeating-linear-gradient' : 'linear-gradient';\r\n        return `${functionName}(${g.angle}deg, ${colors.map((tuple: string[]) => tuple.join(' ')).join(', ')})`;\r\n    })\r\n\r\n    return { backgroundImage: functions.join(', ') };\r\n}\r\n\r\nexport function createLinearGradient(options: LinearGradientSpecification|LinearGradientSpecification[]) {\r\n    return generateLinearGradientStyle(options);\r\n}\r\n","import React from 'react';\r\n\r\nexport type RGBA = { r: number, g: number, b: number, a: number };\r\n\r\nexport type BoxShadowOptions = { \r\n    inset?: boolean,\r\n    xOffset?: number,\r\n    yOffset?: number,\r\n    blur?: number,\r\n    spread?: number,\r\n    rgba?: RGBA,\r\n    hex?: string,\r\n};\r\n\r\nexport const BoxShadowDefaults = {\r\n    xOffset: 0,\r\n    yOffset: 0,\r\n    blur: 5,\r\n    spread: 0,\r\n    rgba: { r: 0, g: 0, b: 0, a: 0.75 } as RGBA,\r\n};\r\n\r\nexport const createBoxShadow = (props: BoxShadowOptions) => {\r\n    const x = { ...BoxShadowDefaults, ...props };\r\n    const colorString = props.rgba \r\n        ? `rgba(${x.rgba.r}, ${x.rgba.g}, ${x.rgba.b}, ${x.rgba.a})`\r\n        : props.hex;\r\n\r\n    const inset = props.inset ? 'inset ' : '';\r\n    const value = inset + `${x.xOffset}px ${x.yOffset}px ${x.blur}px ${x.spread}px ${colorString}`;\r\n    return {\r\n        \"-webkit-box-shadow\": value,\r\n        \"-moz-box-shadow\": value,\r\n        \"box-shadow\": value,\r\n    }\r\n}\r\n\r\n","import {useState, useEffect, useRef} from 'react'; \r\nconst isClient = typeof window === 'object'; \r\nconst gridSizeValues: any = { \r\n    xs: 1, \r\n    sm: 2, \r\n    md: 3, \r\n    lg: 4, \r\n    xl: 5, \r\n    xxl: 6, \r\n    xxxl: 7, \r\n}; \r\nconst breakpointSystem = {\r\n    bootstrap: [ \r\n        [1600, 'xxxl'], \r\n        [1400, 'xxl'], \r\n        [1200, 'xl'], \r\n        [992, 'lg'], \r\n        [768, 'md'], \r\n        [576, 'sm'] \r\n    ],\r\n    material: [ \r\n        [1920, 'xl'], \r\n        [1280, 'lg'], \r\n        [960, 'md'], \r\n        [600, 'sm'] \r\n    ],\r\n}\r\nconst getGridSize = (system: 'material' | 'bootstrap') => { \r\n    if(!isClient) return 'xs'; \r\n    const breaks = breakpointSystem[system];\r\n    for(let x of breaks) { \r\n        if(window.innerWidth >= x[0]) { \r\n            return x[1] as string; \r\n        } \r\n    } \r\n    return 'xs'; \r\n} \r\n\r\nconst makeGridSizeResult = (code: string) => ({ code, value: gridSizeValues[code] });\r\nexport const useGridSize = (system: 'material' | 'bootstrap') => {                          // useGridSize\r\n    const ref = useRef({ value: 'xs', ticking: false }).current;\r\n    const [state, setState] = useState(() => makeGridSizeResult(getGridSize(system))); \r\n    useEffect(\r\n        () => windowEventHandler(\r\n            ref, \r\n            (gridSize: any) => setState(makeGridSizeResult(gridSize)), \r\n            'resize', \r\n            () => getGridSize(system)\r\n        )\r\n    , []); \r\n\r\n    return state; \r\n} \r\n\r\nfunction getWindowHeight() { return window.innerHeight }\r\nexport const useWindowHeight = () => {                                                      // useWindowHeight\r\n    const ref = useRef({ value: 0, ticking: false }).current;\r\n    const [state, setState] = useState(() => !isClient ? 0 : getWindowHeight()); \r\n    useEffect(\r\n        () => windowEventHandler(ref, setState, 'resize', getWindowHeight)\r\n    , [ref]) ;\r\n    return state;\r\n} \r\n\r\n\r\nfunction getWindowWidth() { return window.innerWidth }\r\nexport const useWindowWidth = () => {                                                       // useWindowWidth\r\n    const ref = useRef({ value: 0, ticking: false }).current;\r\n    const [state, setState] = useState(() => !isClient ? 0 : getWindowWidth()); \r\n    useEffect(\r\n        () => windowEventHandler(ref, setState, 'resize', getWindowWidth)\r\n    , [ref]);\r\n    return state;\r\n} \r\n\r\nexport const useWindowSize = () => {                                                       // useWindowSize\r\n    const ref = useRef({ value: { width: 0, height: 0 }, ticking: false }).current;\r\n    const [state, setState] = useState(() => !isClient ? { width: 0, height: 0 } : { width: window.innerWidth, height: window.innerHeight }); \r\n    useEffect(\r\n        () => windowEventHandler(\r\n            ref, \r\n            setState, \r\n            'resize', \r\n            () => ({ width: window.innerWidth, height: window.innerHeight }),   // value getter\r\n            (a, b) => a.width === b.width && a.height === b.height              // comparer\r\n        )\r\n    , [ref]);\r\n    return state;\r\n} \r\n\r\nconst getScrollPosition = () => document.body.scrollTop || document.documentElement.scrollTop; \r\nexport const useScrollPosition = () => {\r\n    const ref = useRef({ value: 0, ticking: false }).current;\r\n    const [state, setState] = useState(() => !isClient ? 0 : getScrollPosition()); \r\n    useEffect(\r\n        () => windowEventHandler(ref, setState, 'scroll', getScrollPosition)\r\n    , [ref]); \r\n    return state; \r\n} \r\n\r\nfunction windowEventHandler(ref: any, setState: Function, event: string, readValue: Function, compare?: Function) {\r\n    if (!isClient) return; \r\n    const handleEvent = () => { \r\n        const value = readValue();\r\n        const compareValues = compare || ((a: any , b: any) => a === b);\r\n        if (compareValues(ref.value, value)) return;\r\n        ref.value = value;\r\n        if (!ref.ticking) { \r\n            window.requestAnimationFrame(() => { \r\n                setState(ref.value); \r\n                ref.ticking = false; \r\n            }); \r\n            ref.ticking = true; \r\n        } \r\n    }; \r\n    window.addEventListener(event, handleEvent); \r\n    return () => window.removeEventListener(event, handleEvent); \r\n}","import React from 'react';\r\nimport { PropsDirectives, useInlineStyle, useStyleDirectives } from '../directives';\r\nimport Panel from './Panel';\r\n\r\n// import './page.css'\r\nimport * as divRowCol from '../Layout';\r\nimport * as hooks from '../hooks';\r\nimport { fnOrValue } from '../util/lang';\r\n\r\nconst ui = {\r\n    ...divRowCol,\r\n    ...hooks,\r\n}\r\n\r\nexport class PageProps { \r\n    header?:    any;\r\n    children?:  any;\r\n}\r\n\r\nconst _ownProps = new PageProps();\r\n\r\nexport const Layout = (directives: PageProps & PropsDirectives) => {\r\n    const { ...other }                = directives;\r\n    const { root, props, data } = useStyleDirectives<PageProps>(other, _ownProps);\r\n\r\n    const style = useInlineStyle({\r\n        root: {\r\n            minHeight: '100vh;',\r\n            // border=\"thin dotted red\",\r\n\r\n            '& > .column': {\r\n                // border=\"thin dotted red\",\r\n\r\n                '& > .row': {\r\n                    // border=\"thin dotted red\",\r\n                    height: '100vh;',\r\n\r\n                    '& > .page-panel': {\r\n                        backgroundColor: '#80808011',\r\n                    },\r\n                }\r\n            }\r\n        }\r\n    }, [])();\r\n\r\n    return (\r\n        <ui.row className={`page-layout ${root.className} ${style.root}`} {...data} tight >\r\n            <ui.col wide>\r\n                {\r\n                    props.header &&\r\n                    fnOrValue(props.header)\r\n                }\r\n                <ui.row>\r\n                    { props.children }\r\n                </ui.row>\r\n            </ui.col>\r\n        </ui.row>\r\n    )\r\n};\r\n\r\n\r\nexport default {\r\n    layout: Layout,\r\n    panel: Panel,\r\n};\r\n","import React from 'react';\r\n\r\nconst Header = (props: any) => {\r\n    \r\n    const cols = props.cols || [];\r\n\r\n    return <thead>\r\n        <tr>\r\n            {\r\n                cols.map((c: any, index: number) => {\r\n                    return <th key={index}>{c}</th>\r\n                })\r\n            }\r\n        </tr>\r\n    </thead>\r\n}\r\n\r\nexport default Header;","import React from 'react';\r\n\r\nconst TableRow = (props: any) => {\r\n    \r\n    const item = props.item;\r\n    const cols = props.cols;\r\n\r\n    const isArray = Array.isArray(item);\r\n\r\n    return (\r\n        <tr className=\"no-text-overflow\">\r\n\r\n            {\r\n                isArray &&\r\n                item.map((value: any, index: number) => {\r\n                    return <td key={cols[index]} className={cellClass(value)}>\r\n                        {\r\n                            formatValue(value)\r\n                        }\r\n                    </td>\r\n                })   \r\n            }\r\n\r\n            {\r\n                !isArray &&\r\n                cols.map((c: any, index: number) => {\r\n                    return <td key={cols[index]} className={cellClass(item[c])}>\r\n                        {\r\n                            formatValue(item[c])\r\n                        }\r\n                    </td>\r\n                })\r\n            }\r\n        </tr>\r\n    )\r\n}\r\n\r\nexport default TableRow;\r\n\r\nfunction formatValue(value: any) {\r\n    if (typeof value === 'number') {\r\n        return value.toFixed(0);\r\n    }\r\n    return value;\r\n}\r\nfunction cellClass(value: any) {\r\n    if (typeof value === 'number') {\r\n        return 'number';\r\n    }\r\n    return '';\r\n}","import * as React from 'react';\r\nimport { ReactNode } from 'react';\r\n\r\nimport Tabs from '@material-ui/core/Tabs';\r\nimport Tab from '@material-ui/core/Tab';\r\nimport clsx from 'clsx';\r\nimport {\r\n  PropsDirectives,\r\n  useStyleDirectives,\r\n  useInlineStyle,\r\n} from './directives';\r\nimport * as ui from './Layout';\r\nimport { camelToSentenceCase } from './util/string';\r\n\r\nexport type UiTabDef = {\r\n  label: ReactNode;\r\n  content: ReactNode | { (): ReactNode };\r\n};\r\nexport function isTabDef(object: any) {\r\n  return !!object && !!object.label && !!object.content;\r\n}\r\nexport type UiTab = ReactNode | UiTabDef;\r\nexport type UiTabData = { [index: string]: UiTab };\r\nexport type UiTabs = {\r\n  items: any[];\r\n  keyForItem?: (item: any) => string;\r\n  elementForItem: (item: any, active: boolean) => ReactNode;\r\n  //\r\n  id?: string; // needed if auto saved state is desired\r\n  onChange?: { (key: string): void };\r\n  activeKey?: string;\r\n  variant?: 'fullWidth' | 'scrollable';\r\n  orientation?: 'vertical';\r\n  centered?: boolean;\r\n};\r\ntype ValueType = string | number | boolean | symbol;\r\ntype ValueOrElement = ValueType | Element | React.ReactNode;\r\nexport type FunctionOrValueOrElement = Function | ValueOrElement;\r\n\r\n\r\n\r\ninterface TabPanelProps {\r\n  children?: FunctionOrValueOrElement;\r\n  active: boolean;\r\n  id?: string;\r\n  value: string;\r\n}\r\n\r\nfunction TabPanel(props: TabPanelProps) {\r\n  const {\r\n    children, active, value, id,\r\n  } = props;\r\n  return (\r\n    <div\r\n      role=\"tabpanel\"\r\n      hidden={!active}\r\n      id={`${id}-${value}`}\r\n      aria-labelledby={`${id}-${value}`}\r\n    >\r\n      {children || <div>No content</div>}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default (directives: UiTabs & PropsDirectives) => {\r\n  const {\r\n    id,\r\n    onChange,\r\n    activeKey,\r\n    variant,\r\n    orientation,\r\n    centered,\r\n    items,\r\n    keyForItem,\r\n    elementForItem,\r\n    ...d\r\n  } = directives;\r\n  const { root, props } = useStyleDirectives<UiTabs>(d, null, 'ui-tabs');\r\n\r\n  const keys = items.map((item) => {\r\n    if (!keyForItem) {\r\n      switch (typeof item) {\r\n        case 'string':\r\n          return item;\r\n        case 'number':\r\n          return item.toString();\r\n        default:\r\n          throw new Error('Invalid key');\r\n      }\r\n    }\r\n    return keyForItem(item);\r\n  });\r\n\r\n  const [selectedKey, setActiveKey] = React.useState(() => activeKey);\r\n\r\n  const handleChange = (event: React.ChangeEvent<{}>, key: string) => {\r\n    setActiveKey(key);\r\n    if (onChange) onChange(key);\r\n  };\r\n\r\n  const internalStyle = useInlineStyle(\r\n    () => ({\r\n      minWidth: 'unset!important',\r\n      minHeight: 'unset!important',\r\n    }),\r\n    [],\r\n  )();\r\n\r\n  if (!keys.length) return null;\r\n\r\n  const tabStrip = (\r\n    <Tabs\r\n      orientation={directives.orientation}\r\n      value={selectedKey || keys[0]}\r\n      onChange={handleChange}\r\n      aria-label={`tabs with ${keys.length} panels`}\r\n    >\r\n      {keys.map((key: string) => {\r\n        const label = camelToSentenceCase(key);\r\n        return <Tab key={key} label={label} value={key} />;\r\n      })}\r\n    </Tabs>\r\n  );\r\n\r\n  const tabContent = items.map((item: string, index: number) => {\r\n    const key = keys[index];\r\n    const isActiveTab = (typeof selectedKey === 'undefined' && index === 0)\r\n      || selectedKey === key;\r\n    return (\r\n      <TabPanel\r\n        key={key}\r\n        active={isActiveTab}\r\n        value={key}\r\n        id={props.id || 'global'}\r\n      >\r\n        { elementForItem(item, isActiveTab) }\r\n      </TabPanel>\r\n    );\r\n  });\r\n\r\n  const verticalLayout = (\r\n    <ui.row wide>\r\n      {keys.length > 1 && <ui.col>{tabStrip}</ui.col>}\r\n      <ui.col grow>{tabContent}</ui.col>\r\n    </ui.row>\r\n  );\r\n\r\n  const horizontalLayout = (\r\n    <React.Fragment>\r\n      {keys.length > 1 && tabStrip}\r\n      {tabContent}\r\n    </React.Fragment>\r\n  );\r\n\r\n  const isVertical = directives.orientation === 'vertical';\r\n\r\n  return (\r\n    <div className={clsx('root', root, internalStyle)}>\r\n      {isVertical && verticalLayout}\r\n      {!isVertical && horizontalLayout}\r\n    </div>\r\n  );\r\n};\r\n","import col from './Col';\nimport div from './Div';\nimport row from './Row';\n\nimport card from './MediaCard';\nimport counter from './Counter';\nimport drawer from './Drawer';\nimport dropdown from './Dropdown';\nimport element from './Element';\nimport loremIpsum from './loremIpsum';\nimport masonry from './Masonry';\nimport modal from './Modal';\nimport numberInput from './NumberInput';\nimport page from './Page';\nimport propertyPage from './PropertyPage';\nimport table from './DataTable';\nimport tabs from './Tabs';\nimport text from './Text';\n\n// exports\n\nexport { default as useInlineStyle } from './directives/useInlineStyle';\nexport type { PropsDirectives } from './directives';\nexport { useStyleDirectives } from './directives';\n\nexport { default as Throttle } from './Throttle';\nexport * from './hooks';\nexport * from './validation';\nexport * from './util/lang';\nexport * from './util/string';\nexport * from './util/array';\nexport * from './util/date';\nexport * from './util/object';\n\n\nconst index = {\n  div,\n  col,\n  row,\n\n  card,\n  counter,\n  \n  drawer,\n  dropdown,\n\n  element,\n\n  loremIpsum,\n\n  masonry,\n  modal,\n\n  numberInput,\n\n  page,\n  propertyPage,\n  \n  table,\n  tabs,\n  text,\n}\n\nexport default index;\n\n\n","import React, { ReactNode } from 'react';\r\nimport { PropsDirectives, useStyleDirectives } from './directives';\r\n\r\ntype DivProps = { children?: ReactNode, id?: string };\r\nconst Div = (directives: DivProps & PropsDirectives) => {\r\n  const { children, ...other }      = directives;\r\n  const { root, data, events } = useStyleDirectives<DivProps>(other, null);\r\n  return (\r\n    <div {...data} className={root.className} {...events}>\r\n      {children}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Div;","import React, { ReactNode } from 'react';\r\nimport { PropsDirectives, useStyleDirectives } from './directives';\r\n\r\ntype ColProps = { children?: ReactNode, id?: string };\r\nconst Col = (directives: ColProps & PropsDirectives) => {\r\n  const { children, ...other } = directives;\r\n  const { root, data, events  } = useStyleDirectives<ColProps>(\r\n    other,\r\n    null,\r\n    '',\r\n    'flex column',\r\n  );\r\n  return (\r\n    <div {...data} className={root.className} {...events}>\r\n      {children}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Col;\r\n","import React, { ReactNode } from 'react';\r\nimport { PropsDirectives, useStyleDirectives } from './directives';\r\n\r\ntype RowProps = { children?: ReactNode, id?: string };\r\nconst Row = (directives: RowProps & PropsDirectives) => {\r\n  const { children, ...other } = directives;\r\n  const { root, data, events  } = useStyleDirectives<RowProps>(\r\n    other,\r\n    null,\r\n    '',\r\n    'flex row',\r\n  );\r\n  return (\r\n    <div {...data} className={root.className} {...events}>\r\n      {children}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Row;\r\n","import React, { ReactNode, ReactElement } from 'react';\r\nimport Drawer from '@material-ui/core/Drawer';\r\n\r\ntype Anchor = 'top' | 'left' | 'bottom' | 'right';\r\ntype PropsType = {\r\n  anchor: Anchor;\r\n  open?: boolean;\r\n  button?: ReactElement;\r\n  onOpen?: Function;\r\n  onClose?: Function;\r\n  children?: ReactNode;\r\n};\r\n\r\nexport default (props: PropsType) => {\r\n  const [open, setOpen] = React.useState(false);\r\n  const [closed, setClosed] = React.useState<boolean|undefined>();\r\n\r\n  const externallyControlled = typeof props.open !== 'undefined';\r\n  const drawerOpen = !closed && (externallyControlled ? props.open : open);\r\n\r\n  const toggleDrawer = (open: boolean) => (event: React.KeyboardEvent | React.MouseEvent) => {\r\n    setOpen(open);\r\n    if (!open) {\r\n      setClosed(true);\r\n    }\r\n    if (open && props.onOpen) props.onOpen();\r\n    if (!open && props.onClose) props.onClose();      \r\n  };\r\n\r\n  return (\r\n    <React.Fragment>\r\n      {\r\n        props.button && !drawerOpen &&\r\n        React.cloneElement(props.button, {\r\n          onClick: toggleDrawer(true)\r\n        })\r\n      }\r\n      <Drawer \r\n        anchor={props.anchor} \r\n        open={drawerOpen} \r\n        onClose={toggleDrawer(false)}\r\n      >\r\n        {\r\n          !closed &&\r\n          drawerOpen && \r\n          props.children\r\n        }\r\n      </Drawer>\r\n    </React.Fragment>\r\n  );\r\n};\r\n","import React from 'react';\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport Select from '@material-ui/core/Select';\r\nimport { v4 as uuidv4 } from 'uuid';\r\n\r\nimport { div as Div } from './Layout';\r\n\r\ntype DropdownOption = string\r\n  | {\r\n      value: string | number;\r\n      text: string;\r\n    };\r\n\r\ntype DropdownProps = {\r\n  defaultValue?: string;\r\n  label?: string;\r\n  localStorageKey?: string;\r\n  options: DropdownOption[];\r\n  onChange: (value: any) => void,\r\n};\r\n\r\nexport default function Dropdown(props: DropdownProps) {\r\n  const { \r\n    localStorageKey, \r\n    label, \r\n    defaultValue, \r\n    options \r\n  } = props;\r\n  const labelId = uuidv4();\r\n\r\n  const [selectedValue, setSelectedValue] = React.useState<string | undefined>(\r\n    () => {\r\n      const storedString: string | null = localStorageKey\r\n        ? localStorage.getItem(localStorageKey)\r\n        : null;\r\n      return storedString || defaultValue;\r\n    },\r\n  );\r\n\r\n  const selectedValueExists = options.find((option: any) => {\r\n    const t = typeof option;\r\n    const obj = option as any;\r\n    const value = typeof obj === 'object' ? obj.value : option;\r\n    return selectedValue === value;\r\n  });\r\n  const auxOptions = !selectedValueExists \r\n    ? [{ value: selectedValue, text: selectedValue, aux: true }]\r\n    : []; \r\n\r\n  const handleChange = (event: React.ChangeEvent<{ value: unknown }>) => {\r\n    const value = event.target.value as string;\r\n    if (localStorageKey) {\r\n      localStorage.setItem(localStorageKey, value);\r\n    }\r\n    setSelectedValue(value);\r\n    props.onChange && props.onChange(value);\r\n  };\r\n\r\n  return (\r\n    <FormControl>\r\n      {label && <InputLabel id={labelId}>{label}</InputLabel>}\r\n      <Select\r\n        labelId={labelId}\r\n        value={selectedValue}\r\n        onChange={handleChange}\r\n      >\r\n        {[...options, ...auxOptions].map((option) => {\r\n          const t = typeof option;\r\n          const obj = option as any;\r\n          const text = typeof obj === 'object' ? obj.text : option;\r\n          const value = typeof obj === 'object' ? obj.value : option;\r\n          const aux = typeof obj === 'object' ? obj.aux === true : false;\r\n          return (\r\n            <MenuItem key={value} value={value}>\r\n              {\r\n                !aux && text\r\n              }\r\n              {\r\n                aux && <Div opacity={0.5} fontStyle=\"italic\">{text}</Div>\r\n              }\r\n            </MenuItem>\r\n          );\r\n        })}\r\n      </Select>\r\n    </FormControl>\r\n  );\r\n}\r\n","import React, { ReactNode } from 'react';\r\nimport { PropsDirectives, useStyleDirectives } from './directives';\r\n\r\ntype Props = { type: string, children?: ReactNode[] };\r\nconst Element = (directives: Props & PropsDirectives) => {\r\n  const { children, type, ...other }      = directives;\r\n  const { root, data, events } = useStyleDirectives<Props>(other, null);\r\n  return React.createElement(\r\n    type, \r\n    { ...data, className: root.className, ...events },\r\n    ...children||[]\r\n  );\r\n}\r\n\r\nexport default Element;","import React, {useRef} from 'react';\r\nimport _ from 'lodash';\r\n\r\n// import '../css/numberinput.css';\r\nimport { isNullOrUndefined } from '../validation';\r\nimport Throttle from '../Throttle';\r\n\r\nfunction isNumeric(n) {\r\n    return !isNaN(parseFloat(n)) && isFinite(n);\r\n}\r\n\r\nexport default function NumberInput(props) {\r\n\r\n    const throttleRef = useRef(new Throttle());\r\n    const throttle = throttleRef.current;\r\n\r\n    const inputRef = useRef(null);\r\n    const [buffer, setBuffer] = React.useState(props.value);\r\n\r\n    const constraints = {\r\n        min: !isNullOrUndefined(props.min) ? props.min : -999,\r\n        max: !isNullOrUndefined(props.max) ? props.max : 999,\r\n        step: props.step || 1,\r\n        precision: props.precision || 0,\r\n    }\r\n\r\n    if (constraints.step) {\r\n        const parts = constraints.step.toString().split('.');\r\n        if (parts.length>1) {\r\n            constraints.precision = parts[1].length;\r\n        }\r\n    }\r\n\r\n    if (props.unsigned && constraints.min < 0) constraints.min = 0;\r\n\r\n    const handleChange = (value) => {\r\n\r\n        let parsedValue = parseFloat(value);\r\n        if (parsedValue < constraints.min) parsedValue = constraints.min;\r\n        if (parsedValue > constraints.max) parsedValue = constraints.max;\r\n        \r\n        const newValue = lib.math.roundDecimal(parsedValue, constraints.precision);\r\n        setBuffer(newValue);\r\n    \r\n        if (props.onChange) {\r\n            throttle.invokeWithAnimationFrame(props.onChange, parsedValue);\r\n        }\r\n        \r\n    };\r\n\r\n    const handleFocus = (e) => { inputRef.current.select()};\r\n    const handleBlur = (e) => { };\r\n    \r\n    const context = { \r\n        inputRef,\r\n        handleChange, \r\n        handleFocus,\r\n        handleBlur,\r\n        props,\r\n        value: buffer,\r\n        ...constraints,\r\n    };\r\n\r\n    switch(props.variant) {\r\n        case 'slider':\r\n            return sliderInput(context);\r\n        default:\r\n            return inputWithUpDown(context);\r\n    }\r\n}\r\n\r\nexport function inputWithUpDown(context) {\r\n\r\n    const { inputRef, handleChange, handleFocus, handleBlur, props, value, step, min, max } = context;\r\n\r\n    return (\r\n        <ui.Flex row tight className=\"numeric-input-container\">\r\n            <button className=\"numeric-spinner left\" onClick={() => handleChange(value - step)}><span>-</span></button>\r\n            <input \r\n                ref={inputRef}\r\n                className=\"numeric-input\"\r\n                type=\"number\"\r\n                inputMode=\"number\" \r\n                pattern=\"[0-9]*\" \r\n                onChange={(e) => handleChange(e.target.value)}\r\n                onFocus={handleFocus}\r\n                onBlur={handleBlur}\r\n                value={value}\r\n                required={props.required} \r\n                placeholder={props.placeholder}\r\n                title={props.title}\r\n            />\r\n            <button className=\"numeric-spinner right\" onClick={() => handleChange(value + step)}><span>+</span></button>\r\n        </ui.Flex>\r\n    );\r\n}\r\n\r\n\r\nexport function sliderInput(context) {\r\n\r\n    const { inputRef, handleChange, handleFocus, handleBlur, props, value, step, min, max } = context;\r\n\r\n    const innerValue = value;\r\n    \r\n    return (\r\n        <ui.Flex row tight alignItems=\"center\" className=\"slider-input-container\">\r\n            <input \r\n                ref={inputRef}\r\n                className=\"slider\"\r\n                type=\"range\"\r\n                onChange={(e) => handleChange(e.target.value)}\r\n                onFocus={handleFocus}\r\n                onBlur={handleBlur}\r\n                title={props.title}\r\n                value={innerValue}\r\n                min={min}\r\n                max={max}\r\n                step={step}\r\n            />\r\n            <ui.div small marginLeft={15}>\r\n                {innerValue}\r\n            </ui.div>\r\n        </ui.Flex>\r\n    );\r\n}\r\n\r\nexport function NumericInputLabel(props) {\r\n    return <ui.div className=\"numeric-input-label\">{props.children}</ui.div>;\r\n}\r\n\r\n//export const MemoizedNumericInput = React.memo(NumberInput);","import React from 'react';\r\nimport { div as Div, row as Row } from './Layout';\r\nimport { camelToSentenceCase } from './util/string';\r\n\r\ntype PropertyPageProps = {\r\n  data: any,\r\n};\r\n\r\nconst PropertyPage = (props: PropertyPageProps) => {\r\n  const { data } = props;\r\n  const keys = Object.keys(data)\r\n    .filter(key => !!data[key] || data[key] === 0);\r\n  \r\n  return (\r\n    <>\r\n      {\r\n        keys.map(key => {\r\n\r\n          const label = camelToSentenceCase(key);\r\n\r\n          return (\r\n            <Row key={key} spaced fontSize=\"0.8rem\">\r\n              <Div width=\"50%\" opacity={0.5}>\r\n                { label }\r\n              </Div>\r\n              <Div width=\"50%\">\r\n                {\r\n                  typeof data[key] === 'boolean' ? data[key].toString() : data[key]\r\n                }\r\n              </Div>\r\n            </Row>\r\n          );\r\n        })\r\n      }\r\n    </>\r\n  );\r\n};\r\nexport default PropertyPage;\r\n","import clsx from 'clsx';\r\nimport React from 'react';\r\nimport { PropsDirectives, useInlineStyle, useStyleDirectives } from '../directives';\r\nimport Element from '../Element';\r\n\r\nimport Header from './Header';\r\nimport TableRow from './TableRow';\r\n\r\ntype Props = { \r\n    cols: string[],\r\n    items: any[],\r\n\r\n};\r\n\r\nconst Table = (directives: Props & PropsDirectives) => {\r\n\r\n    const { \r\n        cols, \r\n        items,\r\n        ...other \r\n    } = directives;\r\n    const { root, data, events } = useStyleDirectives<Props>(other, null);\r\n\r\n    const baseStyle = useInlineStyle(() => ({\r\n        root: {\r\n            '& th': { \r\n                textAlign: 'left', \r\n                textTransform: 'capitalize',\r\n                paddingLeft: 5,\r\n                paddingRight: 5,\r\n            },\r\n            '& td': {\r\n                borderTop: 'thin solid #80808080',\r\n                paddingTop: 8,\r\n                paddingLeft: 5,\r\n                paddingRight: 5,\r\n                paddingBottom: 0,\r\n                lineHeight: 1,\r\n                textAlign: 'center',\r\n            },\r\n            '& td.number': {\r\n                textAlign: 'right',\r\n            },\r\n        }\r\n    }), [])();\r\n\r\n    if (!items) return null;\r\n\r\n    return <table \r\n        cellPadding={0} \r\n        cellSpacing={0}\r\n        className={clsx(baseStyle.root, root.className)} \r\n        {...data} \r\n        {...events}\r\n    >\r\n        {\r\n            cols && \r\n            cols.length > 0 &&\r\n            <Header cols={cols} />\r\n        }\r\n        <tbody>\r\n            {\r\n                items.map((item: any, itemIndex: number ) => (\r\n                    <TableRow key={itemIndex} item={item} cols={cols} />\r\n                ))\r\n            }\r\n        </tbody>\r\n    </table>\r\n}\r\n\r\nexport default Table;\r\n","import React from 'react';\r\nimport { PropsDirectives, useStyleDirectives } from './directives';\r\nimport { fnOrValue } from './util/lang';\r\n\r\nexport class TextProps { \r\n    size?:     number|string;\r\n    children?: any;    \r\n}\r\n\r\nconst Text = (directives: TextProps & PropsDirectives) => {\r\n    const { size, children, ...other }                = directives;\r\n    const { root, data, events } = useStyleDirectives<TextProps>(other, null);\r\n    if (!root.className) {\r\n        return fnOrValue(directives.children);\r\n    }\r\n    return (\r\n        <div {...data} className={root.className} {...events}>\r\n            {fnOrValue(directives.children)}\r\n        </div>\r\n    )\r\n};\r\n\r\nexport default Text;\r\n","import React from 'react';\r\nimport ui from '@reactiff/ui-core';\r\nimport data from './data.json';\r\n\r\nexport default function Table() {\r\n  return <ui.table cols={data.columns} items={data.array} />\r\n}\r\n\r\n\r\n","import React from 'react'\nimport ReactMarkdown from 'react-markdown'\nimport ui, { useWindowSize } from '@reactiff/ui-core'\nimport * as demos from './demos';\n\nimport './css/index.css'\nimport './css/orthogonal.css'\nimport './css/flex.css'\n\nconst badges = '[![NPM](https://img.shields.io/npm/v/@reactiff/ui-core.svg)](https://www.npmjs.com/package/@reactiff/ui-core) [![JavaScript Style Guide](https://img.shields.io/badge/code_style-standard-brightgreen.svg)](https://standardjs.com)';\n\nconst App = () => {\n  \n  // hooks \n  const winSize = useWindowSize();\n\n  const cardStyle = {\n    border: '4px solid #ffffff',\n    padding: '30px',\n    '& > .value': { \n      fontSize: '3rem',\n      margin: '0 0 15px 0',\n    }\n  };\n\n  const gridStyle = {\n    '& > .flex.column': cardStyle,\n  };\n\n  return (\n  \n    <ui.page.layout> \n\n      <ui.page.panel id=\"left_panel\" minWidth={100} width=\"20%\" noMobile>\n\n\n        <ui.div css={{backgroundColor: '#ffffff11', padding: '15px'}} wide borderBox>\n          <h1>@reactiff/ui-core</h1>\n          <p>UI toolkit foundation</p>\n          <ReactMarkdown children={badges} />\n        </ui.div>\n        \n      </ui.page.panel>\n\n      <ui.row alignCenter css={gridStyle}>\n        \n        <ui.div css={{color: 'yellowgreen'}}></ui.div>\n\n        <ui.div className={`flex column align-center`} >\n          <ui.text className=\"value\">\n            Nothing\n          </ui.text>\n        </ui.div>\n\n        <ui.div className={`flex column align-center`}>\n          <ui.text className=\"value\">\n            <span>Window: {winSize.width}x{winSize.height}</span>\n          </ui.text>\n        </ui.div>\n\n        {\n          Object.entries(demos).map(([key, value]) => {\n            return <ui.div key={key} className={`flex column align-center`}>\n              {value()}\n            </ui.div>\n          })\n        }\n\n        <p>\n          <a href=\"https://www.npmjs.com/package/@reactiff/ui-core\">npm</a> | <a href=\"https://github.com/reactiff/package-name\">git</a> | MIT © <a href=\"https://github.com/reactiff\">Rick Ellis</a>\n        </p>\n      </ui.row>\n\n    </ui.page.layout>\n\n    \n  )\n}\n\nexport default App\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './App'\n\nReactDOM.render(<App />, document.getElementById('root'))\n"],"sourceRoot":""}