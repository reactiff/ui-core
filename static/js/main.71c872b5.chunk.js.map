{"version":3,"sources":["../../src/util/logic.ts","../../src/util/string.ts","../../src/util/array.ts","../../src/util/date.ts","../../src/util/object/traverse/traversers.ts","../../src/util/object/traverse/isNullOrUndefined.ts","../../src/util/object/traverse/index.ts","../../src/util/object/assignPath.ts","../../src/util/object/mapReduceObject.ts","../../src/util/index.ts","../../src/util/object/index.ts","../../src/util/object/selectShape.ts","../../src/util/object/intersect.ts","../../src/MediaCard.tsx","../../src/directives/useInlineStyle.ts","../../src/DataTable/Header.tsx","../../src/DataTable/TableRow.tsx","../../src/directives/attributeMap.ts","../../src/directives/classMap.ts","../../src/directives/functions.ts","../../src/directives/resolveAttributeValue.ts","../../src/directives/classSwitches.ts","../../src/directives/styleAttributes.ts","../../src/directives/useStyleDirectives.ts","../../src/Layout.tsx","../../src/hooks/stripes.ts","../../src/hooks/boxShadow.ts","../../src/hooks/pageEvents.ts","../../src/hooks/linearGradient.ts","../../src/loremIpsum.ts","../../src/Masonry/index.tsx","../../src/Modal.tsx","../../src/validation.ts","../../src/Throttle.ts","../../src/Page/Panel.tsx","../../src/Page/index.tsx","../../src/Tabs.tsx","../../src/index.tsx","../../src/Counter.tsx","../../src/Drawer.tsx","../../src/Dropdown.tsx","../../src/NumberInput/index.js","../../src/PropertyPage.tsx","../../src/DataTable/index.tsx","../../src/Text.tsx","App.tsx","index.tsx"],"names":["fnOrValue","element","inline","matchSingleKey","key","matchKey","Array","pairs","i","defaultValue","range","Error","start","end","n","Math","arr","step","j","k","strutil","camelToSentenceCase","string","t","trimmed","token","camelToKebabCase","toProperCase","mutateWhile","result","condition","transform","toCamelCase","temp","removeDoubleSpaces","s","all","array","test","uniques","Set","sortBy","valueForItem","order","dir","sortByDesc","toDictionary","items","Object","parse","date","offsetMinutes","minutes","adjustmentTime","hours","yyyymmdd","yyyy","MM","dd","Date","isoToInt","isoDate","parseInt","traverseLeaf","value","ctx","console","results","cbContext","type","contructorName","path","tokens","depth","other","index","traverseArray","isNullOrUndefined","symbols","symbol","traverseObject","traverse","ns","strategy","Reflect","source","select","assignPath","target","cursor","node","args","acc","aggregate","item","itemValue","elem","fn","fnConcat","MapReduceObject","this","count","map","concat","min","Number","max","sum","avg","values","logic","object","selectShape","shape","x","alias","selector","sourcePath","_","intersect","mapReduce","useStyles","makeStyles","root","maxWidth","media","height","useInlineStyle","style","useMemo","createStyles","util","Header","props","cols","TableRow","isArray","className","attributeMap","bgColor","classMap","scrollableX","scrollableY","borderBox","createStyle","resolvedKey","getOrMakeStyle","createClass","resolvedClass","str","switches","absolute","alignStart","alignCenter","alignEnd","alignStretch","alignBaseline","alignAuto","alignSelfStart","alignSelfCenter","alignSelfEnd","alignSelfStretch","alignSelfBaseline","anchorBottom","anchorLeft","anchorRight","anchorTop","beveled","block","centerX","centerXY","centerY","clickable","coverImage","fill","fixed","fullWidth","fullWidthAlways","grow","hidden","horizontal","inlineBlock","justifyStart","justifyCenter","justifyEnd","mobileCenter","mobileColumn","mobileOnly","noBr","noBreak","noMargin","noMobile","noOverflow","noPadding","noSelect","noTransform","noWrap","opaque","overlay","relative","round","rounded","scrollable","shrink","small","smaller","solid","spaced","sticky","tall","translucent","vertical","wide","backgroundColor","backgroundImage","backgroundRepeat","backgroundPosition","backgroundSize","border","borderTop","borderRight","borderBottom","borderLeft","borderRadius","borderTopLeftRadius","borderTopRightRadius","borderBottomLeftRadius","borderBottomRightRadius","color","dataProps","fontSize","fontStyle","fontWeight","innerProps","lineHeight","margin","marginTop","marginRight","marginBottom","marginLeft","minHeight","minWidth","opacity","padding","paddingTop","paddingRight","paddingBottom","paddingLeft","pseudo","textAlign","textTransform","title","width","top","right","bottom","left","useStyleDirectives","id","directives","children","ref","data","css","onBlur","onClick","onChange","onFocus","onMouseUp","onMouseDown","onMouseMove","ignoredProps","ownProps","utilizedKeys","keys","bag","classes","debug","styleAttributes","pseudoStyles","fullKey","usedStyles","events","attr","baseClasses","clsx","div","row","col","defaultProps","angle","BoxShadowDefaults","xOffset","yOffset","blur","spread","rgba","r","g","b","a","isClient","window","gridSizeValues","xs","sm","md","lg","xl","xxl","xxxl","breakpointSystem","bootstrap","material","getGridSize","system","makeGridSizeResult","code","getWindowHeight","getScrollPosition","document","windowEventHandler","handleEvent","readValue","compare","setState","options","params","colors","parts","colorFromString","steps","c","colorCount","outSegments","distance","nextIndex","size","isNumber","generateStripesStyle","parseColor","tuple","functions","generateLinearGradientStyle","React","colorString","ticking","useState","state","useEffect","format","paragraphLowerBound","paragraphUpperBound","sentenceLowerBound","sentenceUpperBound","suffix","units","words","loremIpsum","dictionary","sentences","paragraphs","ElementContainer","colSpan","image","DefaultMasonryItem","description","gridColumnEnd","Transition","direction","isString","isUndefined","isNull","Throttle","invokeWithAnimationFrame","_this","dispatch","callback","_ownProps","stickyTop","ui","layout","tight","panel","undefined","TabPanel","active","role","aria-labelledby","React.createElement","card","footerActions","gutterBottom","variant","component","counter","position","zIndex","drawer","open","setOpen","closed","setClosed","externallyControlled","drawerOpen","toggleDrawer","anchor","onClose","dropdown","localStorageKey","label","labelId","uuidv4","localStorage","selectedValue","setSelectedValue","auxOptions","text","aux","event","obj","masonry","elementForItem","revision","d","theme","useTheme","mutable","resizing","gridItems","grid","rowHeight","rowGap","innerElement","e","heightRatio","container","resizeGridItem","rect","gi","heightWithGap","remainder","rowSpan","resizeAllGridItems","handleResizeAllGridItems","timer","setTimeout","clearTimeout","gridTemplateColumns","boxShadow","overflow","modal","handleClose","handleEscapeKey","TransitionComponent","disableBackdropClick","disableEscapeKeyDown","numberInput","throttle","useRef","inputRef","buffer","setBuffer","constraints","precision","context","handleChange","parsedValue","parseFloat","newValue","lib","handleFocus","handleBlur","innerValue","alignItems","sliderInput","inputMode","pattern","required","placeholder","inputWithUpDown","page","propertyPage","table","cellPadding","cellSpacing","tabs","activeKey","keyForItem","selectedKey","setActiveKey","internalStyle","tabStrip","orientation","aria-label","tabContent","isActiveTab","verticalLayout","horizontalLayout","isVertical","uuid","App","href","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.71c872b5.chunk.js","sourcesContent":["export type ValueSymbolObject =\r\n  | string\r\n  | number\r\n  | boolean\r\n  | symbol\r\n  | object\r\n  | null\r\n  | undefined\r\n  | void\r\nexport type ValueOrElement = ValueSymbolObject | Element | React.ReactNode\r\nexport type FunctionOrValueOrElement = Function | ValueOrElement\r\n\r\nexport const fnOrValue = (element: FunctionOrValueOrElement, param?: any) => {\r\n  if (typeof element === 'function') {\r\n    return (element as Function)(param)\r\n  }\r\n  return element\r\n}\r\n\r\nexport type ArrayOfValueTypes = ValueSymbolObject[]\r\nexport type KeyOrKeys = ValueSymbolObject | ArrayOfValueTypes\r\nexport type KeyOrValue = KeyOrKeys | FunctionOrValueOrElement\r\nexport type KeyValuePairs = KeyOrValue[]\r\n\r\nconst inline = {\r\n  fnOrValue,\r\n\r\n  /**\r\n   * Returns a matching element from k1, v1, k2, v2... args following the defaultElement.\r\n   * Each key argument can be an array of alternative keys for the corresponding element.\r\n   * @param key - key: Selector value\r\n   * @param defaultElement - defaultElement: Default return value\r\n   */\r\n  switch(\r\n    rootKey: ValueSymbolObject,\r\n    defaultValue: FunctionOrValueOrElement,\r\n    ...pairs: KeyValuePairs\r\n  ) {\r\n    const matchSingleKey = (key: Function | ValueSymbolObject) => {\r\n      if (typeof key === 'function') {\r\n        return (key as Function)(rootKey)\r\n      }\r\n      return key === rootKey\r\n    }\r\n\r\n    const matchKey = (key: KeyOrKeys) => {\r\n      if (Array.isArray(key)) {\r\n        return (key as ArrayOfValueTypes).some(matchSingleKey)\r\n      }\r\n      return matchSingleKey(key)\r\n    }\r\n\r\n    for (let i = 0; i < pairs.length; i += 2) {\r\n      const key = pairs[i] as KeyOrKeys\r\n      if (matchKey(key)) {\r\n        return fnOrValue(pairs[i + 1], key)\r\n      }\r\n    }\r\n\r\n    // return default value\r\n    return fnOrValue(defaultValue, rootKey)\r\n  },\r\n\r\n  range(...args: number[]) {\r\n    if (args.length < 1) throw new Error('Usage: range(n) or range(s, e)')\r\n    if (args.length > 2) throw new Error('Usage: range(n) or range(s, e)')\r\n\r\n    const { start, end } =\r\n      args.length === 1\r\n        ? { start: 1, end: args[0] }\r\n        : { start: args[0], end: args[1] }\r\n\r\n    const n = Math.max(start, end) - Math.min(start, end) + 1\r\n    const arr = new Array(n)\r\n    const step = end > start ? 1 : -1\r\n\r\n    let i = 0\r\n    let j = n\r\n    let k = start\r\n\r\n    while (j--) {\r\n      arr[i++] = k\r\n      k += step\r\n    }\r\n\r\n    return arr\r\n  }\r\n}\r\n\r\nexport default inline\r\n","const strutil = {\r\n  camelToSentenceCase: (string: string) => {\r\n    if (!string) return string;\r\n    const tokens = string\r\n      .replace(/([A-Z]+|[0-9]+)/g, ' $1')\r\n      .trim()\r\n      .split(' ');\r\n    return tokens\r\n      .filter((t) => t && t.length)\r\n      .map((token) => {\r\n        const trimmed = token.trim();\r\n        return trimmed[0].toUpperCase() + trimmed.substring(1);\r\n      })\r\n      .join(' ');\r\n  },\r\n\r\n  camelToKebabCase: (string: string) => {\r\n    if (!string) return string;\r\n    const tokens = string\r\n      .replace(/([A-Z]+)/g, ' $1')\r\n      .trim()\r\n      .split(' ');\r\n    return tokens\r\n      .map((token) => token.trim().toLowerCase())\r\n      .join('-');\r\n  },\r\n\r\n  toProperCase: (string: string) => {\r\n    if (!string) return string;\r\n    return string[0].toUpperCase() + string.substring(1);\r\n  },\r\n\r\n  mutateWhile: (\r\n    original: string,\r\n    condition: { (value: string): boolean },\r\n    transform: { (value: string): string },\r\n  ) => {\r\n    let result = original;\r\n    while (condition(result)) {\r\n      result = transform(result);\r\n    }\r\n    return result;\r\n  },\r\n\r\n  toCamelCase: (string: string) => {\r\n    if (!string) return string;\r\n    const temp = string.replace(/\\s/g, '').trim();\r\n    if (temp.length === 0) return '';\r\n    return temp[0].toLowerCase() + temp.substring(1);\r\n  },\r\n\r\n  removeDoubleSpaces: (string: string) => (\r\n    strutil\r\n      .mutateWhile(\r\n        string,\r\n        (s) => s.indexOf('  ') >= 0,\r\n        (s) => s.replaceAll(/\\s\\s/g, ' '),\r\n      )\r\n      .trim()\r\n  ),\r\n};\r\n\r\nexport default strutil;\r\n","export function all(array: any[], test: any) {\r\n  const someAreFalse = array.some((x) => !test(x));\r\n  return !someAreFalse;\r\n}\r\n\r\nexport function uniques(array: any[]) {\r\n  return Array.from(new Set(array));\r\n}\r\n\r\nexport function toDictionary(items: any[], key: (item: any) => any) {\r\n  return items.reduce(\r\n    (dict: any, item: any) => Object.assign(dict, { [key(item)]: item }),\r\n    {},\r\n  );\r\n}\r\n\r\nexport function sortBy(\r\n  valueForItem: (item: any) => any,\r\n  order?: 'asc' | 'desc',\r\n) {\r\n  const dir = order && order === 'desc' ? -1 : 1;\r\n  return (a: any, b: any) => (valueForItem(a) < valueForItem(b) ? -1 : 1) * dir;\r\n}\r\nexport function sortByDesc(valueForItem: (item: any) => any) {\r\n  return (a: any, b: any) => (valueForItem(a) > valueForItem(b) ? -1 : 1);\r\n}\r\n\r\nexport default {\r\n  all,\r\n  uniques,\r\n  sortBy,\r\n  sortByDesc,\r\n  toDictionary,\r\n};\r\n","export function parse(date: string) {\r\n  const d = new Date();\r\n  const offsetMinutes = d.getTimezoneOffset();\r\n  const minutes = offsetMinutes % 60;\r\n  const hours = offsetMinutes / 60;\r\n  const hh = hours.toString().padStart(2, '0');\r\n  const mm = minutes.toString().padStart(2, '0');\r\n  const adjustmentTime = `${hh}:${mm}`;\r\n  const yyyymmdd = date.split('T')[0];\r\n  const [yyyy, MM, dd] = yyyymmdd.split('-');\r\n  const value = new Date(`${yyyy}-${MM}-${dd}T${adjustmentTime}:00.000`);\r\n  return value;\r\n}\r\n\r\nexport function isoToInt(isoDate: string) {\r\n  const [yyyy, MM, dd] = isoDate.split('T')[0].split('-');\r\n  return parseInt(`${yyyy}${MM}${dd}`, 10);\r\n}\r\n\r\nexport default {\r\n  parse,\r\n  isoToInt,\r\n};\r\n","import isNullOrUndefined from './isNullOrUndefined';\r\n\r\nimport { RecursiveContext, CallbackContext } from './types';\r\n\r\n\r\nexport function traverseObject(value: any, ctx: RecursiveContext) {\r\n  if (ctx.debug)\r\n    console.log(\r\n      new Array(ctx.depth).fill(' ').join('') + 'traverseObject value:',\r\n      value,\r\n      ' ctx:',\r\n      ctx,\r\n    );\r\n\r\n  let results: any[] = [];\r\n\r\n  if (isNullOrUndefined(value)) {\r\n    return results;\r\n  }\r\n\r\n  const { path, depth, ...other } = ctx;\r\n\r\n  // traverse own properties\r\n  for (let key of Object.keys(value)) {\r\n    results = results.concat(\r\n      traverseLeaf(value[key], {\r\n        ...other,\r\n        path: path.concat(key),\r\n        depth: depth + 1,\r\n        key,\r\n        index: key,\r\n      }),\r\n    );\r\n  }\r\n\r\n  // traverse symbol properties too\r\n  const symbols = Object.getOwnPropertySymbols(value);\r\n  if (symbols.length) {\r\n    for (let symbol of symbols) {\r\n      results = results.concat(\r\n        traverseLeaf(value[symbol], {\r\n          ...other,\r\n          path: path.concat(symbol),\r\n          depth: depth + 1,\r\n          key: symbol,\r\n          index: symbol,\r\n        }),\r\n      );\r\n    }\r\n  }\r\n\r\n  return results;\r\n}\r\n\r\nexport function traverseLeaf(value: any, ctx: RecursiveContext) {\r\n  if (ctx.debug)\r\n    console.log(\r\n      new Array(ctx.depth).fill(' ').join('') + 'traverseLeaf value:',\r\n      value,\r\n      ' ctx:',\r\n      ctx,\r\n    );\r\n\r\n  let results: any[] = [];\r\n\r\n  const cbContext: CallbackContext = {\r\n    value,\r\n    type: typeof value,\r\n    contructorName: value ? value.constructor.name : undefined,\r\n    key: ctx.key,\r\n    path: ctx.path\r\n      .map((t: any) => {\r\n        const token = typeof t === 'string' ? t : t.toString();\r\n        return token[0] === '[' ? token : '.' + token;\r\n      })\r\n      .join('')\r\n      .substring(1),\r\n    tokens: ctx.path,\r\n  };\r\n\r\n  // if find and select are both present\r\n  if (ctx.find && ctx.select && ctx.find(cbContext)) {\r\n    return ctx.select(cbContext);\r\n  }\r\n\r\n  if (ctx.filter) {\r\n    // if filter present\r\n    if (ctx.filter(cbContext)) {\r\n      if (ctx.visit) {\r\n        ctx.visit(cbContext);\r\n      }\r\n      if (ctx.select) {\r\n        results = results.concat(ctx.select(cbContext));\r\n      }\r\n    }\r\n  } else {\r\n    // no filter present\r\n    if (ctx.visit) {\r\n      ctx.visit(cbContext);\r\n    }\r\n    if (ctx.select) {\r\n      results = results.concat(ctx.select(cbContext));\r\n    }\r\n  }\r\n\r\n  if (Array.isArray(value)) {\r\n    if (!ctx.expand || ctx.expand(cbContext)) {\r\n      results = results.concat(traverseArray(value, ctx));\r\n    }\r\n  } else if (typeof value === 'object') {\r\n    if (!ctx.expand || ctx.expand(cbContext)) {\r\n      results = results.concat(traverseObject(value, ctx));\r\n    }\r\n  }\r\n\r\n  return results;\r\n}\r\n\r\nexport function traverseArray(value: any, ctx: RecursiveContext) {\r\n  if (ctx.debug)\r\n    console.log(\r\n      new Array(ctx.depth).fill(' ').join('') + 'traverseArray value:',\r\n      value,\r\n      ' ctx:',\r\n      ctx,\r\n    );\r\n\r\n  let results: any[] = [];\r\n\r\n  const { path, depth, ...other } = ctx;\r\n\r\n  for (let index = 0; index < value.length; index++) {\r\n    results = results.concat(\r\n      traverseLeaf(value[index], {\r\n        ...other,\r\n        path: path.concat(`[${index}]`),\r\n        depth: depth + 1,\r\n        key: index,\r\n        index,\r\n      }),\r\n    );\r\n  }\r\n\r\n  return results;\r\n}\r\n","export default function isNullOrUndefined(value: any) {\r\n    return typeof value === 'undefined' || value === null;\r\n}\r\n","import { traverseLeaf } from './traversers';\r\nimport { Traverse, TraverseOptions, SelectorFunction } from './types';\r\n\r\nconst traverse: Traverse = (\r\n  source: any,\r\n  strategy: TraverseOptions | SelectorFunction,\r\n) => {\r\n  const ns =\r\n    typeof strategy === 'object' && Reflect.has(strategy, 'namespace')\r\n      ? (strategy as TraverseOptions).namespace\r\n      : null;\r\n  const initialPathTokens = ns ? [ns] : [];\r\n\r\n  const options =\r\n    typeof strategy === 'object'\r\n      ? (strategy as TraverseOptions)\r\n      : { select: strategy as SelectorFunction };\r\n\r\n  const results = traverseLeaf(source, {\r\n    ...options,\r\n    path: initialPathTokens,\r\n    depth: 0,\r\n  });\r\n\r\n  return results;\r\n};\r\n\r\nexport default traverse;\r\n","/**\r\n * Recursively builds nested object from path tokens, assigning symbols (if any)\r\n * to each corresponding namespace, assigning value at the end.\r\n * @param {*} target\r\n * @param {*} tokens\r\n * @param {*} value\r\n */\r\nfunction assignPath(target: any, tokens: string[], value: any) {\r\n  let cursor = target;\r\n  for (let i = 0; i < tokens.length; i += 1) {\r\n    const token = tokens[i];\r\n    const node = cursor[token];\r\n    const t = typeof node;\r\n\r\n    if (t === 'undefined' || node === null) {\r\n      cursor[token] = {};\r\n    } else if (Array.isArray(cursor[token])) {\r\n      cursor[token] = { ...cursor[token] };\r\n    } else if (t === 'object') {\r\n      cursor[token] = { ...node };\r\n    }\r\n\r\n    if (i === tokens.length - 1) {\r\n      cursor[token] = value;\r\n      return value; // exit function\r\n    }\r\n    cursor = cursor[token];\r\n  }\r\n  return value;\r\n}\r\n\r\nexport default assignPath;\r\n","function sum(args: number[]) {\r\n  return args.reduce((acc, item) => acc + item, 0);\r\n}\r\n\r\nexport type SelectorFunction = (value: any, key: any, object: any) => any;\r\n\r\nconst aggregate = (\r\n  source: any,\r\n  fn: Function,\r\n  select: SelectorFunction,\r\n  defaultValue: any,\r\n) => {\r\n  if (!source) {\r\n    return defaultValue;\r\n  }\r\n\r\n  return Object.keys(source)\r\n    .map((key) => {\r\n      const item = { key, item: source[key] };\r\n      return item;\r\n    })\r\n    .reduce((acc, elem) => {\r\n      const itemValue = select(elem.item, elem.key, source);\r\n      const result = fn(acc, itemValue);\r\n\r\n      return result;\r\n    }, defaultValue);\r\n};\r\n\r\nconst fnConcat = (acc: any[], arr: any[]) => {\r\n  return acc.concat(arr);\r\n};\r\n\r\nexport default class MapReduceObject {\r\n  object: any;\r\n\r\n  constructor(object: any) {\r\n    this.object = object;\r\n  }\r\n  \r\n  count() {\r\n    return Object.keys(this.object).length;\r\n  }\r\n\r\n  map(select?: SelectorFunction) {\r\n    return Object.entries(this.object).map(([key, value]) => {\r\n      if (select) {\r\n        return select(value, key, this.object);\r\n      }  \r\n      return value;\r\n    });\r\n  }\r\n\r\n  concat(select: SelectorFunction) {\r\n    return aggregate(this.object, fnConcat, select, []);\r\n  }\r\n\r\n  min(select: SelectorFunction) {\r\n    return aggregate(this.object, Math.min, select, Number.MAX_VALUE);\r\n  }\r\n\r\n  max(select: SelectorFunction) {\r\n    return aggregate(this.object, Math.max, select, Number.MIN_VALUE);\r\n  }\r\n\r\n  sum(select: SelectorFunction) {\r\n    return sum(this.map(select));\r\n  }\r\n\r\n  avg(select: SelectorFunction) {\r\n    const values = this.map(select);\r\n    if (values.length === 0) return 0;\r\n    return sum(values) / values.length;\r\n  }\r\n}\r\n","import logic from './logic';\r\nimport string from './string';\r\nimport array from './array';\r\nimport date from './date';\r\nimport Object from './object';\r\n\r\nexport default {\r\n  array,\r\n  logic,\r\n  object: Object,\r\n  string,\r\n  date,\r\n};\r\n","import traverse from './traverse';\r\nimport assignPath from './assignPath';\r\nimport selectShape from './selectShape';\r\nimport intersect from './intersect';\r\nimport MapReduceObject from './mapReduceObject';\r\n\r\nexport default {\r\n  traverse,\r\n  assignPath,\r\n  selectShape,\r\n  intersect,\r\n  mapReduce(obj: any) {\r\n    return new MapReduceObject(obj);\r\n  },\r\n};\r\n","import _ from 'lodash';\r\nimport traverse from './traverse';\r\nimport assignPath from './assignPath';\r\n\r\nexport default function selectShape(object: any, shape: any) {\r\n  const selectors = traverse(shape, {\r\n    select: (x: any) => ({ tokens: x.tokens, key: x.key, alias: x.value }),\r\n  });\r\n  const result = selectors.reduce((map: any, selector: any) => {\r\n    const tokens = selector.tokens.slice(0, selector.tokens.length - 1);\r\n\r\n    const sourcePath = [...tokens, selector.key].join('.');\r\n    const value = _.get(object, sourcePath);\r\n\r\n    const targetPathTokens = [...tokens, selector.alias];\r\n\r\n    assignPath(map, targetPathTokens, value);\r\n\r\n    return map;\r\n  }, {});\r\n\r\n  return result;\r\n}\r\n","/**\r\n * @param object Returns a new object having only common top level properties with shape.\r\n * @param shape A shallow object defining properties to match.\r\n */\r\nexport default function intersect(object: any, shape: any) {\r\n  const keys = Object.keys(shape).filter((k) => Reflect.has(object, k));\r\n  return keys.reduce((target: any, key) => {\r\n    target[key] = object[key];\r\n    return target;\r\n  }, {});\r\n}\r\n","/* eslint jsx-quotes: [\"error\", \"prefer-double\"] */\r\nimport React, { ReactNode } from 'react';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardActionArea from '@material-ui/core/CardActionArea';\r\nimport CardActions from '@material-ui/core/CardActions';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport CardMedia from '@material-ui/core/CardMedia';\r\nimport Button from '@material-ui/core/Button';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport util from './util';\r\n\r\nconst useStyles = makeStyles({\r\n  root: {\r\n    maxWidth: 345,\r\n  },\r\n  media: {\r\n    height: 140,\r\n  },\r\n});\r\n\r\nexport type MediaCardActionMap = {\r\n  [index: string]: Function;\r\n};\r\nexport type MediaCardProps = {\r\n  title?: string;\r\n  description?: string;\r\n  children?: ReactNode;\r\n  image?: any;\r\n  onClick?: Function;\r\n  footerActions?: MediaCardActionMap;\r\n};\r\n\r\nexport default function MediaCard(props: MediaCardProps) {\r\n  const {\r\n    title, description, image, onClick, footerActions, children,\r\n  } = props;\r\n  const classes = useStyles();\r\n  return (\r\n    <Card className={classes.root}>\r\n      <CardActionArea onClick={() => onClick && onClick()}>\r\n        {image && (\r\n          <CardMedia\r\n            className={classes.media}\r\n            image={image.url}\r\n            title={title}\r\n          />\r\n        )}\r\n        <CardContent>\r\n          {title && (\r\n            <Typography gutterBottom variant=\"h5\" component=\"h2\">\r\n              {title}\r\n            </Typography>\r\n          )}\r\n\r\n          {description && (\r\n            <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\r\n              {description}\r\n            </Typography>\r\n          )}\r\n\r\n          {children && children}\r\n        </CardContent>\r\n      </CardActionArea>\r\n      {footerActions && (\r\n        <CardActions>\r\n          {Object.keys(footerActions).map((key) => (\r\n            <Button\r\n              key={key}\r\n              size=\"small\"\r\n              color=\"primary\"\r\n              onClick={() => footerActions![key]()}\r\n            >\r\n              {util.string.camelToSentenceCase(key)}\r\n            </Button>\r\n          ))}\r\n        </CardActions>\r\n      )}\r\n    </Card>\r\n  );\r\n}\r\n","import { useMemo } from 'react';\r\nimport { createStyles, makeStyles } from '@material-ui/core/styles';\r\nimport util from '../util';\r\n\r\nconst useInlineStyle = (style: any, dependencies: any) => {\r\n  const cb = useMemo(() => (\r\n    makeStyles(() => (\r\n      createStyles({ ...util.logic.fnOrValue(style) })\r\n    ))\r\n  ), [style, dependencies]);\r\n  return cb;\r\n};\r\nexport default useInlineStyle;\r\n","import React from 'react';\r\n\r\nconst Header = (props: any) => {\r\n    \r\n    const cols = props.cols || [];\r\n\r\n    return <thead>\r\n        <tr>\r\n            {\r\n                cols.map((c: any, index: number) => {\r\n                    return <th key={index}>{c}</th>\r\n                })\r\n            }\r\n        </tr>\r\n    </thead>\r\n}\r\n\r\nexport default Header;","import React from 'react';\r\n\r\nconst TableRow = (props: any) => {\r\n    \r\n    const item = props.item;\r\n    const cols = props.cols;\r\n\r\n    const isArray = Array.isArray(item);\r\n\r\n    return (\r\n        <tr className=\"no-text-overflow\">\r\n\r\n            {\r\n                isArray &&\r\n                item.map((value: any, index: number) => {\r\n                    return <td key={cols[index]}>\r\n                        {\r\n                            typeof value === 'number' &&\r\n                            value.toFixed(0)\r\n                        }\r\n                    </td>\r\n                })   \r\n            }\r\n\r\n            {\r\n                !isArray &&\r\n                cols.map((c: any, index: number) => {\r\n                    return <td key={cols[index]}>\r\n                        {\r\n                            typeof item[c] === 'number' &&\r\n                            item[c].toFixed(0)\r\n                        }\r\n                    </td>\r\n                })\r\n            }\r\n        </tr>\r\n    )\r\n}\r\n\r\nexport default TableRow;","const attributeMap = {\r\n  bgColor: 'backgroundColor',\r\n};\r\n\r\nexport default attributeMap;\r\n","const classMap = {\r\n  scrollableX: 'scrollable scrollable-x',\r\n  scrollableY: 'scrollable scrollable-y',\r\n  borderBox: 'border-box',\r\n};\r\n\r\nexport default classMap;\r\n","import attributeMap from './attributeMap';\r\nimport resolveAttributeValue from './resolveAttributeValue';\r\nimport classMap from './classMap';\r\nimport str from '../util/string';\r\n\r\nexport type StyleBag = { style: any; classes: string[] };\r\nexport type BagKeyValue = {\r\n  bag: StyleBag;\r\n  key: string;\r\n  value?: any;\r\n  debug: boolean;\r\n};\r\n\r\nexport function getOrMakeStyle(x: BagKeyValue) {\r\n  const resolvedKey = Reflect.has(attributeMap, x.key)\r\n    ? (attributeMap as any)[x.key]\r\n    : x.key;\r\n  return { [resolvedKey]: resolveAttributeValue(resolvedKey, x.value) };\r\n}\r\n\r\nexport function createStyle(x: BagKeyValue) {\r\n  Object.assign(x.bag.style, getOrMakeStyle(x));\r\n  return true;\r\n}\r\n\r\nexport function createClass(x: BagKeyValue) {\r\n  const resolvedClass = Reflect.has(classMap, x.key)\r\n    ? (classMap as any)[x.key]\r\n    : str.camelToKebabCase(x.key);\r\n  x.bag.classes.push(resolvedClass);\r\n  return true;\r\n}\r\n","export default function resolveAttributeValue(key: string, value?: any) {\r\n  if (!value) return value;\r\n  return value.hex ? value.hex() : value;\r\n}\r\n","export interface ClassSwitches {\r\n  absolute?: boolean;\r\n\r\n  alignStart?: boolean;\r\n  alignCenter?: boolean;\r\n  alignEnd?: boolean;\r\n  alignStretch?: boolean;\r\n  alignBaseline?: boolean;\r\n  alignAuto?: boolean;\r\n\r\n  alignSelfStart?: boolean;\r\n  alignSelfCenter?: boolean;\r\n  alignSelfEnd?: boolean;\r\n  alignSelfStretch?: boolean;\r\n  alignSelfBaseline?: boolean;\r\n\r\n  anchorBottom?: boolean;\r\n  anchorLeft?: boolean;\r\n  anchorRight?: boolean;\r\n  anchorTop?: boolean;\r\n\r\n  beveled?: boolean;\r\n  block?: boolean;\r\n  borderBox?: boolean;\r\n\r\n  centerX?: boolean;\r\n  centerXY?: boolean;\r\n  centerY?: boolean;\r\n  clickable?: boolean;\r\n  coverImage?: boolean;\r\n\r\n  fill?: boolean;\r\n  fixed?: boolean;\r\n  fullWidth?: boolean;\r\n  fullWidthAlways?: boolean;\r\n\r\n  grow?: boolean;\r\n\r\n  hidden?: boolean;\r\n  horizontal?: boolean;\r\n\r\n  inline?: boolean;\r\n  inlineBlock?: boolean;\r\n\r\n  justifyStart?: boolean;\r\n  justifyCenter?: boolean;\r\n  justifyEnd?: boolean;\r\n\r\n  mobileCenter?: boolean;\r\n  mobileColumn?: boolean;\r\n  mobileOnly?: boolean;\r\n\r\n  noBr?: boolean;\r\n  noBreak?: boolean;\r\n  noMargin?: boolean;\r\n  noMobile?: boolean;\r\n  noOverflow?: boolean;\r\n  noPadding?: boolean;\r\n  noSelect?: boolean;\r\n  noTransform?: boolean;\r\n  noWrap?: boolean;\r\n\r\n  opaque?: boolean;\r\n  overlay?: boolean;\r\n\r\n  relative?: boolean;\r\n  root?: boolean;\r\n  round?: boolean;\r\n  rounded?: boolean;\r\n\r\n  scrollable?: boolean;\r\n  scrollableX?: boolean;\r\n  scrollableY?: boolean;\r\n  shrink?: boolean;\r\n  small?: boolean;\r\n  smaller?: boolean;\r\n  solid?: boolean;\r\n  spaced?: boolean;\r\n  square?: boolean;\r\n  sticky?: boolean;\r\n\r\n  tall?: boolean;\r\n  translucent?: boolean;\r\n\r\n  vertical?: boolean;\r\n\r\n  wide?: boolean;\r\n}\r\n\r\nconst switches: ClassSwitches = {\r\n  absolute: true,\r\n\r\n  alignStart: true,\r\n  alignCenter: true,\r\n  alignEnd: true,\r\n  alignStretch: true,\r\n  alignBaseline: true,\r\n  alignAuto: true,\r\n\r\n  alignSelfStart: true,\r\n  alignSelfCenter: true,\r\n  alignSelfEnd: true,\r\n  alignSelfStretch: true,\r\n  alignSelfBaseline: true,\r\n\r\n  anchorBottom: true,\r\n  anchorLeft: true,\r\n  anchorRight: true,\r\n  anchorTop: true,\r\n\r\n  beveled: true,\r\n  block: true,\r\n  borderBox: true,\r\n\r\n  centerX: true,\r\n  centerXY: true,\r\n  centerY: true,\r\n  clickable: true,\r\n  coverImage: true,\r\n\r\n  fill: true,\r\n  fixed: true,\r\n  fullWidth: true,\r\n  fullWidthAlways: true,\r\n\r\n  grow: true,\r\n\r\n  hidden: true,\r\n  horizontal: true,\r\n\r\n  inline: true,\r\n  inlineBlock: true,\r\n\r\n  justifyStart: true,\r\n  justifyCenter: true,\r\n  justifyEnd: true,\r\n\r\n  mobileCenter: true,\r\n  mobileColumn: true,\r\n  mobileOnly: true,\r\n\r\n  noBr: true,\r\n  noBreak: true,\r\n  noMargin: true,\r\n  noMobile: true,\r\n  noOverflow: true,\r\n  noPadding: true,\r\n  noSelect: true,\r\n  noTransform: true,\r\n  noWrap: true,\r\n\r\n  opaque: true,\r\n  overlay: true,\r\n\r\n  relative: true,\r\n  round: true,\r\n  rounded: true,\r\n\r\n  scrollable: true,\r\n  scrollableX: true,\r\n  scrollableY: true,\r\n  shrink: true,\r\n  small: true,\r\n  smaller: true,\r\n  solid: true,\r\n  spaced: true,\r\n  sticky: true,\r\n\r\n  tall: true,\r\n  translucent: true,\r\n\r\n  vertical: true,\r\n\r\n  wide: true,\r\n};\r\n\r\nexport default switches;\r\n","import { ReactNode } from 'react';\r\nimport { createStyle } from './functions';\r\nimport * as CSS from 'csstype';\r\n\r\nexport interface StyleAttributes {\r\n  \r\n  backgroundColor?: any;\r\n  bgColor?: any;\r\n\r\n  backgroundImage?: any,\r\n  backgroundRepeat?: any,\r\n  backgroundPosition?: any,\r\n  backgroundSize?: any,\r\n\r\n  border?: any;\r\n  borderTop?: any;\r\n  borderRight?: any;\r\n  borderBottom?: any;\r\n  borderLeft?: any;\r\n\r\n  borderRadius?: any;\r\n  borderTopLeftRadius?: any;\r\n  borderTopRightRadius?: any;\r\n  borderBottomLeftRadius?: any;\r\n  borderBottomRightRadius?: any;\r\n\r\n  borderColor?: any;\r\n\r\n  children?: ReactNode;\r\n  className?: string;\r\n  color?: string;\r\n  css?: CSS.Properties | any;\r\n  cursor?: 'pointer' | string;\r\n\r\n  data?: any;\r\n  dataProps?: any;\r\n\r\n  fontSize?: any;\r\n  fontStyle?: any;\r\n  fontWeight?: any;\r\n\r\n  id?: any;\r\n  innerProps?: any;\r\n\r\n  lineHeight?: number;\r\n\r\n  margin?: any;\r\n  marginTop?: any;\r\n  marginRight?: any;\r\n  marginBottom?: any;\r\n  marginLeft?: any;\r\n\r\n  minHeight?: any;\r\n  minWidth?: any;\r\n\r\n  onBlur?: Function;\r\n  onClick?: Function;\r\n  onChange?: Function;\r\n  onFocus?: Function;\r\n  onMouseUp?: Function;\r\n  onMouseDown?: Function;\r\n  onMouseMove?: Function;\r\n\r\n  opacity?: any;\r\n\r\n  padding?: any;\r\n  paddingTop?: any;\r\n  paddingRight?: any;\r\n  paddingBottom?: any;\r\n  paddingLeft?: any;\r\n  pseudo?: any;\r\n\r\n  textAlign?: any;\r\n  textTransform?: any;\r\n  title?: any;\r\n\r\n  // SPECIAL GROUPS\r\n\r\n  // size\r\n  width?: any;\r\n  height?: any;\r\n\r\n  // position\r\n  top?: any;\r\n  right?: any;\r\n  bottom?: any;\r\n  left?: any;\r\n}\r\n\r\nexport default {\r\n  backgroundColor: createStyle,\r\n  bgColor: createStyle,\r\n\r\n  backgroundImage: createStyle,\r\n  backgroundRepeat: createStyle,\r\n  backgroundPosition: createStyle,\r\n  backgroundSize: createStyle,\r\n\r\n  border: createStyle,\r\n  borderTop: createStyle,\r\n  borderRight: createStyle,\r\n  borderBottom: createStyle,\r\n  borderLeft: createStyle,\r\n\r\n  borderRadius: createStyle,\r\n  borderTopLeftRadius: createStyle,\r\n  borderTopRightRadius: createStyle,\r\n  borderBottomLeftRadius: createStyle,\r\n  borderBottomRightRadius: createStyle,\r\n\r\n  color: createStyle,\r\n  cursor: createStyle,\r\n\r\n  dataProps: createStyle,\r\n  fontSize: createStyle,\r\n  fontStyle: createStyle,\r\n  fontWeight: createStyle,\r\n\r\n  innerProps: createStyle,\r\n  lineHeight: createStyle,\r\n\r\n  margin: createStyle,\r\n  marginTop: createStyle,\r\n  marginRight: createStyle,\r\n  marginBottom: createStyle,\r\n  marginLeft: createStyle,\r\n\r\n  minHeight: createStyle,\r\n  minWidth: createStyle,\r\n\r\n  opacity: createStyle,\r\n\r\n  padding: createStyle,\r\n  paddingTop: createStyle,\r\n  paddingRight: createStyle,\r\n  paddingBottom: createStyle,\r\n  paddingLeft: createStyle,\r\n\r\n  pseudo: createStyle,\r\n\r\n  textAlign: createStyle,\r\n  textTransform: createStyle,\r\n  title: createStyle,\r\n  width: createStyle,\r\n  height: createStyle,\r\n\r\n  // position\r\n  top: createStyle,\r\n  right: createStyle,\r\n  bottom: createStyle,\r\n  left: createStyle,\r\n};\r\n","// import React from 'react';\r\nimport clsx from 'clsx';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { StyleBag, createClass } from './functions';\r\nimport classSwitches from './classSwitches';\r\nimport styleAttributes, { StyleAttributes } from './styleAttributes';\r\n\r\nfunction useStyleDirectives<T>(\r\n  directives: any,\r\n  ownProps: any,\r\n  tagName?: string,\r\n  ...baseClasses: string[]\r\n) {\r\n\r\n  const {\r\n    id,\r\n    children,\r\n    style,\r\n    className,\r\n    ref,\r\n    data,\r\n    pseudo,\r\n    innerProps,\r\n    css,\r\n    //events\r\n    onBlur,\r\n    onClick,\r\n    onChange,\r\n    onFocus,\r\n    onMouseUp,\r\n    onMouseDown,\r\n    onMouseMove,\r\n    // ...\r\n    ...other\r\n  } = directives;\r\n\r\n\r\n  const ignoredProps = {\r\n    id,\r\n    children,\r\n    style,\r\n    className,\r\n    ref,\r\n    data,\r\n    pseudo,\r\n    innerProps,\r\n    ownProps,\r\n    css,\r\n    onBlur,\r\n    onClick,\r\n    onChange,\r\n    onFocus,\r\n    onMouseUp,\r\n    onMouseDown,\r\n    onMouseMove,\r\n  };\r\n\r\n  const utilizedKeys: string[] = [];\r\n  const keys = Object.keys(other);\r\n\r\n  const bag: StyleBag = { \r\n    style: { \r\n      ...css, \r\n      ...style \r\n    }, \r\n    classes: [] \r\n  };\r\n  \r\n  // Process each directive (except ignored ones)\r\n  keys.forEach((key: any) => {\r\n    if (!Reflect.has(ignoredProps, key)) {\r\n      const value = directives[key];\r\n\r\n      if (Reflect.has(classSwitches, key)) {             \r\n        createClass({ bag, key, value, debug: false });       // If its a CLASS SWITCH\r\n        utilizedKeys.push(key);\r\n        return;\r\n      } \r\n\r\n      if (Reflect.has(styleAttributes, key)) {                // If its an ATTRIBUTE\r\n        (styleAttributes as any)[key]({ bag, key, value });\r\n        utilizedKeys.push(key);\r\n        return;\r\n      } \r\n            \r\n      if (value === true) {\r\n        createClass({ bag, key, value, debug: false });\r\n      }\r\n    \r\n    }\r\n  });\r\n\r\n  const props = { ...other };\r\n  utilizedKeys.forEach((key) => {\r\n    delete props[key];\r\n  });\r\n\r\n  const pseudoStyles = Object.keys(directives.pseudo || {}).reduce(\r\n    (acc: any, key) => {\r\n      const s = directives.pseudo[key];\r\n      const fullKey = key[0] === '&' ? key : `& :${key}`;\r\n      return Object.assign(acc, { [fullKey]: s });\r\n    },\r\n    {},\r\n  );\r\n\r\n  const usedStyles: any = makeStyles(() => {\r\n    const s: any = {};\r\n    if (Object.keys(bag.style).length) s.bag = bag.style;\r\n    if (Object.keys(pseudoStyles).length) s.pseudo = pseudoStyles;\r\n    return s;\r\n  })();\r\n\r\n  const events = {\r\n    onBlur,\r\n    onClick,\r\n    onChange,\r\n    onFocus,\r\n    onMouseUp,\r\n    onMouseDown,\r\n    onMouseMove,\r\n  }\r\n\r\n  const { dataProps, ...attr } = (directives as StyleAttributes);\r\n  const result = {\r\n    root: {\r\n      className: clsx(\r\n        className,\r\n        baseClasses,\r\n        tagName,\r\n        bag.classes,\r\n        usedStyles.bag,\r\n        usedStyles.pseudo,\r\n      ),\r\n    },\r\n    props: { ...(props as T), ...ignoredProps },\r\n    attr,\r\n    data: dataProps,\r\n    events,\r\n  };\r\n\r\n  return result;\r\n}\r\n\r\nexport default useStyleDirectives;\r\n","import React, { ReactNode } from 'react';\r\n\r\n\r\nimport { PropsDirectives, useStyleDirectives } from './directives';\r\n\r\ntype DivProps = { children?: ReactNode, id?: string };\r\n\r\nexport const div = (directives: DivProps & PropsDirectives) => {\r\n  const { children, ...other }      = directives;\r\n  const { root, data, events } = useStyleDirectives<DivProps>(other, null);\r\n  return (\r\n    <div {...data} className={root.className} {...events}>\r\n      {children}\r\n    </div>\r\n  );\r\n};\r\n\r\ntype RowProps = { children?: ReactNode, id?: string };\r\nexport const row = (directives: RowProps & PropsDirectives) => {\r\n  const { children, ...other } = directives;\r\n  const { root, data, events  } = useStyleDirectives<RowProps>(\r\n    other,\r\n    null,\r\n    'Row',\r\n    'flex row',\r\n  );\r\n  return (\r\n    <div {...data} className={root.className} {...events}>\r\n      {children}\r\n    </div>\r\n  );\r\n};\r\n\r\ntype ColProps = { children?: ReactNode, id?: string };\r\nexport const col = (directives: ColProps & PropsDirectives) => {\r\n  const { children, ...other } = directives;\r\n  const { root, data, events  } = useStyleDirectives<ColProps>(\r\n    other,\r\n    null,\r\n    'Col',\r\n    'flex column',\r\n  );\r\n  return (\r\n    <div {...data} className={root.className} {...events}>\r\n      {children}\r\n    </div>\r\n  );\r\n};\r\n\r\n","import { isNumber } from 'lodash';\r\nimport ui from '..';\r\n\r\nexport type ColorPortion = { color: string, parts?: number };\r\nexport type ColorNameOrPortion = string|ColorPortion;\r\n\r\ninterface ParsedColor { color: string, parts: number };\r\n\r\nexport type StripeOptionsType = {\r\n    angle?: number,\r\n    size?: any,\r\n    colors?: ColorNameOrPortion[],\r\n    segments?: string[],\r\n};\r\n\r\nconst defaultProps = {\r\n    angle: 90,\r\n};\r\n\r\n// export function useStripes(options: StripeOptionsType, dependencies: any[]) {\r\n\r\n//     ui.trace.styles && console.log(\"@ %cuseStripes\", 'color: #00cc00');\r\n    \r\n//     const params = { ...defaultProps, ...options };\r\n//     const style = React.useMemo(() => generateStripesStyle(params), dependencies);\r\n//     return style;\r\n// }\r\n\r\nexport function createStripes(options: StripeOptionsType) {\r\n    const params = { ...defaultProps, ...options };\r\n    return generateStripesStyle(params);\r\n}\r\n\r\nfunction colorFromString(color: string) {\r\n    const tokens = color.split(' ');\r\n    if (tokens.length === 1) return { color: tokens[0], parts: 1 };\r\n    if (tokens.length === 2) return { color: tokens[0], parts: +tokens[1] };\r\n    throw new Error('Max number of color tokens expected is 2');\r\n}\r\nfunction parseColor(color: ColorNameOrPortion) {\r\n    if (typeof color === 'string') return colorFromString(color);\r\n    return color as ParsedColor;\r\n}\r\n\r\nfunction generateStripesStyle(params: any) {\r\n    const type = 'linear-gradient';\r\n    const { angle, segments } = params;\r\n    const colors = params.colors ? params.colors.map((c: ColorNameOrPortion) => parseColor(c)) : null;\r\n    \r\n    const partCount: number = colors.reduce((total: number, c: ParsedColor) => (+total) + c.parts, 0);\r\n    const steps = partCount * 2;\r\n    const step = 100 / steps;\r\n\r\n    const colorCount = colors.length;\r\n    const n = colorCount * 2;\r\n\r\n    const outSegments: string[] = [];\r\n    let distance = 0;\r\n    \r\n    for (let i = 0; i < n; i++) {\r\n        const index = i % colorCount;\r\n        const nextIndex = (i + 1) % colorCount;\r\n        distance += step * colors[index].parts;\r\n        outSegments.push(colors[index].color + ' ' + distance.toFixed(2) + '%');\r\n        if (i < n - 1) {\r\n            outSegments.push(colors[nextIndex].color + ' ' + distance.toFixed(2) + '%');\r\n        }\r\n    }\r\n\r\n    const size = params.size || steps;\r\n\r\n    const styleProps = {\r\n        backgroundImage: `${type}(${angle}deg, ${outSegments.join(', ')})`,\r\n        backgroundSize: isNumber(size) ? `${size.toFixed(2)}px ${size.toFixed(2)}px` : size,\r\n    };\r\n\r\n    return styleProps;\r\n}","import React from 'react';\r\n\r\nexport type RGBA = { r: number, g: number, b: number, a: number };\r\n\r\nexport type BoxShadowOptions = { \r\n    inset?: boolean,\r\n    xOffset?: number,\r\n    yOffset?: number,\r\n    blur?: number,\r\n    spread?: number,\r\n    rgba?: RGBA,\r\n    hex?: string,\r\n};\r\n\r\nexport const BoxShadowDefaults = {\r\n    xOffset: 0,\r\n    yOffset: 0,\r\n    blur: 5,\r\n    spread: 0,\r\n    rgba: { r: 0, g: 0, b: 0, a: 0.75 } as RGBA,\r\n};\r\nexport default (props: BoxShadowOptions) => {\r\n    const init = () => {\r\n        const x = { ...BoxShadowDefaults, ...props };\r\n        const colorString = props.rgba \r\n            ? `rgba(${x.rgba.r}, ${x.rgba.g}, ${x.rgba.b}, ${x.rgba.a})`\r\n            : props.hex;\r\n\r\n        const inset = props.inset ? 'inset ' : '';\r\n        const value = inset + `${x.xOffset}px ${x.yOffset}px ${x.blur}px ${x.spread}px ${colorString}`;\r\n        return {\r\n            \"-webkit-box-shadow\": value,\r\n            \"-moz-box-shadow\": value,\r\n            \"box-shadow\": value,\r\n        }\r\n    }; \r\n    return React.useState(init)[0];\r\n}","import {useState, useEffect, useRef} from 'react'; \r\nconst isClient = typeof window === 'object'; \r\nconst gridSizeValues: any = { \r\n    xs: 1, \r\n    sm: 2, \r\n    md: 3, \r\n    lg: 4, \r\n    xl: 5, \r\n    xxl: 6, \r\n    xxxl: 7, \r\n}; \r\nconst breakpointSystem = {\r\n    bootstrap: [ \r\n        [1600, 'xxxl'], \r\n        [1400, 'xxl'], \r\n        [1200, 'xl'], \r\n        [992, 'lg'], \r\n        [768, 'md'], \r\n        [576, 'sm'] \r\n    ],\r\n    material: [ \r\n        [1920, 'xl'], \r\n        [1280, 'lg'], \r\n        [960, 'md'], \r\n        [600, 'sm'] \r\n    ],\r\n}\r\nconst getGridSize = (system: 'material' | 'bootstrap') => { \r\n    if(!isClient) return 'xs'; \r\n    const breaks = breakpointSystem[system];\r\n    for(let x of breaks) { \r\n        if(window.innerWidth >= x[0]) { \r\n            return x[1] as string; \r\n        } \r\n    } \r\n    return 'xs'; \r\n} \r\n\r\nconst makeGridSizeResult = (code: string) => ({ code, value: gridSizeValues[code] });\r\nexport const useGridSize = (system: 'material' | 'bootstrap') => {                          // useGridSize\r\n    const ref = useRef({ value: 'xs', ticking: false }).current;\r\n    const [state, setState] = useState(() => makeGridSizeResult(getGridSize(system))); \r\n    useEffect(\r\n        () => windowEventHandler(\r\n            ref, \r\n            (gridSize: any) => setState(makeGridSizeResult(gridSize)), \r\n            'resize', \r\n            () => getGridSize(system)\r\n        )\r\n    , []); \r\n\r\n    return state; \r\n} \r\n\r\nfunction getWindowHeight() { return window.innerHeight }\r\nexport const useWindowHeight = () => {                                                      // useWindowHeight\r\n    const ref = useRef({ value: 0, ticking: false }).current;\r\n    const [state, setState] = useState(() => !isClient ? 0 : getWindowHeight()); \r\n    useEffect(\r\n        () => windowEventHandler(ref, setState, 'resize', getWindowHeight)\r\n    , [ref]) ;\r\n    return state;\r\n} \r\n\r\n\r\nfunction getWindowWidth() { return window.innerWidth }\r\nexport const useWindowWidth = () => {                                                       // useWindowWidth\r\n    const ref = useRef({ value: 0, ticking: false }).current;\r\n    const [state, setState] = useState(() => !isClient ? 0 : getWindowWidth()); \r\n    useEffect(\r\n        () => windowEventHandler(ref, setState, 'resize', getWindowWidth)\r\n    , [ref]);\r\n    return state;\r\n} \r\n\r\nconst getScrollPosition = () => document.body.scrollTop || document.documentElement.scrollTop; \r\nexport const useScrollPosition = () => {\r\n    const ref = useRef({ value: 0, ticking: false }).current;\r\n    const [state, setState] = useState(() => !isClient ? 0 : getScrollPosition()); \r\n    useEffect(\r\n        () => windowEventHandler(ref, setState, 'scroll', getScrollPosition)\r\n    , [ref]); \r\n    return state; \r\n} \r\n\r\nfunction windowEventHandler(ref: any, setState: Function, event: string, readValue: Function, compare?: Function) {\r\n    if (!isClient) return; \r\n    const handleEvent = () => { \r\n        const value = readValue();\r\n        const compareValues = compare || ((a: any , b: any) => a === b);\r\n        if (compareValues(ref.value, value)) return;\r\n        ref.value = value;\r\n        if (!ref.ticking) { \r\n            window.requestAnimationFrame(() => { \r\n                setState(ref.value); \r\n                ref.ticking = false; \r\n            }); \r\n            ref.ticking = true; \r\n        } \r\n    }; \r\n    window.addEventListener(event, handleEvent); \r\n    return () => window.removeEventListener(event, handleEvent); \r\n}","import React from 'react';\r\nimport { isNumber } from 'lodash';\r\nimport clsx from 'clsx';\r\nimport ui from '..';\r\n\r\nexport type ColorPortion = { color: string, percentage?: number };\r\nexport type ColorNameOrPortion = string|ColorPortion;\r\n\r\nexport type LinearGradientSpecification = {\r\n    repeat?: boolean,\r\n    angle?: number,\r\n    colors?: ColorNameOrPortion[],\r\n};\r\n\r\nexport function useLinearGradient(options: LinearGradientSpecification|LinearGradientSpecification[], dependencies: any[]) {\r\n    const style = React.useMemo(() => generateLinearGradientStyle(options), dependencies);\r\n    return style;\r\n}\r\n\r\nexport function createLinearGradient(options: LinearGradientSpecification|LinearGradientSpecification[]) {\r\n    return generateLinearGradientStyle(options);\r\n}\r\n\r\n\r\nfunction parseColor(color: ColorNameOrPortion) {\r\n    function colorFromString(color: string) {\r\n        const tokens = color.split(' ');\r\n        if (tokens.length>2) {\r\n            throw new Error('Due to current limitation of this function, colors should be canonical without any spaces, e.g.: rgb(255,128,0,0.8) 75% is a valid color and stop pair.')\r\n        }\r\n        return tokens;\r\n    }    \r\n    if (typeof color === 'string') return colorFromString(color);\r\n    return [ color.color, color.percentage?.toString()];\r\n}\r\n\r\nfunction generateLinearGradientStyle(options: LinearGradientSpecification|LinearGradientSpecification[]) {\r\n    \r\n    const gradients: LinearGradientSpecification[] = Array.isArray(options) ? options : [options];\r\n\r\n    const functions = gradients.map((g: any) => {\r\n        const colors = g.colors.map((c: ColorNameOrPortion) => parseColor(c));\r\n        const functionName = g.repeat ? 'repeating-linear-gradient' : 'linear-gradient';\r\n        return `${functionName}(${g.angle}deg, ${colors.map((tuple: string[]) => tuple.join(' ')).join(', ')})`;\r\n    })\r\n\r\n    return { backgroundImage: functions.join(', ') };\r\n}","import { loremIpsum } from 'lorem-ipsum'\r\n\r\nexport type LoremIpsumOptions = {\r\n  count: number\r\n  format: 'plain' | 'html' | undefined\r\n  paragraphLowerBound: number | undefined\r\n  paragraphUpperBound: number | undefined\r\n  // random: Math.random,     // A PRNG function\r\n  sentenceLowerBound: number | undefined\r\n  sentenceUpperBound: number | undefined\r\n  suffix: string | undefined\r\n  units: 'paragraphs' | 'sentences' | 'words' | undefined\r\n  words?: string[]\r\n}\r\n\r\nexport const options: LoremIpsumOptions = {\r\n  count: 1, // Number of \"words\", \"sentences\", or \"paragraphs\"\r\n  format: 'plain', // \"plain\" or \"html\"\r\n  paragraphLowerBound: 3, // Min. number of sentences per paragraph.\r\n  paragraphUpperBound: 7, // Max. number of sentences per paragarph.\r\n  // random: Math.random,     // A PRNG function\r\n  sentenceLowerBound: 5, // Min. number of words per sentence.\r\n  sentenceUpperBound: 15, // Max. number of words per sentence.\r\n  suffix: '\\n', // Line ending, defaults to \"\\n\" or \"\\r\\n\" (win32)\r\n  units: 'words' // paragraph(s), \"sentence(s)\", or \"word(s)\"\r\n  // words: [\"ad\", ...]       // Array of words to draw from\r\n}\r\n\r\nfunction words(count: number, dictionary?: string[]) {\r\n  return loremIpsum({\r\n    ...options,\r\n    // overrides\r\n    count,\r\n    units: 'words',\r\n    words: dictionary\r\n  })\r\n}\r\n\r\nfunction sentences(count: number, dictionary?: string[]) {\r\n  return loremIpsum({\r\n    ...options,\r\n    // overrides\r\n    count,\r\n    units: 'sentences',\r\n    words: dictionary\r\n  })\r\n}\r\n\r\nfunction paragraphs(count: number, dictionary?: string[]) {\r\n  return loremIpsum({\r\n    ...options,\r\n    // overrides\r\n    count,\r\n    units: 'paragraphs',\r\n    words: dictionary\r\n  })\r\n}\r\n\r\nexport default {\r\n  words,\r\n  sentences,\r\n  paragraphs\r\n}\r\n","/* eslint jsx-quotes: [\"error\", \"prefer-double\"] */\r\nimport React, { \r\n  useEffect, \r\n  useRef, \r\n  ReactNode, \r\n  useMemo \r\n} from 'react';\r\nimport clsx from 'clsx';\r\nimport { Paper } from '@material-ui/core';\r\nimport { useTheme } from '@material-ui/core/styles';\r\n\r\nimport logic from '../util/logic';\r\nimport {\r\n  PropsDirectives,\r\n  useStyleDirectives,\r\n  useInlineStyle,\r\n} from '../directives';\r\nimport './style.css';\r\n\r\n/**\r\n * colSpan: (Optional) number of columns the item spans.  Default is 1.\r\n * image: (Optional) cover image for the card.\r\n *\r\n */\r\nexport interface IMasonryItem {\r\n  colSpan?: number;\r\n  image?: any;\r\n  title?: string;\r\n  description?: string;\r\n  onClick?: Function;\r\n}\r\n\r\n/**\r\n * min: Min value for the grid's minmax(min, max) function. Default 150px.\r\n * max: Max value for the grid's minmax(min, max) function. Default 1fr.\r\n * items: IMasonryItem[]\r\n */\r\nexport type MasonryProps = {\r\n  min?: any;\r\n  max?: any;\r\n  items: IMasonryItem[];\r\n  elementForItem?: (item: IMasonryItem, index: number) => ReactNode;\r\n  revision: number,\r\n};\r\n\r\nconst ElementContainer = (props: any) => {\r\n  const { element, colSpan, image } = props;\r\n  const inline = useInlineStyle(() => {\r\n    const root: any = {};\r\n    if (colSpan) {\r\n      root.gridColumnEnd = `span ${colSpan}`;\r\n    }\r\n    return {\r\n      root,\r\n      image: { backgroundImage: `url(\"${image}\")` },\r\n    };\r\n  }, [colSpan, image])();\r\n\r\n  return (\r\n    <div className={clsx('masonry-item', 'relative', inline.root)}>\r\n      <div className=\"content fill\">{element}</div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport const DefaultMasonryItem = (\r\n  directives: IMasonryItem & PropsDirectives,\r\n) => {\r\n  const {\r\n    colSpan, image, title, description, onClick, ...d\r\n  } = directives;\r\n  const { root } = useStyleDirectives<IMasonryItem>(\r\n    d,\r\n    null,\r\n    'MasonryItem',\r\n    'masonry-item',\r\n  );\r\n  const inline = useInlineStyle(() => ({\r\n    root: { gridColumnEnd: colSpan ? `span ${colSpan}` : null },\r\n    image: { backgroundImage: `url(\"${image}\")` },\r\n  }), [colSpan, image])();\r\n  return (\r\n    // eslint-disable-next-line\r\n    <div\r\n      className={clsx(root.className, inline.root)}\r\n      onClick={() => onClick && onClick()}\r\n    >\r\n      <Paper className=\"content\">\r\n        {image && <div className={clsx('cover-image', inline.image)} />}\r\n        {title && <div className=\"title\">{title}</div>}\r\n        {description && <div className=\"desc\">{description}</div>}\r\n      </Paper>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst Masonry = (directives: MasonryProps & PropsDirectives) => {\r\n  const {\r\n    min, max, items, elementForItem, revision, ...d\r\n  } = directives;\r\n\r\n  const theme = useTheme();\r\n\r\n  const { root } = useStyleDirectives<MasonryProps>(\r\n    d,\r\n    null,\r\n    'Masonry',\r\n    'ui-masonry-grid masonry-grid grid',\r\n  );\r\n\r\n  const mutable = useRef({ resizing: false, gridItems: [] }).current;\r\n\r\n  const g = document.getElementsByClassName('masonry-grid')[0];\r\n  const { \r\n    grid, \r\n    rowHeight, \r\n    rowGap, \r\n    gridItems \r\n  } = useMemo(() => {\r\n    if (!g) return { rowHeight: 0, rowGap: 0, gridItems: [] };\r\n    return {\r\n      grid: g,\r\n      rowHeight: parseInt(\r\n        window.getComputedStyle(g).getPropertyValue('grid-auto-rows'), 10,\r\n      ),\r\n      rowGap: parseInt(\r\n        window.getComputedStyle(g).getPropertyValue('grid-row-gap'), 10,\r\n      ),\r\n      gridItems: Array.from(document.getElementsByClassName('masonry-item'))\r\n        .map(\r\n          (e: any) => {\r\n            const innerElement = e.querySelector('.content > *');\r\n            const heightRatio = +innerElement.getAttribute('heightratio');\r\n            return {\r\n              container: e,\r\n              innerElement,\r\n              heightRatio,\r\n            };\r\n          }\r\n        ),\r\n    };\r\n  }, [g, items, revision, mutable.resizing]);\r\n  \r\n  // const resizeGridItem = React.useCallback((item: any) => {\r\n  //   const grid = document.getElementsByClassName('masonry-grid')[0];\r\n  //   const rowHeight = parseInt(\r\n  //     window.getComputedStyle(grid).getPropertyValue('grid-auto-rows'), 10,\r\n  //   );\r\n  //   const rowGap = parseInt(\r\n  //     window.getComputedStyle(grid).getPropertyValue('grid-row-gap'), 10,\r\n  //   );\r\n  //   const innerEllement = item.querySelector('.content > *');\r\n  //   // const heightRatio = innerEllement.get\r\n  //   const rowSpan = Math.ceil(\r\n  //     innerEllement.getBoundingClientRect().height / (rowHeight + rowGap),\r\n  //   );\r\n  //   item.style.gridRowEnd = `span ${rowSpan}`;\r\n  // }, []);\r\n\r\n  const resizeGridItem = React.useCallback((gi: any) => {\r\n    \r\n    const rect = gi.innerElement.getBoundingClientRect();\r\n    if (rect.width === 0) {\r\n      return;\r\n    }\r\n\r\n    let rowSpan;\r\n\r\n    if (gi.heightRatio) {\r\n      const impliedHeight = Math.round(rect.width * gi.heightRatio);\r\n      const heightWithGap = impliedHeight + rowGap;\r\n      const remainder = heightWithGap % (rowHeight + rowGap);\r\n      rowSpan = Math.round((heightWithGap - remainder) / (rowHeight + rowGap));\r\n    } else {\r\n      const heightWithGap = rect.height + rowGap;\r\n      const remainder = heightWithGap % (rowHeight + rowGap);\r\n      rowSpan = Math.round((heightWithGap - remainder) / (rowHeight + rowGap));\r\n    }\r\n\r\n    gi.container.style.gridRowEnd = `span ${rowSpan}`;\r\n  }, [grid, items, gridItems, revision, mutable.resizing]);\r\n\r\n  const resizeAllGridItems = React.useCallback(() => {\r\n      gridItems.forEach(gi => resizeGridItem(gi));\r\n    },\r\n    [grid, items, gridItems, revision, mutable.resizing, resizeGridItem]\r\n  );\r\n\r\n  // Triggers\r\n  const handleResizeAllGridItems = React.useCallback(() => {\r\n    if (mutable.resizing) {\r\n      return;\r\n    }\r\n    mutable.resizing = true;\r\n    const timer = setTimeout(() => {\r\n      mutable.resizing = false;\r\n    }, 100);\r\n    window.requestAnimationFrame(() => {\r\n      clearTimeout(timer);\r\n      resizeAllGridItems();\r\n      mutable.resizing = false;\r\n    });\r\n    \r\n  }, [grid, items, gridItems, revision, mutable.resizing, resizeAllGridItems]);\r\n  \r\n  useEffect(() => {\r\n    window.addEventListener('resize', handleResizeAllGridItems);\r\n    return () => {\r\n      window.removeEventListener('resize', handleResizeAllGridItems);\r\n    };\r\n  }, [grid, items, gridItems, revision, mutable.resizing, handleResizeAllGridItems]);\r\n\r\n  useEffect(() => {\r\n    setTimeout(() => handleResizeAllGridItems(), 100);\r\n  }, [grid, items, gridItems, revision, mutable.resizing, handleResizeAllGridItems]);\r\n\r\n  setTimeout(() => handleResizeAllGridItems(), 0);\r\n\r\n  const inline = useInlineStyle(() => {\r\n    const minval = min || '150px';\r\n    const maxval = max || '1.4fr';\r\n    return {\r\n      root: {\r\n        gridTemplateColumns: `repeat(auto-fill, minmax(${minval},${maxval}))`,\r\n        '& .masonry-item': {\r\n          boxShadow: logic.switch(\r\n            null, 'inherit', \r\n            () => theme.palette.type === 'light', '2px 2px 4px #9c9c9c',\r\n          ),\r\n          borderRadius: 3,\r\n          overflow: 'hidden',\r\n        },\r\n        '& .masonry-item:hover': {\r\n          boxShadow: logic.switch(\r\n            null, '3px 3px 6px #9c9c9c', \r\n            () => theme.palette.type === 'dark', '0px 0px 4px #55555522',\r\n          ),\r\n        },\r\n      },\r\n    };\r\n  }, [min, max])();\r\n\r\n  return (\r\n    <div className={clsx('root', root.className, inline.root)}>\r\n      {\r\n        /* eslint-disable react/jsx-props-no-spreading */\r\n        /* eslint-disable no-confusing-arrow */\r\n        /* eslint-disable react/no-array-index-key */\r\n        items.map((item, index) => elementForItem\r\n          ? (\r\n            <ElementContainer\r\n              key={index}\r\n              {...item}\r\n              element={elementForItem(item, index)}\r\n            />\r\n          ) : (\r\n            <DefaultMasonryItem key={index} {...item} />\r\n          ))\r\n      }\r\n    </div>\r\n  );\r\n};\r\nexport default Masonry;\r\n","import React, { ReactNode, useEffect, useState } from 'react';\r\n\r\n// MUI\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport Slide from '@material-ui/core/Slide';\r\nimport { TransitionProps } from '@material-ui/core/transitions';\r\nimport Button from '@material-ui/core/Button';\r\n\r\n// components\r\nimport { div as Div } from './Layout';\r\n\r\nconst Transition = React.forwardRef(function Transition(\r\n    props: TransitionProps & { children?: React.ReactElement<any, any> },\r\n    ref: React.Ref<unknown>) {\r\n    return <Slide direction=\"down\" ref={ref} {...props} />;\r\n});\r\n\r\ntype ModalProps = {show: boolean, title?: ReactNode, body?: ReactNode, onClose: Function, onEscape?: Function, onOk?: Function};\r\n\r\nconst Modal = (props: ModalProps) => {\r\n\r\n    const handleClose = () => props.onClose();\r\n    const handleEscapeKey = () => props.onEscape && props.onEscape();\r\n\r\n    const handleOk = () => {\r\n        props.onOk && props.onOk();\r\n        handleClose();\r\n    }\r\n\r\n    useEffect(() => {\r\n        document.addEventListener(\"keydown\", handleEscapeKey, false);\r\n        return () => document.removeEventListener(\"keydown\", handleEscapeKey, false);\r\n    }, []);\r\n    \r\n    return (\r\n        <Dialog\r\n            open={props.show}\r\n            TransitionComponent={Transition}\r\n            onClose={handleClose}\r\n            disableBackdropClick\r\n            disableEscapeKeyDown\r\n            maxWidth=\"lg\"\r\n        >\r\n            <Div relative>\r\n                {props.title}\r\n                {props.body}\r\n            </Div>\r\n\r\n            <DialogActions>\r\n                <Button onClick={handleClose} color=\"default\">\r\n                    {\r\n                        // For semantic reasons: \r\n                        // if the 'Close' button is juxtaposed with 'OK' button, it should say 'Cancel'\r\n                        props.onOk ? 'Cancel' : 'Close'\r\n                    }\r\n                </Button>\r\n                {\r\n                    props.onOk &&\r\n                    <Button onClick={handleOk} color=\"default\">\r\n                        OK\r\n                    </Button>\r\n                }                \r\n            </DialogActions>\r\n            \r\n        </Dialog>\r\n    )\r\n}\r\n\r\nexport default Modal;","export const isString = value => typeof value === 'string';\r\nexport const isNumber = value => typeof value === 'number';\r\nexport const isUndefined = value => typeof value === 'undefined';\r\nexport const isNull = value => value === null;\r\nexport const isNullOrUndefined = value => isUndefined(value) || isNull(value);\r\nexport const isJsonPath = value => isString(value) ? value.substring(0, 7) === 'json://' : false;\r\n\r\n","export default class Throttle {\r\n    \r\n    nextCallback?: Function;\r\n    lastKnownParams?: any[];\r\n\r\n    ticking = false;\r\n\r\n    invokeWithAnimationFrame(callback, ...params: any[]) {\r\n        \r\n        this.nextCallback = callback;\r\n        this.lastKnownParams = params;\r\n\r\n        if (!this.ticking) {\r\n\r\n            const _this = this;\r\n\r\n            const dispatch = (callback, params) => {\r\n                _this.ticking = true;\r\n                _this.nextCallback = undefined;\r\n                _this.lastKnownParams = undefined;\r\n                window.requestAnimationFrame(() => {\r\n                    callback(params);\r\n                    _this.ticking = false;\r\n                    if (_this.nextCallback) {\r\n                        dispatch(this.nextCallback, this.lastKnownParams);            \r\n                    }\r\n                });\r\n            }\r\n\r\n            dispatch(this.nextCallback, this.lastKnownParams);\r\n\r\n        }\r\n    }\r\n}\r\n","import React, { ReactNode } from 'react';\r\nimport { PropsDirectives, useStyleDirectives } from '../directives';\r\nimport * as ui from '../Layout';\r\nimport { fnOrValue } from '../util/logic';\r\n\r\nexport class PanelProps { \r\n    sticky?:    boolean = false;\r\n    stickyTop?: number  = 0;\r\n    children?:  ReactNode;\r\n}\r\n\r\nconst _ownProps = new PanelProps();\r\n\r\nexport const Panel = (directives: PanelProps & PropsDirectives) => {\r\n    const { ...other }          = directives;\r\n    const { root, props, data } = useStyleDirectives<PanelProps>(other, _ownProps, undefined,'page-panel');\r\n    return (\r\n        <ui.col className={root.className} {...data} alignSelfStretch> \r\n            <ui.div \r\n                relative \r\n                alignSelfStart\r\n                sticky={props.sticky} \r\n                top={props.sticky ? props.stickyTop : undefined} \r\n            >\r\n                {fnOrValue(props.children)}\r\n            </ui.div>\r\n        </ui.col>\r\n    )\r\n};\r\n\r\n\r\nexport default Panel;","import React from 'react';\r\nimport { PropsDirectives, useInlineStyle, useStyleDirectives } from '../directives';\r\nimport Panel from './Panel';\r\n\r\n// import './page.css'\r\nimport * as divRowCol from '../Layout';\r\nimport * as hooks from '../hooks';\r\nimport { fnOrValue } from '../util/logic';\r\n\r\n\r\n\r\nconst ui = {\r\n    ...divRowCol,\r\n    ...hooks,\r\n}\r\n\r\nexport class PageProps { \r\n    header?:    any;\r\n    children?:  any;\r\n}\r\n\r\nconst _ownProps = new PageProps();\r\n\r\nexport const Layout = (directives: PageProps & PropsDirectives) => {\r\n    const { ...other }                = directives;\r\n    const { root, props, data } = useStyleDirectives<PageProps>(other, _ownProps);\r\n\r\n    const style = useInlineStyle({\r\n        root: {\r\n            minHeight: '100vh;',\r\n            // border=\"thin dotted red\",\r\n\r\n            '& > .column': {\r\n                // border=\"thin dotted red\",\r\n\r\n                '& > .row': {\r\n                    // border=\"thin dotted red\",\r\n                    height: '100vh;',\r\n\r\n                    '& > .page-panel': {\r\n                        backgroundColor: '#80808011',\r\n                    },\r\n                }\r\n            }\r\n        }\r\n    }, [])();\r\n\r\n    return (\r\n        <ui.row className={`page-layout ${root.className} ${style.root}`} {...data} tight >\r\n            <ui.col wide>\r\n                {\r\n                    props.header &&\r\n                    fnOrValue(props.header)\r\n                }\r\n                <ui.row>\r\n                    { props.children }\r\n                </ui.row>\r\n            </ui.col>\r\n        </ui.row>\r\n    )\r\n};\r\n\r\n\r\nexport default {\r\n    layout: Layout,\r\n    panel: Panel,\r\n};\r\n","import * as React from 'react';\r\nimport { ReactNode } from 'react';\r\n\r\nimport Tabs from '@material-ui/core/Tabs';\r\nimport Tab from '@material-ui/core/Tab';\r\nimport clsx from 'clsx';\r\nimport {\r\n  PropsDirectives,\r\n  useStyleDirectives,\r\n  useInlineStyle,\r\n} from './directives';\r\nimport * as ui from './Layout';\r\nimport util from './util';\r\n\r\nexport type UiTabDef = {\r\n  label: ReactNode;\r\n  content: ReactNode | { (): ReactNode };\r\n};\r\nexport function isTabDef(object: any) {\r\n  return !!object && !!object.label && !!object.content;\r\n}\r\nexport type UiTab = ReactNode | UiTabDef;\r\nexport type UiTabData = { [index: string]: UiTab };\r\nexport type UiTabs = {\r\n  items: any[];\r\n  keyForItem?: (item: any) => string;\r\n  elementForItem: (item: any, active: boolean) => ReactNode;\r\n  //\r\n  id?: string; // needed if auto saved state is desired\r\n  onChange?: { (key: string): void };\r\n  activeKey?: string;\r\n  variant?: 'fullWidth' | 'scrollable';\r\n  orientation?: 'vertical';\r\n  centered?: boolean;\r\n};\r\ntype ValueType = string | number | boolean | symbol;\r\ntype ValueOrElement = ValueType | Element | React.ReactNode;\r\nexport type FunctionOrValueOrElement = Function | ValueOrElement;\r\n\r\n\r\n\r\ninterface TabPanelProps {\r\n  children?: FunctionOrValueOrElement;\r\n  active: boolean;\r\n  id?: string;\r\n  value: string;\r\n}\r\n\r\nfunction TabPanel(props: TabPanelProps) {\r\n  const {\r\n    children, active, value, id,\r\n  } = props;\r\n  return (\r\n    <div\r\n      role=\"tabpanel\"\r\n      hidden={!active}\r\n      id={`${id}-${value}`}\r\n      aria-labelledby={`${id}-${value}`}\r\n    >\r\n      {children || <div>No content</div>}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default (directives: UiTabs & PropsDirectives) => {\r\n  const {\r\n    id,\r\n    onChange,\r\n    activeKey,\r\n    variant,\r\n    orientation,\r\n    centered,\r\n    items,\r\n    keyForItem,\r\n    elementForItem,\r\n    ...d\r\n  } = directives;\r\n  const { root, props } = useStyleDirectives<UiTabs>(d, null, 'ui-tabs');\r\n\r\n  const keys = items.map((item) => {\r\n    if (!keyForItem) {\r\n      switch (typeof item) {\r\n        case 'string':\r\n          return item;\r\n        case 'number':\r\n          return item.toString();\r\n        default:\r\n          throw new Error('Invalid key');\r\n      }\r\n    }\r\n    return keyForItem(item);\r\n  });\r\n\r\n  const [selectedKey, setActiveKey] = React.useState(() => activeKey);\r\n\r\n  const handleChange = (event: React.ChangeEvent<{}>, key: string) => {\r\n    setActiveKey(key);\r\n    if (onChange) onChange(key);\r\n  };\r\n\r\n  const internalStyle = useInlineStyle(\r\n    () => ({\r\n      minWidth: 'unset!important',\r\n      minHeight: 'unset!important',\r\n    }),\r\n    [],\r\n  )();\r\n\r\n  if (!keys.length) return null;\r\n\r\n  const tabStrip = (\r\n    <Tabs\r\n      orientation={directives.orientation}\r\n      value={selectedKey || keys[0]}\r\n      onChange={handleChange}\r\n      aria-label={`tabs with ${keys.length} panels`}\r\n    >\r\n      {keys.map((key: string) => {\r\n        const label = util.string.camelToSentenceCase(key);\r\n        return <Tab key={key} label={label} value={key} />;\r\n      })}\r\n    </Tabs>\r\n  );\r\n\r\n  const tabContent = items.map((item: string, index: number) => {\r\n    const key = keys[index];\r\n    const isActiveTab = (typeof selectedKey === 'undefined' && index === 0)\r\n      || selectedKey === key;\r\n    return (\r\n      <TabPanel\r\n        key={key}\r\n        active={isActiveTab}\r\n        value={key}\r\n        id={props.id || 'global'}\r\n      >\r\n        {elementForItem(item, isActiveTab)}\r\n      </TabPanel>\r\n    );\r\n  });\r\n\r\n  const verticalLayout = (\r\n    <ui.row wide>\r\n      {keys.length > 1 && <ui.col>{tabStrip}</ui.col>}\r\n      <ui.col grow>{tabContent}</ui.col>\r\n    </ui.row>\r\n  );\r\n\r\n  const horizontalLayout = (\r\n    <React.Fragment>\r\n      {keys.length > 1 && tabStrip}\r\n      {tabContent}\r\n    </React.Fragment>\r\n  );\r\n\r\n  const isVertical = directives.orientation === 'vertical';\r\n\r\n  return (\r\n    <div className={clsx('root', root, internalStyle)}>\r\n      {isVertical && verticalLayout}\r\n      {!isVertical && horizontalLayout}\r\n    </div>\r\n  );\r\n};\r\n","import * as React from 'react'\nimport clsx from 'clsx'\n\nimport card from './MediaCard';\nimport counter from './Counter';\nimport table from './DataTable';\nimport drawer from './Drawer';\nimport dropdown from './Dropdown';\nimport * as divRowCol from './Layout';\nimport * as hooks from './hooks';\nimport loremIpsum from './loremIpsum';\nimport masonry from './Masonry';\nimport modal from './Modal';\nimport numberInput from './NumberInput';\nimport page from './Page';\nimport propertyPage from './PropertyPage';\nimport tabs from './Tabs';\nimport text from './Text';\nimport util from './util';\nimport * as validation from './validation';\nimport { v4 as uuid } from 'uuid';\nimport Throttle from './Throttle';\nimport useInlineStyle from './directives/useInlineStyle';\n\nexport { default as useInlineStyle } from './directives/useInlineStyle';\nexport type { PropsDirectives } from './directives';\nexport { useStyleDirectives } from './directives';\n\nconst index = {\n\n  ...divRowCol,\n\n  card,\n  clsx,\n  \n  counter,\n  \n  drawer,\n  dropdown,\n\n  ...hooks,\n\n  loremIpsum,\n\n  masonry,\n  modal,\n\n  numberInput,\n\n  page,\n  propertyPage,\n  \n  table,\n  tabs,\n  text,\n\n  Throttle,\n  useInlineStyle,\n  uuid,\n\n  ...util,\n  ...validation,\n\n}\n\nexport default index;\n\n\n","import React from 'react';\r\nimport useInlineStyle from './directives/useInlineStyle';\r\n\r\nconst defaultMinCount = 0;\r\n\r\nexport type UiCounter = { min?: number; title?: string };\r\nexport default (props: UiCounter) => {\r\n  \r\n  const ref = React.useRef({ count: 0 }).current; \r\n\r\n  if (\r\n    ++ref.count <=\r\n    (typeof props.min !== 'undefined' ? props.min : defaultMinCount)\r\n  ) {\r\n    return null;\r\n  }\r\n  \r\n  const classes = useInlineStyle({\r\n    root: {\r\n      position: 'absolute',\r\n      zIndex: 999999,\r\n      top: 0,\r\n      left: 0,\r\n      padding: '0 3px',\r\n      lineHeight: 1,\r\n      fontSize: '.7rem',\r\n      backgroundColor: 'red',\r\n      color: 'white',\r\n    }\r\n  }, [])();\r\n\r\n\r\n  return (\r\n    <div\r\n      title={props.title}\r\n      className={classes.root}\r\n    >\r\n      {ref.count}\r\n    </div>\r\n  );\r\n};\r\n","import React, { ReactNode, ReactElement } from 'react';\r\nimport Drawer from '@material-ui/core/Drawer';\r\n\r\ntype Anchor = 'top' | 'left' | 'bottom' | 'right';\r\ntype PropsType = {\r\n  anchor: Anchor;\r\n  open?: boolean;\r\n  button?: ReactElement;\r\n  onOpen?: Function;\r\n  onClose?: Function;\r\n  children?: ReactNode;\r\n};\r\n\r\nexport default (props: PropsType) => {\r\n  const [open, setOpen] = React.useState(false);\r\n  const [closed, setClosed] = React.useState<boolean|undefined>();\r\n\r\n  const externallyControlled = typeof props.open !== 'undefined';\r\n  const drawerOpen = !closed && (externallyControlled ? props.open : open);\r\n\r\n  const toggleDrawer = (open: boolean) => (event: React.KeyboardEvent | React.MouseEvent) => {\r\n    setOpen(open);\r\n    if (!open) {\r\n      setClosed(true);\r\n    }\r\n    if (open && props.onOpen) props.onOpen();\r\n    if (!open && props.onClose) props.onClose();      \r\n  };\r\n\r\n  return (\r\n    <React.Fragment>\r\n      {\r\n        props.button && !drawerOpen &&\r\n        React.cloneElement(props.button, {\r\n          onClick: toggleDrawer(true)\r\n        })\r\n      }\r\n      <Drawer \r\n        anchor={props.anchor} \r\n        open={drawerOpen} \r\n        onClose={toggleDrawer(false)}\r\n      >\r\n        {\r\n          !closed &&\r\n          drawerOpen && \r\n          props.children\r\n        }\r\n      </Drawer>\r\n    </React.Fragment>\r\n  );\r\n};\r\n","import React from 'react';\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport Select from '@material-ui/core/Select';\r\nimport { v4 as uuidv4 } from 'uuid';\r\n\r\nimport { div as Div } from './Layout';\r\n\r\ntype DropdownOption = string\r\n  | {\r\n      value: string | number;\r\n      text: string;\r\n    };\r\n\r\ntype DropdownProps = {\r\n  defaultValue?: string;\r\n  label?: string;\r\n  localStorageKey?: string;\r\n  options: DropdownOption[];\r\n  onChange: (value: any) => void,\r\n};\r\n\r\nexport default function Dropdown(props: DropdownProps) {\r\n  const { \r\n    localStorageKey, \r\n    label, \r\n    defaultValue, \r\n    options \r\n  } = props;\r\n  const labelId = uuidv4();\r\n\r\n  const [selectedValue, setSelectedValue] = React.useState<string | undefined>(\r\n    () => {\r\n      const storedString: string | null = localStorageKey\r\n        ? localStorage.getItem(localStorageKey)\r\n        : null;\r\n      return storedString || defaultValue;\r\n    },\r\n  );\r\n\r\n  const selectedValueExists = options.find((option: any) => {\r\n    const t = typeof option;\r\n    const obj = option as any;\r\n    const value = typeof obj === 'object' ? obj.value : option;\r\n    return selectedValue === value;\r\n  });\r\n  const auxOptions = !selectedValueExists \r\n    ? [{ value: selectedValue, text: selectedValue, aux: true }]\r\n    : []; \r\n\r\n  const handleChange = (event: React.ChangeEvent<{ value: unknown }>) => {\r\n    const value = event.target.value as string;\r\n    if (localStorageKey) {\r\n      localStorage.setItem(localStorageKey, value);\r\n    }\r\n    setSelectedValue(value);\r\n    props.onChange && props.onChange(value);\r\n  };\r\n\r\n  return (\r\n    <FormControl>\r\n      {label && <InputLabel id={labelId}>{label}</InputLabel>}\r\n      <Select\r\n        labelId={labelId}\r\n        value={selectedValue}\r\n        onChange={handleChange}\r\n      >\r\n        {[...options, ...auxOptions].map((option) => {\r\n          const t = typeof option;\r\n          const obj = option as any;\r\n          const text = typeof obj === 'object' ? obj.text : option;\r\n          const value = typeof obj === 'object' ? obj.value : option;\r\n          const aux = typeof obj === 'object' ? obj.aux === true : false;\r\n          return (\r\n            <MenuItem key={value} value={value}>\r\n              {\r\n                !aux && text\r\n              }\r\n              {\r\n                aux && <Div opacity={0.5} fontStyle=\"italic\">{text}</Div>\r\n              }\r\n            </MenuItem>\r\n          );\r\n        })}\r\n      </Select>\r\n    </FormControl>\r\n  );\r\n}\r\n","import React, {useRef} from 'react';\r\nimport _ from 'lodash';\r\n\r\n// import '../css/numberinput.css';\r\nimport { isNullOrUndefined } from '../validation';\r\nimport Throttle from '../Throttle';\r\n\r\nfunction isNumeric(n) {\r\n    return !isNaN(parseFloat(n)) && isFinite(n);\r\n}\r\n\r\nexport default function NumberInput(props) {\r\n\r\n    const throttleRef = useRef(new Throttle());\r\n    const throttle = throttleRef.current;\r\n\r\n    const inputRef = useRef(null);\r\n    const [buffer, setBuffer] = React.useState(props.value);\r\n\r\n    const constraints = {\r\n        min: !isNullOrUndefined(props.min) ? props.min : -999,\r\n        max: !isNullOrUndefined(props.max) ? props.max : 999,\r\n        step: props.step || 1,\r\n        precision: props.precision || 0,\r\n    }\r\n\r\n    if (constraints.step) {\r\n        const parts = constraints.step.toString().split('.');\r\n        if (parts.length>1) {\r\n            constraints.precision = parts[1].length;\r\n        }\r\n    }\r\n\r\n    if (props.unsigned && constraints.min < 0) constraints.min = 0;\r\n\r\n    const handleChange = (value) => {\r\n\r\n        let parsedValue = parseFloat(value);\r\n        if (parsedValue < constraints.min) parsedValue = constraints.min;\r\n        if (parsedValue > constraints.max) parsedValue = constraints.max;\r\n        \r\n        const newValue = lib.math.roundDecimal(parsedValue, constraints.precision);\r\n        setBuffer(newValue);\r\n    \r\n        if (props.onChange) {\r\n            throttle.invokeWithAnimationFrame(props.onChange, parsedValue);\r\n        }\r\n        \r\n    };\r\n\r\n    const handleFocus = (e) => { inputRef.current.select()};\r\n    const handleBlur = (e) => { };\r\n    \r\n    const context = { \r\n        inputRef,\r\n        handleChange, \r\n        handleFocus,\r\n        handleBlur,\r\n        props,\r\n        value: buffer,\r\n        ...constraints,\r\n    };\r\n\r\n    switch(props.variant) {\r\n        case 'slider':\r\n            return sliderInput(context);\r\n        default:\r\n            return inputWithUpDown(context);\r\n    }\r\n}\r\n\r\nexport function inputWithUpDown(context) {\r\n\r\n    const { inputRef, handleChange, handleFocus, handleBlur, props, value, step, min, max } = context;\r\n\r\n    return (\r\n        <ui.Flex row tight className=\"numeric-input-container\">\r\n            <button className=\"numeric-spinner left\" onClick={() => handleChange(value - step)}><span>-</span></button>\r\n            <input \r\n                ref={inputRef}\r\n                className=\"numeric-input\"\r\n                type=\"number\"\r\n                inputMode=\"number\" \r\n                pattern=\"[0-9]*\" \r\n                onChange={(e) => handleChange(e.target.value)}\r\n                onFocus={handleFocus}\r\n                onBlur={handleBlur}\r\n                value={value}\r\n                required={props.required} \r\n                placeholder={props.placeholder}\r\n                title={props.title}\r\n            />\r\n            <button className=\"numeric-spinner right\" onClick={() => handleChange(value + step)}><span>+</span></button>\r\n        </ui.Flex>\r\n    );\r\n}\r\n\r\n\r\nexport function sliderInput(context) {\r\n\r\n    const { inputRef, handleChange, handleFocus, handleBlur, props, value, step, min, max } = context;\r\n\r\n    const innerValue = value;\r\n    \r\n    return (\r\n        <ui.Flex row tight alignItems=\"center\" className=\"slider-input-container\">\r\n            <input \r\n                ref={inputRef}\r\n                className=\"slider\"\r\n                type=\"range\"\r\n                onChange={(e) => handleChange(e.target.value)}\r\n                onFocus={handleFocus}\r\n                onBlur={handleBlur}\r\n                title={props.title}\r\n                value={innerValue}\r\n                min={min}\r\n                max={max}\r\n                step={step}\r\n            />\r\n            <ui.div small marginLeft={15}>\r\n                {innerValue}\r\n            </ui.div>\r\n        </ui.Flex>\r\n    );\r\n}\r\n\r\nexport function NumericInputLabel(props) {\r\n    return <ui.div className=\"numeric-input-label\">{props.children}</ui.div>;\r\n}\r\n\r\n//export const MemoizedNumericInput = React.memo(NumberInput);","import React from 'react';\r\nimport { div as Div, row as Row } from './Layout';\r\nimport isNullOrUndefined from './util/object/traverse/isNullOrUndefined';\r\nimport str from './util/string';\r\n\r\ntype PropertyPageProps = {\r\n  data: any,\r\n};\r\n\r\nconst PropertyPage = (props: PropertyPageProps) => {\r\n  const { data } = props;\r\n  const keys = Object.keys(data)\r\n    .filter(key => !!data[key] || data[key] === 0);\r\n  \r\n  return (\r\n    <>\r\n      {\r\n        keys.map(key => {\r\n\r\n          const label = str.camelToSentenceCase(key);\r\n\r\n          return (\r\n            <Row key={key} spaced fontSize=\"0.8rem\">\r\n              <Div width=\"50%\" opacity={0.5}>\r\n                { label }\r\n              </Div>\r\n              <Div width=\"50%\">\r\n                {\r\n                  typeof data[key] === 'boolean' ? data[key].toString() : data[key]\r\n                }\r\n              </Div>\r\n            </Row>\r\n          );\r\n        })\r\n      }\r\n    </>\r\n  );\r\n};\r\nexport default PropertyPage;\r\n","import React from 'react'\r\nimport Header from './Header';\r\nimport TableRow from './TableRow';\r\nimport './style.css';\r\n\r\ntype Props = {\r\n    cols: string[],\r\n    items: any[],\r\n};\r\n\r\nconst Table = (props: Props) => {\r\n\r\n    const cols: string[] = props.cols;\r\n    const items = props.items;\r\n\r\n    if (!items) return null;\r\n\r\n    return <table cellPadding={0} cellSpacing={0} className=\"data-table\" >\r\n        \r\n        {\r\n            cols && \r\n            cols.length > 0 &&\r\n            <Header cols={cols} />\r\n        }\r\n\r\n        <tbody>\r\n            {\r\n                items.map((item: any, itemIndex: number ) => (\r\n                    <TableRow key={itemIndex} item={item} cols={cols} />\r\n                ))\r\n            }\r\n        </tbody>\r\n    </table>\r\n    \r\n};\r\n\r\nexport default Table;\r\n","import React from 'react';\r\nimport { PropsDirectives, useStyleDirectives } from './directives';\r\nimport { fnOrValue } from './util/logic';\r\n\r\nexport class TextProps { \r\n    size?:     number|string;\r\n    children?: any;    \r\n}\r\n\r\nconst Text = (directives: TextProps & PropsDirectives) => {\r\n    const { size, children, ...other }                = directives;\r\n    const { root, data, events } = useStyleDirectives<TextProps>(other, null);\r\n    if (!root.className) {\r\n        return fnOrValue(directives.children);\r\n    }\r\n    return (\r\n        <div {...data} className={root.className} {...events}>\r\n            {fnOrValue(directives.children)}\r\n        </div>\r\n    )\r\n};\r\n\r\nexport default Text;\r\n","import React, { useEffect, useState } from 'react'\nimport ReactMarkdown from 'react-markdown'\nimport ui from '@reactiff/ui-core'\n\nimport './css/index.css'\nimport './css/orthogonal.css'\nimport './css/flex.css'\n\nconst badges = '[![NPM](https://img.shields.io/npm/v/@reactiff/ui-core.svg)](https://www.npmjs.com/package/@reactiff/ui-core) [![JavaScript Style Guide](https://img.shields.io/badge/code_style-standard-brightgreen.svg)](https://standardjs.com)';\n\nconst App = () => {\n\n  const [state, setState] = useState<any>();\n\n  useEffect(() => {\n    const run = () => {\n      const newState = { value: 0 };\n      setState(newState);\n      // setTimeout(run, 1000);\n    }\n    run();\n  }, [setState]);\n\n  const cardStyle = {\n    border: '4px solid #ffffff',\n    padding: '30px',\n    '& > .value': { \n      fontSize: '3rem',\n      margin: '0 0 15px 0',\n    }\n  };\n\n  return (\n  \n    <ui.page.layout> \n\n      <ui.page.panel id=\"left_panel\" minWidth={100} width=\"20%\" noMobile>\n\n\n        <ui.div css={{backgroundColor: '#ffffff11', padding: '15px'}} wide borderBox>\n          <h1>@reactiff/ui-core</h1>\n          <p>UI toolkit foundation</p>\n          <ReactMarkdown children={badges} />\n        </ui.div>\n        \n      </ui.page.panel>\n\n      <ui.col alignCenter>\n        \n        <ui.div css={{\n          color: 'yellowgreen',\n        }}>\n\n        </ui.div>\n        <ui.div className={`flex column align-center`} css={cardStyle} >\n          <ui.text className=\"value\">\n            Nothing\n          </ui.text>\n        </ui.div>\n        <p>\n          <a href=\"https://www.npmjs.com/package/@reactiff/ui-core\">npm</a> | <a href=\"https://github.com/reactiff/package-name\">git</a> | MIT © <a href=\"https://github.com/reactiff\">Rick Ellis</a>\n        </p>\n      </ui.col>\n\n    </ui.page.layout>\n\n    \n  )\n}\n\nexport default App\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './App'\n\nReactDOM.render(<App />, document.getElementById('root'))\n"],"sourceRoot":""}