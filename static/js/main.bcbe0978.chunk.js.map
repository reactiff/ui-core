{"version":3,"sources":["../../src/util/logic.ts","../../src/util/string.ts","../../src/util/date.ts","../../src/util/index.ts","../../src/util/array.ts","../../src/MediaCard.tsx","../../src/directives/attributeMap.ts","../../src/directives/classMap.ts","../../src/directives/functions.ts","../../src/directives/resolveAttributeValue.ts","../../src/directives/classSwitches.ts","../../src/directives/styleAttributes.ts","../../src/directives/useInlineStyle.ts","../../src/directives/useStyleDirectives.ts","../../src/Layout.tsx","../../src/CSVLink.tsx","../../src/Drawer.tsx","../../src/Dropdown.tsx","../../src/Masonry/index.tsx","../../src/Modal.tsx","../../src/PropertyPage.tsx","../../src/Tabs.tsx","../../src/index.tsx","../../src/Counter.tsx","App.tsx","index.tsx"],"names":["fnOrValue","element","inline","matchSingleKey","key","matchKey","Array","pairs","i","defaultValue","strutil","camelToSentenceCase","string","t","trimmed","token","camelToKebabCase","toProperCase","mutateWhile","result","condition","transform","toCamelCase","temp","removeDoubleSpaces","s","array","all","test","uniques","Set","sortBy","valueForItem","order","dir","sortByDesc","toDictionary","items","Object","logic","date","parse","offsetMinutes","minutes","adjustmentTime","hours","yyyymmdd","yyyy","MM","dd","Date","isoToInt","isoDate","parseInt","useStyles","makeStyles","root","maxWidth","media","height","MediaCard","props","title","description","image","onClick","footerActions","children","classes","className","gutterBottom","variant","component","color","size","util","attributeMap","bgColor","classMap","scrollableX","scrollableY","createStyle","x","value","resolvedKey","Reflect","getOrMakeStyle","createClass","resolvedClass","str","switches","absolute","alignStart","alignCenter","alignEnd","alignStretch","alignBaseline","alignAuto","alignSelfStart","alignSelfCenter","alignSelfEnd","alignSelfStretch","alignSelfBaseline","anchorBottom","anchorLeft","anchorRight","anchorTop","beveled","block","borderBox","centerX","centerXY","centerY","clickable","coverImage","fill","fixed","fullWidth","fullWidthAlways","grow","hidden","horizontal","inlineBlock","justifyStart","justifyCenter","justifyEnd","mobileCenter","mobileColumn","mobileOnly","noBr","noBreak","noMargin","noMobile","noOverflow","noPadding","noSelect","noTransform","noWrap","opaque","overlay","relative","round","rounded","scrollable","shrink","small","smaller","solid","spaced","sticky","tall","translucent","vertical","wide","backgroundColor","backgroundImage","backgroundRepeat","backgroundPosition","backgroundSize","border","borderTop","borderRight","borderBottom","borderLeft","borderRadius","borderTopLeftRadius","borderTopRightRadius","borderBottomLeftRadius","borderBottomRightRadius","cursor","dataProps","fontSize","fontStyle","fontWeight","innerProps","lineHeight","margin","marginTop","marginRight","marginBottom","marginLeft","minHeight","minWidth","opacity","padding","paddingTop","paddingRight","paddingBottom","paddingLeft","pseudo","textAlign","textTransform","width","top","right","bottom","left","useInlineStyle","style","useMemo","createStyles","useStyleDirectives","id","directives","ref","data","nonReact","specialProps","removeProps","keys","bag","debug","styleAttributes","type","pseudoStyles","fullKey","usedStyles","attr","baseClasses","clsx","Div","Row","Col","CSVLink","textDecoration","React","open","setOpen","closed","setClosed","externallyControlled","drawerOpen","toggleDrawer","anchor","onClose","Dropdown","localStorageKey","label","options","labelId","uuidv4","localStorage","selectedValue","setSelectedValue","auxOptions","text","aux","onChange","event","obj","ElementContainer","colSpan","DefaultMasonryItem","gridColumnEnd","Masonry","min","max","elementForItem","revision","d","theme","useTheme","mutable","resizing","gridItems","g","document","grid","rowHeight","window","rowGap","innerElement","e","heightRatio","container","resizeGridItem","rect","gi","heightWithGap","Math","remainder","rowSpan","resizeAllGridItems","handleResizeAllGridItems","timer","setTimeout","clearTimeout","useEffect","gridTemplateColumns","boxShadow","overflow","index","item","Transition","direction","Modal","handleClose","handleEscapeKey","TransitionComponent","disableBackdropClick","disableEscapeKeyDown","PropertyPage","TabPanel","active","role","aria-labelledby","activeKey","keyForItem","Error","selectedKey","setActiveKey","internalStyle","tabStrip","orientation","aria-label","tabContent","isActiveTab","verticalLayout","horizontalLayout","isVertical","count","ui","position","zIndex","App","useState","setState","run","styles","col","href","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.bcbe0978.chunk.js","sourcesContent":["export type ValueSymbolObject = \r\n  string | number | boolean | symbol | object | null | undefined | void;\r\nexport type ValueOrElement = ValueSymbolObject | Element | React.ReactNode;\r\nexport type FunctionOrValueOrElement = Function | ValueOrElement;\r\n\r\nexport const fnOrValue = (element: FunctionOrValueOrElement, param?: any) => {\r\n  if (typeof element === 'function') {\r\n    return (element as Function)(param);\r\n  }\r\n  return element;\r\n};\r\n\r\nexport type ArrayOfValueTypes = ValueSymbolObject[];\r\nexport type KeyOrKeys = ValueSymbolObject | ArrayOfValueTypes;\r\nexport type KeyOrValue = KeyOrKeys | FunctionOrValueOrElement;\r\nexport type KeyValuePairs = KeyOrValue[];\r\n\r\nconst inline = {\r\n  fnOrValue,\r\n\r\n  /**\r\n   * Returns a matching element from k1, v1, k2, v2... args following the defaultElement.\r\n   * Each key argument can be an array of alternative keys for the corresponding element.\r\n   * @param key - key: Selector value\r\n   * @param defaultElement - defaultElement: Default return value\r\n   */\r\n  switch(\r\n    rootKey: ValueSymbolObject,\r\n    defaultValue: FunctionOrValueOrElement,\r\n    ...pairs: KeyValuePairs\r\n  ) {\r\n    const matchSingleKey = (key: Function | ValueSymbolObject) => {\r\n      if (typeof key === 'function') {\r\n        return (key as Function)(rootKey);\r\n      }\r\n      return key === rootKey;\r\n    };\r\n\r\n    const matchKey = (key: KeyOrKeys) => {\r\n      if (Array.isArray(key)) {\r\n        return (key as ArrayOfValueTypes).some(matchSingleKey);\r\n      }\r\n      return matchSingleKey(key); \r\n    };\r\n\r\n    for (let i = 0; i < pairs.length; i += 2) {\r\n      const key = pairs[i] as KeyOrKeys;\r\n      if (matchKey(key)) {\r\n        return fnOrValue(pairs[i + 1], key);\r\n      }\r\n    }\r\n\r\n    // return default value\r\n    return fnOrValue(defaultValue, rootKey);\r\n  },\r\n};\r\n\r\nexport default inline;\r\n","const strutil = {\r\n  camelToSentenceCase: (string: string) => {\r\n    if (!string) return string;\r\n    const tokens = string\r\n      .replace(/([A-Z]+|[0-9]+)/g, ' $1')\r\n      .trim()\r\n      .split(' ');\r\n    return tokens\r\n      .filter((t) => t && t.length)\r\n      .map((token) => {\r\n        const trimmed = token.trim();\r\n        return trimmed[0].toUpperCase() + trimmed.substring(1);\r\n      })\r\n      .join(' ');\r\n  },\r\n\r\n  camelToKebabCase: (string: string) => {\r\n    if (!string) return string;\r\n    const tokens = string\r\n      .replace(/([A-Z]+)/g, ' $1')\r\n      .trim()\r\n      .split(' ');\r\n    return tokens\r\n      .map((token) => token.trim().toLowerCase())\r\n      .join('-');\r\n  },\r\n\r\n  toProperCase: (string: string) => {\r\n    if (!string) return string;\r\n    return string[0].toUpperCase() + string.substring(1);\r\n  },\r\n\r\n  mutateWhile: (\r\n    original: string,\r\n    condition: { (value: string): boolean },\r\n    transform: { (value: string): string },\r\n  ) => {\r\n    let result = original;\r\n    while (condition(result)) {\r\n      result = transform(result);\r\n    }\r\n    return result;\r\n  },\r\n\r\n  toCamelCase: (string: string) => {\r\n    if (!string) return string;\r\n    const temp = string.replace(/\\s/g, '').trim();\r\n    if (temp.length === 0) return '';\r\n    return temp[0].toLowerCase() + temp.substring(1);\r\n  },\r\n\r\n  removeDoubleSpaces: (string: string) => (\r\n    strutil\r\n      .mutateWhile(\r\n        string,\r\n        (s) => s.indexOf('  ') >= 0,\r\n        (s) => s.replaceAll(/\\s\\s/g, ' '),\r\n      )\r\n      .trim()\r\n  ),\r\n};\r\n\r\nexport default strutil;\r\n","export function parse(date: string) {\r\n  const d = new Date();\r\n  const offsetMinutes = d.getTimezoneOffset();\r\n  const minutes = offsetMinutes % 60;\r\n  const hours = offsetMinutes / 60;\r\n  const hh = hours.toString().padStart(2, '0');\r\n  const mm = minutes.toString().padStart(2, '0');\r\n  const adjustmentTime = `${hh}:${mm}`;\r\n  const yyyymmdd = date.split('T')[0];\r\n  const [yyyy, MM, dd] = yyyymmdd.split('-');\r\n  const value = new Date(`${yyyy}-${MM}-${dd}T${adjustmentTime}:00.000`);\r\n  return value;\r\n}\r\n\r\nexport function isoToInt(isoDate: string) {\r\n  const [yyyy, MM, dd] = isoDate.split('T')[0].split('-');\r\n  return parseInt(`${yyyy}${MM}${dd}`, 10);\r\n}\r\n\r\nexport default {\r\n  parse,\r\n  isoToInt,\r\n};\r\n","import logic from './logic';\r\nimport string from './string';\r\nimport array from './array';\r\nimport date from './date';\r\n// import object from './object';\r\n\r\nexport default {\r\n  array,\r\n  logic,\r\n  // object,\r\n  string,\r\n  date,\r\n};\r\n","export function all(array: any[], test: any) {\r\n  const someAreFalse = array.some((x) => !test(x));\r\n  return !someAreFalse;\r\n}\r\n\r\nexport function uniques(array: any[]) {\r\n  return Array.from(new Set(array));\r\n}\r\n\r\nexport function toDictionary(items: any[], key: (item: any) => any) {\r\n  return items.reduce(\r\n    (dict: any, item: any) => Object.assign(dict, { [key(item)]: item }),\r\n    {},\r\n  );\r\n}\r\n\r\nexport function sortBy(\r\n  valueForItem: (item: any) => any,\r\n  order?: 'asc' | 'desc',\r\n) {\r\n  const dir = order && order === 'desc' ? -1 : 1;\r\n  return (a: any, b: any) => (valueForItem(a) < valueForItem(b) ? -1 : 1) * dir;\r\n}\r\nexport function sortByDesc(valueForItem: (item: any) => any) {\r\n  return (a: any, b: any) => (valueForItem(a) > valueForItem(b) ? -1 : 1);\r\n}\r\n\r\nexport default {\r\n  all,\r\n  uniques,\r\n  sortBy,\r\n  sortByDesc,\r\n  toDictionary,\r\n};\r\n","/* eslint jsx-quotes: [\"error\", \"prefer-double\"] */\r\nimport React, { ReactNode } from 'react';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardActionArea from '@material-ui/core/CardActionArea';\r\nimport CardActions from '@material-ui/core/CardActions';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport CardMedia from '@material-ui/core/CardMedia';\r\nimport Button from '@material-ui/core/Button';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport util from './util';\r\n\r\nconst useStyles = makeStyles({\r\n  root: {\r\n    maxWidth: 345,\r\n  },\r\n  media: {\r\n    height: 140,\r\n  },\r\n});\r\n\r\nexport type MediaCardActionMap = {\r\n  [index: string]: Function;\r\n};\r\nexport type MediaCardProps = {\r\n  title?: string;\r\n  description?: string;\r\n  children?: ReactNode;\r\n  image?: any;\r\n  onClick?: Function;\r\n  footerActions?: MediaCardActionMap;\r\n};\r\n\r\nexport default function MediaCard(props: MediaCardProps) {\r\n  const {\r\n    title, description, image, onClick, footerActions, children,\r\n  } = props;\r\n  const classes = useStyles();\r\n  return (\r\n    <Card className={classes.root}>\r\n      <CardActionArea onClick={() => onClick && onClick()}>\r\n        {image && (\r\n          <CardMedia\r\n            className={classes.media}\r\n            image={image.url}\r\n            title={title}\r\n          />\r\n        )}\r\n        <CardContent>\r\n          {title && (\r\n            <Typography gutterBottom variant=\"h5\" component=\"h2\">\r\n              {title}\r\n            </Typography>\r\n          )}\r\n\r\n          {description && (\r\n            <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\r\n              {description}\r\n            </Typography>\r\n          )}\r\n\r\n          {children && children}\r\n        </CardContent>\r\n      </CardActionArea>\r\n      {footerActions && (\r\n        <CardActions>\r\n          {Object.keys(footerActions).map((key) => (\r\n            <Button\r\n              size=\"small\"\r\n              color=\"primary\"\r\n              onClick={() => footerActions![key]()}\r\n            >\r\n              {util.string.camelToSentenceCase(key)}\r\n            </Button>\r\n          ))}\r\n        </CardActions>\r\n      )}\r\n    </Card>\r\n  );\r\n}\r\n","const attributeMap = {\r\n  bgColor: 'backgroundColor',\r\n};\r\n\r\nexport default attributeMap;\r\n","const classMap = {\r\n  scrollableX: 'scrollable scrollable-x',\r\n  scrollableY: 'scrollable scrollable-y',\r\n};\r\n\r\nexport default classMap;\r\n","import attributeMap from './attributeMap';\r\nimport resolveAttributeValue from './resolveAttributeValue';\r\nimport classMap from './classMap';\r\nimport str from '../util/string';\r\n\r\nexport type StyleBag = { style: any; classes: string[] };\r\nexport type BagKeyValue = {\r\n  bag: StyleBag;\r\n  key: string;\r\n  value?: any;\r\n  debug: boolean;\r\n};\r\n\r\nexport function getOrMakeStyle(x: BagKeyValue) {\r\n  const resolvedKey = Reflect.has(attributeMap, x.key)\r\n    ? (attributeMap as any)[x.key]\r\n    : x.key;\r\n  return { [resolvedKey]: resolveAttributeValue(resolvedKey, x.value) };\r\n}\r\n\r\nexport function createStyle(x: BagKeyValue) {\r\n  Object.assign(x.bag.style, getOrMakeStyle(x));\r\n  return true;\r\n}\r\n\r\nexport function createClass(x: BagKeyValue) {\r\n  const resolvedClass = Reflect.has(classMap, x.key)\r\n    ? (classMap as any)[x.key]\r\n    : str.camelToKebabCase(x.key);\r\n  x.bag.classes.push(resolvedClass);\r\n  return true;\r\n}\r\n","export default function resolveAttributeValue(key: string, value?: any) {\r\n  if (!value) return value;\r\n  return value.hex ? value.hex() : value;\r\n}\r\n","export interface ClassSwitches {\r\n  absolute?: boolean;\r\n\r\n  alignStart?: boolean;\r\n  alignCenter?: boolean;\r\n  alignEnd?: boolean;\r\n  alignStretch?: boolean;\r\n  alignBaseline?: boolean;\r\n  alignAuto?: boolean;\r\n\r\n  alignSelfStart?: boolean;\r\n  alignSelfCenter?: boolean;\r\n  alignSelfEnd?: boolean;\r\n  alignSelfStretch?: boolean;\r\n  alignSelfBaseline?: boolean;\r\n\r\n  anchorBottom?: boolean;\r\n  anchorLeft?: boolean;\r\n  anchorRight?: boolean;\r\n  anchorTop?: boolean;\r\n\r\n  beveled?: boolean;\r\n  block?: boolean;\r\n  borderBox?: boolean;\r\n\r\n  centerX?: boolean;\r\n  centerXY?: boolean;\r\n  centerY?: boolean;\r\n  clickable?: boolean;\r\n  coverImage?: boolean;\r\n\r\n  fill?: boolean;\r\n  fixed?: boolean;\r\n  fullWidth?: boolean;\r\n  fullWidthAlways?: boolean;\r\n\r\n  grow?: boolean;\r\n\r\n  hidden?: boolean;\r\n  horizontal?: boolean;\r\n\r\n  inline?: boolean;\r\n  inlineBlock?: boolean;\r\n\r\n  justifyStart?: boolean;\r\n  justifyCenter?: boolean;\r\n  justifyEnd?: boolean;\r\n\r\n  mobileCenter?: boolean;\r\n  mobileColumn?: boolean;\r\n  mobileOnly?: boolean;\r\n\r\n  noBr?: boolean;\r\n  noBreak?: boolean;\r\n  noMargin?: boolean;\r\n  noMobile?: boolean;\r\n  noOverflow?: boolean;\r\n  noPadding?: boolean;\r\n  noSelect?: boolean;\r\n  noTransform?: boolean;\r\n  noWrap?: boolean;\r\n\r\n  opaque?: boolean;\r\n  overlay?: boolean;\r\n\r\n  relative?: boolean;\r\n  root?: boolean;\r\n  round?: boolean;\r\n  rounded?: boolean;\r\n\r\n  scrollable?: boolean;\r\n  scrollableX?: boolean;\r\n  scrollableY?: boolean;\r\n  shrink?: boolean;\r\n  small?: boolean;\r\n  smaller?: boolean;\r\n  solid?: boolean;\r\n  spaced?: boolean;\r\n  square?: boolean;\r\n  sticky?: boolean;\r\n\r\n  tall?: boolean;\r\n  translucent?: boolean;\r\n\r\n  vertical?: boolean;\r\n\r\n  wide?: boolean;\r\n}\r\n\r\nconst switches: ClassSwitches = {\r\n  absolute: true,\r\n\r\n  alignStart: true,\r\n  alignCenter: true,\r\n  alignEnd: true,\r\n  alignStretch: true,\r\n  alignBaseline: true,\r\n  alignAuto: true,\r\n\r\n  alignSelfStart: true,\r\n  alignSelfCenter: true,\r\n  alignSelfEnd: true,\r\n  alignSelfStretch: true,\r\n  alignSelfBaseline: true,\r\n\r\n  anchorBottom: true,\r\n  anchorLeft: true,\r\n  anchorRight: true,\r\n  anchorTop: true,\r\n\r\n  beveled: true,\r\n  block: true,\r\n  borderBox: true,\r\n\r\n  centerX: true,\r\n  centerXY: true,\r\n  centerY: true,\r\n  clickable: true,\r\n  coverImage: true,\r\n\r\n  fill: true,\r\n  fixed: true,\r\n  fullWidth: true,\r\n  fullWidthAlways: true,\r\n\r\n  grow: true,\r\n\r\n  hidden: true,\r\n  horizontal: true,\r\n\r\n  inline: true,\r\n  inlineBlock: true,\r\n\r\n  justifyStart: true,\r\n  justifyCenter: true,\r\n  justifyEnd: true,\r\n\r\n  mobileCenter: true,\r\n  mobileColumn: true,\r\n  mobileOnly: true,\r\n\r\n  noBr: true,\r\n  noBreak: true,\r\n  noMargin: true,\r\n  noMobile: true,\r\n  noOverflow: true,\r\n  noPadding: true,\r\n  noSelect: true,\r\n  noTransform: true,\r\n  noWrap: true,\r\n\r\n  opaque: true,\r\n  overlay: true,\r\n\r\n  relative: true,\r\n  round: true,\r\n  rounded: true,\r\n\r\n  scrollable: true,\r\n  scrollableX: true,\r\n  scrollableY: true,\r\n  shrink: true,\r\n  small: true,\r\n  smaller: true,\r\n  solid: true,\r\n  spaced: true,\r\n  sticky: true,\r\n\r\n  tall: true,\r\n  translucent: true,\r\n\r\n  vertical: true,\r\n\r\n  wide: true,\r\n};\r\n\r\nexport default switches;\r\n","import { ReactNode } from 'react';\r\nimport { createStyle } from './functions';\r\n\r\nexport interface StyleAttributes {\r\n\r\n  backgroundColor?: any;\r\n  bgColor?: any;\r\n\r\n  backgroundImage?: any,\r\n  backgroundRepeat?: any,\r\n  backgroundPosition?: any,\r\n  backgroundSize?: any,\r\n\r\n  border?: any;\r\n  borderTop?: any;\r\n  borderRight?: any;\r\n  borderBottom?: any;\r\n  borderLeft?: any;\r\n\r\n  borderRadius?: any;\r\n  borderTopLeftRadius?: any;\r\n  borderTopRightRadius?: any;\r\n  borderBottomLeftRadius?: any;\r\n  borderBottomRightRadius?: any;\r\n\r\n  borderColor?: any;\r\n\r\n  children?: ReactNode;\r\n  className?: string;\r\n  color?: string;\r\n  cursor?: 'pointer' | string;\r\n\r\n  data?: any;\r\n  dataProps?: any;\r\n\r\n  fontSize?: any;\r\n  fontStyle?: any;\r\n  fontWeight?: any;\r\n\r\n  id?: any;\r\n  innerProps?: any;\r\n\r\n  lineHeight?: number;\r\n\r\n  margin?: any;\r\n  marginTop?: any;\r\n  marginRight?: any;\r\n  marginBottom?: any;\r\n  marginLeft?: any;\r\n\r\n  minHeight?: any;\r\n  minWidth?: any;\r\n\r\n  onBlur?: Function;\r\n  onClick?: Function;\r\n  onChange?: Function;\r\n  onFocus?: Function;\r\n  onMouseUp?: Function;\r\n  onMouseDown?: Function;\r\n\r\n  opacity?: any;\r\n\r\n  padding?: any;\r\n  paddingTop?: any;\r\n  paddingRight?: any;\r\n  paddingBottom?: any;\r\n  paddingLeft?: any;\r\n\r\n  pseudo?: any;\r\n\r\n  textAlign?: any;\r\n  textTransform?: any;\r\n  title?: any;\r\n\r\n  // SPECIAL GROUPS\r\n\r\n  // size\r\n  width?: any;\r\n  height?: any;\r\n\r\n  // position\r\n  top?: any;\r\n  right?: any;\r\n  bottom?: any;\r\n  left?: any;\r\n}\r\n\r\nexport default {\r\n  backgroundColor: createStyle,\r\n  bgColor: createStyle,\r\n\r\n  backgroundImage: createStyle,\r\n  backgroundRepeat: createStyle,\r\n  backgroundPosition: createStyle,\r\n  backgroundSize: createStyle,\r\n\r\n  border: createStyle,\r\n  borderTop: createStyle,\r\n  borderRight: createStyle,\r\n  borderBottom: createStyle,\r\n  borderLeft: createStyle,\r\n\r\n  borderRadius: createStyle,\r\n  borderTopLeftRadius: createStyle,\r\n  borderTopRightRadius: createStyle,\r\n  borderBottomLeftRadius: createStyle,\r\n  borderBottomRightRadius: createStyle,\r\n\r\n  color: createStyle,\r\n  cursor: createStyle,\r\n\r\n  dataProps: createStyle,\r\n  fontSize: createStyle,\r\n  fontStyle: createStyle,\r\n  fontWeight: createStyle,\r\n\r\n  innerProps: createStyle,\r\n  lineHeight: createStyle,\r\n\r\n  margin: createStyle,\r\n  marginTop: createStyle,\r\n  marginRight: createStyle,\r\n  marginBottom: createStyle,\r\n  marginLeft: createStyle,\r\n\r\n  minHeight: createStyle,\r\n  minWidth: createStyle,\r\n\r\n  opacity: createStyle,\r\n\r\n  padding: createStyle,\r\n  paddingTop: createStyle,\r\n  paddingRight: createStyle,\r\n  paddingBottom: createStyle,\r\n  paddingLeft: createStyle,\r\n\r\n  pseudo: createStyle,\r\n\r\n  textAlign: createStyle,\r\n  textTransform: createStyle,\r\n  title: createStyle,\r\n  width: createStyle,\r\n  height: createStyle,\r\n\r\n  // position\r\n  top: createStyle,\r\n  right: createStyle,\r\n  bottom: createStyle,\r\n  left: createStyle,\r\n};\r\n","import { useMemo } from 'react';\r\nimport { createStyles, makeStyles } from '@material-ui/core/styles';\r\nimport util from '../util';\r\n\r\nconst useInlineStyle = (style: any, dependencies: any) => {\r\n  const cb = useMemo(() => (\r\n    makeStyles(() => (\r\n      createStyles({ ...util.logic.fnOrValue(style) })\r\n    ))\r\n  ), [style, dependencies]);\r\n  return cb;\r\n};\r\nexport default useInlineStyle;\r\n","// import React from 'react';\r\nimport clsx from 'clsx';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { StyleBag, createClass } from './functions';\r\nimport classSwitches from './classSwitches';\r\nimport styleAttributes, { StyleAttributes } from './styleAttributes';\r\n// import { getPropsDescriptor } from './getPropsDescriptor';\r\n\r\n// const $$reactElement = Symbol.for('react.element');\r\n\r\nfunction useStyleDirectives<T>(\r\n  directives: any,\r\n  componentOwnProps: any,\r\n  tagName?: string,\r\n  ...baseClasses: string[]\r\n) {\r\n  const {\r\n    id,\r\n    children,\r\n    style,\r\n    className,\r\n    ref,\r\n    data,\r\n    pseudo,\r\n    innerProps,\r\n    ...nonReact\r\n  } = directives;\r\n  const specialProps = {\r\n    id,\r\n    children,\r\n    style,\r\n    className,\r\n    ref,\r\n    data,\r\n    innerProps,\r\n  };\r\n  const removeProps: string[] = [];\r\n  const keys = Object.keys(nonReact);\r\n  const bag: StyleBag = { style: style || {}, classes: [] };\r\n  keys.forEach((key: any) => {\r\n    if (!Reflect.has(specialProps, key)) {\r\n      const value = directives[key];\r\n      if (Reflect.has(classSwitches, key)) {\r\n        createClass({\r\n          bag, key, value, debug: false,\r\n        });\r\n        removeProps.push(key);\r\n      } else if (Reflect.has(styleAttributes, key)) {\r\n        (styleAttributes as any)[key]({ bag, key, value });\r\n        removeProps.push(key);\r\n      } else {\r\n        const type = typeof value;\r\n        if (type === 'boolean' && value === true) {\r\n          createClass({\r\n            bag, key, value, debug: false,\r\n          });\r\n        }\r\n      }\r\n    }\r\n  });\r\n\r\n  const props = { ...nonReact };\r\n  removeProps.forEach((key) => {\r\n    delete props[key];\r\n  });\r\n\r\n  const pseudoStyles = Object.keys(directives.pseudo || {}).reduce(\r\n    (acc: any, key) => {\r\n      const s = directives.pseudo[key];\r\n      const fullKey = key[0] === '&' ? key : `& :${key}`;\r\n      return Object.assign(acc, { [fullKey]: s });\r\n    },\r\n    {},\r\n  );\r\n\r\n  const usedStyles: any = makeStyles(() => {\r\n    const s: any = {};\r\n    if (Object.keys(bag.style).length) s.bag = bag.style;\r\n    if (Object.keys(pseudoStyles).length) s.pseudo = pseudoStyles;\r\n    return s;\r\n  })();\r\n\r\n  const { dataProps, ...attr } = (directives as StyleAttributes);\r\n  const result = {\r\n    root: {\r\n      className: clsx(\r\n        className,\r\n        baseClasses,\r\n        tagName,\r\n        bag.classes,\r\n        usedStyles.bag,\r\n        usedStyles.pseudo,\r\n      ),\r\n    },\r\n    props: { ...(props as T), ...specialProps },\r\n    attr,\r\n    data: dataProps,\r\n  };\r\n\r\n  return result;\r\n}\r\n\r\nexport default useStyleDirectives;\r\n","import React, { ReactNode } from 'react';\r\nimport { PropsDirectives, useStyleDirectives } from './directives';\r\n\r\ntype DivProps = { children?: ReactNode, id?: string };\r\nexport const Div = (directives: DivProps & PropsDirectives) => {\r\n  const { children, ...other } = directives;\r\n  const { \r\n    root, \r\n    props, \r\n    attr, \r\n    data \r\n  } = useStyleDirectives<DivProps>(other, null);\r\n  return (\r\n    <div className={root.className} id={directives.id} {...data}>\r\n      {children}\r\n    </div>\r\n  );\r\n};\r\n\r\ntype RowProps = { children?: ReactNode, id?: string };\r\nexport const Row = (directives: RowProps & PropsDirectives) => {\r\n  const { children, ...other } = directives;\r\n  const { root } = useStyleDirectives<RowProps>(\r\n    other,\r\n    null,\r\n    'Row',\r\n    'flex row',\r\n  );\r\n  return (\r\n    <div className={root.className} id={directives.id}>\r\n      {children}\r\n    </div>\r\n  );\r\n};\r\n\r\ntype ColProps = { children?: ReactNode, id?: string };\r\nexport const Col = (directives: ColProps & PropsDirectives) => {\r\n  const { children, ...other } = directives;\r\n  const { root } = useStyleDirectives<ColProps>(\r\n    other,\r\n    null,\r\n    'Col',\r\n    'flex column',\r\n  );\r\n  return (\r\n    <div className={root.className} id={directives.id}>\r\n      {children}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default {\r\n  Div,\r\n  Row,\r\n  Col,\r\n};\r\n","import React, { ReactNode } from 'react';\r\nimport { CSVLink as ReactCSVLink } from 'react-csv';\r\nimport { Div } from './Layout';\r\nimport { useInlineStyle } from './directives';\r\n\r\nexport type UiCSVLink = {\r\n  data: any[];\r\n  text?: string;\r\n  children?: ReactNode;\r\n};\r\n\r\nconst CSVLink = (props: UiCSVLink) => {\r\n  const inline = useInlineStyle({\r\n    root: {\r\n      '& a': {\r\n        color: 'inherit',\r\n        textDecoration: 'none',\r\n        fontSize: '1rem',\r\n      },\r\n      '& a:hover': {\r\n        textDecoration: 'underline',\r\n      },\r\n    },\r\n  }, [])();\r\n  return (\r\n    <Div className={inline.root}>\r\n      <ReactCSVLink data={props.data}>\r\n        {props.text || props.children}\r\n      </ReactCSVLink>\r\n    </Div>\r\n  );\r\n};\r\n\r\nexport default CSVLink;\r\n","import React, { ReactNode, ReactElement } from 'react';\r\nimport Drawer from '@material-ui/core/Drawer';\r\n\r\ntype Anchor = 'top' | 'left' | 'bottom' | 'right';\r\ntype PropsType = {\r\n  anchor: Anchor;\r\n  open?: boolean;\r\n  button?: ReactElement;\r\n  onOpen?: Function;\r\n  onClose?: Function;\r\n  children?: ReactNode;\r\n};\r\n\r\nexport default (props: PropsType) => {\r\n  const [open, setOpen] = React.useState(false);\r\n  const [closed, setClosed] = React.useState<boolean|undefined>();\r\n\r\n  const externallyControlled = typeof props.open !== 'undefined';\r\n  const drawerOpen = !closed && (externallyControlled ? props.open : open);\r\n\r\n  const toggleDrawer = (open: boolean) => (event: React.KeyboardEvent | React.MouseEvent) => {\r\n    setOpen(open);\r\n    if (!open) {\r\n      setClosed(true);\r\n    }\r\n    if (open && props.onOpen) props.onOpen();\r\n    if (!open && props.onClose) props.onClose();      \r\n  };\r\n\r\n  return (\r\n    <>\r\n      {\r\n        props.button && !drawerOpen &&\r\n        React.cloneElement(props.button, {\r\n          onClick: toggleDrawer(true)\r\n        })\r\n      }\r\n      <Drawer \r\n        anchor={props.anchor} \r\n        open={drawerOpen} \r\n        onClose={toggleDrawer(false)}\r\n      >\r\n        {\r\n          !closed &&\r\n          drawerOpen && \r\n          props.children\r\n        }\r\n      </Drawer>\r\n    </>\r\n  );\r\n};\r\n","import React from 'react';\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport Select from '@material-ui/core/Select';\r\nimport { v4 as uuidv4 } from 'uuid';\r\n\r\nimport { Div } from './Layout';\r\n\r\ntype DropdownOption = string\r\n  | {\r\n      value: string | number;\r\n      text: string;\r\n    };\r\n\r\ntype DropdownProps = {\r\n  defaultValue?: string;\r\n  label?: string;\r\n  localStorageKey?: string;\r\n  options: DropdownOption[];\r\n  onChange: (value: any) => void,\r\n};\r\n\r\nexport default function Dropdown(props: DropdownProps) {\r\n  const { \r\n    localStorageKey, \r\n    label, \r\n    defaultValue, \r\n    options \r\n  } = props;\r\n  const labelId = uuidv4();\r\n\r\n  const [selectedValue, setSelectedValue] = React.useState<string | undefined>(\r\n    () => {\r\n      const storedString: string | null = localStorageKey\r\n        ? localStorage.getItem(localStorageKey)\r\n        : null;\r\n      return storedString || defaultValue;\r\n    },\r\n  );\r\n\r\n  const selectedValueExists = options.find((option: any) => {\r\n    const t = typeof option;\r\n    const obj = option as any;\r\n    const value = typeof obj === 'object' ? obj.value : option;\r\n    return selectedValue === value;\r\n  });\r\n  const auxOptions = !selectedValueExists \r\n    ? [{ value: selectedValue, text: selectedValue, aux: true }]\r\n    : []; \r\n\r\n  const handleChange = (event: React.ChangeEvent<{ value: unknown }>) => {\r\n    const value = event.target.value as string;\r\n    if (localStorageKey) {\r\n      localStorage.setItem(localStorageKey, value);\r\n    }\r\n    setSelectedValue(value);\r\n    props.onChange && props.onChange(value);\r\n  };\r\n\r\n  return (\r\n    <FormControl>\r\n      {label && <InputLabel id={labelId}>{label}</InputLabel>}\r\n      <Select\r\n        labelId={labelId}\r\n        value={selectedValue}\r\n        onChange={handleChange}\r\n      >\r\n        {[...options, ...auxOptions].map((option) => {\r\n          const t = typeof option;\r\n          const obj = option as any;\r\n          const text = typeof obj === 'object' ? obj.text : option;\r\n          const value = typeof obj === 'object' ? obj.value : option;\r\n          const aux = typeof obj === 'object' ? obj.aux === true : false;\r\n          return (\r\n            <MenuItem key={value} value={value}>\r\n              {\r\n                !aux && text\r\n              }\r\n              {\r\n                aux && <Div opacity={0.5} fontStyle=\"italic\">{text}</Div>\r\n              }\r\n            </MenuItem>\r\n          );\r\n        })}\r\n      </Select>\r\n    </FormControl>\r\n  );\r\n}\r\n","/* eslint jsx-quotes: [\"error\", \"prefer-double\"] */\r\nimport React, { \r\n  useEffect, \r\n  useRef, \r\n  ReactNode, \r\n  useMemo \r\n} from 'react';\r\nimport clsx from 'clsx';\r\nimport { Paper } from '@material-ui/core';\r\nimport { useTheme } from '@material-ui/core/styles';\r\n\r\nimport logic from '../util/logic';\r\nimport {\r\n  PropsDirectives,\r\n  useStyleDirectives,\r\n  useInlineStyle,\r\n} from '../directives';\r\nimport './style.css';\r\n\r\n/**\r\n * colSpan: (Optional) number of columns the item spans.  Default is 1.\r\n * image: (Optional) cover image for the card.\r\n *\r\n */\r\nexport interface IMasonryItem {\r\n  colSpan?: number;\r\n  image?: any;\r\n  title?: string;\r\n  description?: string;\r\n  onClick?: Function;\r\n}\r\n\r\n/**\r\n * min: Min value for the grid's minmax(min, max) function. Default 150px.\r\n * max: Max value for the grid's minmax(min, max) function. Default 1fr.\r\n * items: IMasonryItem[]\r\n */\r\nexport type MasonryProps = {\r\n  min?: any;\r\n  max?: any;\r\n  items: IMasonryItem[];\r\n  elementForItem?: (item: IMasonryItem, index: number) => ReactNode;\r\n  revision: number,\r\n};\r\n\r\nconst ElementContainer = (props: any) => {\r\n  const { element, colSpan, image } = props;\r\n  const inline = useInlineStyle(() => {\r\n    const root: any = {};\r\n    if (colSpan) {\r\n      root.gridColumnEnd = `span ${colSpan}`;\r\n    }\r\n    return {\r\n      root,\r\n      image: { backgroundImage: `url(\"${image}\")` },\r\n    };\r\n  }, [colSpan, image])();\r\n\r\n  return (\r\n    <div className={clsx('masonry-item', 'relative', inline.root)}>\r\n      <div className=\"content fill\">{element}</div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport const DefaultMasonryItem = (\r\n  directives: IMasonryItem & PropsDirectives,\r\n) => {\r\n  const {\r\n    colSpan, image, title, description, onClick, ...d\r\n  } = directives;\r\n  const { root } = useStyleDirectives<IMasonryItem>(\r\n    d,\r\n    null,\r\n    'MasonryItem',\r\n    'masonry-item',\r\n  );\r\n  const inline = useInlineStyle(() => ({\r\n    root: { gridColumnEnd: colSpan ? `span ${colSpan}` : null },\r\n    image: { backgroundImage: `url(\"${image}\")` },\r\n  }), [colSpan, image])();\r\n  return (\r\n    // eslint-disable-next-line\r\n    <div\r\n      className={clsx(root.className, inline.root)}\r\n      onClick={() => onClick && onClick()}\r\n    >\r\n      <Paper className=\"content\">\r\n        {image && <div className={clsx('cover-image', inline.image)} />}\r\n        {title && <div className=\"title\">{title}</div>}\r\n        {description && <div className=\"desc\">{description}</div>}\r\n      </Paper>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst Masonry = (directives: MasonryProps & PropsDirectives) => {\r\n  const {\r\n    min, max, items, elementForItem, revision, ...d\r\n  } = directives;\r\n\r\n  const theme = useTheme();\r\n\r\n  const { root } = useStyleDirectives<MasonryProps>(\r\n    d,\r\n    null,\r\n    'Masonry',\r\n    'ui-masonry-grid masonry-grid grid',\r\n  );\r\n\r\n  const mutable = useRef({ resizing: false, gridItems: [] }).current;\r\n\r\n  const g = document.getElementsByClassName('masonry-grid')[0];\r\n  const { \r\n    grid, \r\n    rowHeight, \r\n    rowGap, \r\n    gridItems \r\n  } = useMemo(() => {\r\n    if (!g) return { rowHeight: 0, rowGap: 0, gridItems: [] };\r\n    return {\r\n      grid: g,\r\n      rowHeight: parseInt(\r\n        window.getComputedStyle(g).getPropertyValue('grid-auto-rows'), 10,\r\n      ),\r\n      rowGap: parseInt(\r\n        window.getComputedStyle(g).getPropertyValue('grid-row-gap'), 10,\r\n      ),\r\n      gridItems: Array.from(document.getElementsByClassName('masonry-item'))\r\n        .map(\r\n          (e: any) => {\r\n            const innerElement = e.querySelector('.content > *');\r\n            const heightRatio = +innerElement.getAttribute('heightratio');\r\n            return {\r\n              container: e,\r\n              innerElement,\r\n              heightRatio,\r\n            };\r\n          }\r\n        ),\r\n    };\r\n  }, [g, items, revision, mutable.resizing]);\r\n  \r\n  // const resizeGridItem = React.useCallback((item: any) => {\r\n  //   const grid = document.getElementsByClassName('masonry-grid')[0];\r\n  //   const rowHeight = parseInt(\r\n  //     window.getComputedStyle(grid).getPropertyValue('grid-auto-rows'), 10,\r\n  //   );\r\n  //   const rowGap = parseInt(\r\n  //     window.getComputedStyle(grid).getPropertyValue('grid-row-gap'), 10,\r\n  //   );\r\n  //   const innerEllement = item.querySelector('.content > *');\r\n  //   // const heightRatio = innerEllement.get\r\n  //   const rowSpan = Math.ceil(\r\n  //     innerEllement.getBoundingClientRect().height / (rowHeight + rowGap),\r\n  //   );\r\n  //   item.style.gridRowEnd = `span ${rowSpan}`;\r\n  // }, []);\r\n\r\n  const resizeGridItem = React.useCallback((gi: any) => {\r\n    \r\n    const rect = gi.innerElement.getBoundingClientRect();\r\n    if (rect.width === 0) {\r\n      return;\r\n    }\r\n\r\n    let rowSpan;\r\n\r\n    if (gi.heightRatio) {\r\n      const impliedHeight = Math.round(rect.width * gi.heightRatio);\r\n      const heightWithGap = impliedHeight + rowGap;\r\n      const remainder = heightWithGap % (rowHeight + rowGap);\r\n      rowSpan = Math.round((heightWithGap - remainder) / (rowHeight + rowGap));\r\n    } else {\r\n      const heightWithGap = rect.height + rowGap;\r\n      const remainder = heightWithGap % (rowHeight + rowGap);\r\n      rowSpan = Math.round((heightWithGap - remainder) / (rowHeight + rowGap));\r\n    }\r\n\r\n    gi.container.style.gridRowEnd = `span ${rowSpan}`;\r\n  }, [grid, items, gridItems, revision, mutable.resizing]);\r\n\r\n  const resizeAllGridItems = React.useCallback(() => {\r\n      gridItems.forEach(gi => resizeGridItem(gi));\r\n    },\r\n    [grid, items, gridItems, revision, mutable.resizing, resizeGridItem]\r\n  );\r\n\r\n  // Triggers\r\n  const handleResizeAllGridItems = React.useCallback(() => {\r\n    if (mutable.resizing) {\r\n      return;\r\n    }\r\n    mutable.resizing = true;\r\n    const timer = setTimeout(() => {\r\n      mutable.resizing = false;\r\n    }, 100);\r\n    window.requestAnimationFrame(() => {\r\n      clearTimeout(timer);\r\n      resizeAllGridItems();\r\n      mutable.resizing = false;\r\n    });\r\n    \r\n  }, [grid, items, gridItems, revision, mutable.resizing, resizeAllGridItems]);\r\n  \r\n  useEffect(() => {\r\n    window.addEventListener('resize', handleResizeAllGridItems);\r\n    return () => {\r\n      window.removeEventListener('resize', handleResizeAllGridItems);\r\n    };\r\n  }, [grid, items, gridItems, revision, mutable.resizing, handleResizeAllGridItems]);\r\n\r\n  useEffect(() => {\r\n    setTimeout(() => handleResizeAllGridItems(), 100);\r\n  }, [grid, items, gridItems, revision, mutable.resizing, handleResizeAllGridItems]);\r\n\r\n  setTimeout(() => handleResizeAllGridItems(), 0);\r\n\r\n  const inline = useInlineStyle(() => {\r\n    const minval = min || '150px';\r\n    const maxval = max || '1.4fr';\r\n    return {\r\n      root: {\r\n        gridTemplateColumns: `repeat(auto-fill, minmax(${minval},${maxval}))`,\r\n        '& .masonry-item': {\r\n          boxShadow: logic.switch(\r\n            null, 'inherit', \r\n            () => theme.palette.type === 'light', '2px 2px 4px #9c9c9c',\r\n          ),\r\n          borderRadius: 3,\r\n          overflow: 'hidden',\r\n        },\r\n        '& .masonry-item:hover': {\r\n          boxShadow: logic.switch(\r\n            null, '3px 3px 6px #9c9c9c', \r\n            () => theme.palette.type === 'dark', '0px 0px 4px #55555522',\r\n          ),\r\n        },\r\n      },\r\n    };\r\n  }, [min, max])();\r\n\r\n  return (\r\n    <div className={clsx('root', root.className, inline.root)}>\r\n      {\r\n        /* eslint-disable react/jsx-props-no-spreading */\r\n        /* eslint-disable no-confusing-arrow */\r\n        /* eslint-disable react/no-array-index-key */\r\n        items.map((item, index) => elementForItem\r\n          ? (\r\n            <ElementContainer\r\n              key={index}\r\n              {...item}\r\n              element={elementForItem(item, index)}\r\n            />\r\n          ) : (\r\n            <DefaultMasonryItem key={index} {...item} />\r\n          ))\r\n      }\r\n    </div>\r\n  );\r\n};\r\nexport default Masonry;\r\n","import React, { ReactNode, useEffect, useState } from 'react';\r\n\r\n// MUI\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport Slide from '@material-ui/core/Slide';\r\nimport { TransitionProps } from '@material-ui/core/transitions';\r\nimport Button from '@material-ui/core/Button';\r\n\r\n// components\r\nimport { Div } from './Layout';\r\n\r\nconst Transition = React.forwardRef(function Transition(\r\n    props: TransitionProps & { children?: React.ReactElement<any, any> },\r\n    ref: React.Ref<unknown>) {\r\n    return <Slide direction=\"down\" ref={ref} {...props} />;\r\n});\r\n\r\ntype ModalProps = {show: boolean, title?: ReactNode, body?: ReactNode, onClose: Function, onEscape?: Function, onOk?: Function};\r\n\r\nconst Modal = (props: ModalProps) => {\r\n\r\n    const handleClose = () => props.onClose();\r\n    const handleEscapeKey = () => props.onEscape && props.onEscape();\r\n\r\n    const handleOk = () => {\r\n        props.onOk && props.onOk();\r\n        handleClose();\r\n    }\r\n\r\n    useEffect(() => {\r\n        document.addEventListener(\"keydown\", handleEscapeKey, false);\r\n        return () => document.removeEventListener(\"keydown\", handleEscapeKey, false);\r\n    }, []);\r\n    \r\n    return (\r\n        <Dialog\r\n            open={props.show}\r\n            TransitionComponent={Transition}\r\n            onClose={handleClose}\r\n            disableBackdropClick\r\n            disableEscapeKeyDown\r\n            maxWidth=\"lg\"\r\n        >\r\n            <Div relative>\r\n                {props.title}\r\n                {props.body}\r\n            </Div>\r\n\r\n            <DialogActions>\r\n                <Button onClick={handleClose} color=\"default\">\r\n                    {\r\n                        // For semantic reasons: \r\n                        // if the 'Close' button is juxtaposed with 'OK' button, it should say 'Cancel'\r\n                        props.onOk ? 'Cancel' : 'Close'\r\n                    }\r\n                </Button>\r\n                {\r\n                    props.onOk &&\r\n                    <Button onClick={handleOk} color=\"default\">\r\n                        OK\r\n                    </Button>\r\n                }                \r\n            </DialogActions>\r\n            \r\n        </Dialog>\r\n    )\r\n}\r\n\r\nexport default Modal;","import React from 'react';\r\nimport { Div, Row } from './Layout';\r\nimport isNullOrUndefined from './util/object/traverse/isNullOrUndefined';\r\nimport str from './util/string';\r\n\r\ntype PropertyPageProps = {\r\n  data: any,\r\n};\r\n\r\nconst PropertyPage = (props: PropertyPageProps) => {\r\n  const { data } = props;\r\n  const keys = Object.keys(data)\r\n    .filter(key => !!data[key] || data[key] === 0);\r\n  \r\n  return (\r\n    <>\r\n      {\r\n        keys.map(key => {\r\n\r\n          const label = str.camelToSentenceCase(key);\r\n\r\n          return (\r\n            <Row key={key} spaced fontSize=\"0.8rem\">\r\n              <Div width=\"50%\" opacity={0.5}>\r\n                { label }\r\n              </Div>\r\n              <Div width=\"50%\">\r\n                {\r\n                  typeof data[key] === 'boolean' ? data[key].toString() : data[key]\r\n                }\r\n              </Div>\r\n            </Row>\r\n          );\r\n        })\r\n      }\r\n    </>\r\n  );\r\n};\r\nexport default PropertyPage;\r\n","import React, { ReactNode } from 'react';\r\nimport Tabs from '@material-ui/core/Tabs';\r\nimport Tab from '@material-ui/core/Tab';\r\nimport clsx from 'clsx';\r\nimport {\r\n  PropsDirectives,\r\n  useStyleDirectives,\r\n  useInlineStyle,\r\n} from './directives';\r\nimport { Row, Col } from './Layout';\r\nimport util from './util';\r\n\r\nexport type UiTabDef = {\r\n  label: ReactNode;\r\n  content: ReactNode | { (): ReactNode };\r\n};\r\nexport function isTabDef(object: any) {\r\n  return !!object && !!object.label && !!object.content;\r\n}\r\nexport type UiTab = ReactNode | UiTabDef;\r\nexport type UiTabData = { [index: string]: UiTab };\r\nexport type UiTabs = {\r\n  items: any[];\r\n  keyForItem?: (item: any) => string;\r\n  elementForItem: (item: any, active: boolean) => ReactNode;\r\n  //\r\n  id?: string; // needed if auto saved state is desired\r\n  onChange?: { (key: string): void };\r\n  activeKey?: string;\r\n  variant?: 'fullWidth' | 'scrollable';\r\n  orientation?: 'vertical';\r\n  centered?: boolean;\r\n};\r\ntype ValueType = string | number | boolean | symbol;\r\ntype ValueOrElement = ValueType | Element | React.ReactNode;\r\nexport type FunctionOrValueOrElement = Function | ValueOrElement;\r\n\r\ninterface TabPanelProps {\r\n  children?: FunctionOrValueOrElement;\r\n  active: boolean;\r\n  id?: string;\r\n  value: string;\r\n}\r\n\r\nfunction TabPanel(props: TabPanelProps) {\r\n  const {\r\n    children, active, value, id,\r\n  } = props;\r\n  return (\r\n    <div\r\n      role=\"tabpanel\"\r\n      hidden={!active}\r\n      id={`${id}-${value}`}\r\n      aria-labelledby={`${id}-${value}`}\r\n    >\r\n      {children || <div>No content</div>}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default (directives: UiTabs & PropsDirectives) => {\r\n  const {\r\n    id,\r\n    onChange,\r\n    activeKey,\r\n    variant,\r\n    orientation,\r\n    centered,\r\n    items,\r\n    keyForItem,\r\n    elementForItem,\r\n    ...d\r\n  } = directives;\r\n  const { root, props } = useStyleDirectives<UiTabs>(d, null, 'ui-tabs');\r\n\r\n  const keys = items.map((item) => {\r\n    if (!keyForItem) {\r\n      switch (typeof item) {\r\n        case 'string':\r\n          return item;\r\n        case 'number':\r\n          return item.toString();\r\n        default:\r\n          throw new Error('Invalid key');\r\n      }\r\n    }\r\n    return keyForItem(item);\r\n  });\r\n\r\n  const [selectedKey, setActiveKey] = React.useState(() => activeKey);\r\n\r\n  const handleChange = (event: React.ChangeEvent<{}>, key: string) => {\r\n    setActiveKey(key);\r\n    if (onChange) onChange(key);\r\n  };\r\n\r\n  const internalStyle = useInlineStyle(\r\n    () => ({\r\n      minWidth: 'unset!important',\r\n      minHeight: 'unset!important',\r\n    }),\r\n    [],\r\n  )();\r\n\r\n  if (!keys.length) return null;\r\n\r\n  const tabStrip = (\r\n    <Tabs\r\n      orientation={directives.orientation}\r\n      value={selectedKey || keys[0]}\r\n      onChange={handleChange}\r\n      aria-label={`tabs with ${keys.length} panels`}\r\n    >\r\n      {keys.map((key: string) => {\r\n        const label = util.string.camelToSentenceCase(key);\r\n        return <Tab key={key} label={label} value={key} />;\r\n      })}\r\n    </Tabs>\r\n  );\r\n\r\n  const tabContent = items.map((item: string, index: number) => {\r\n    const key = keys[index];\r\n    const isActiveTab = (typeof selectedKey === 'undefined' && index === 0)\r\n      || selectedKey === key;\r\n    return (\r\n      <TabPanel\r\n        key={key}\r\n        active={isActiveTab}\r\n        value={key}\r\n        id={props.id || 'global'}\r\n      >\r\n        {elementForItem(item, isActiveTab)}\r\n      </TabPanel>\r\n    );\r\n  });\r\n\r\n  const verticalLayout = (\r\n    <Row wide>\r\n      {keys.length > 1 && <Col>{tabStrip}</Col>}\r\n      <Col grow>{tabContent}</Col>\r\n    </Row>\r\n  );\r\n\r\n  const horizontalLayout = (\r\n    <>\r\n      {keys.length > 1 && tabStrip}\r\n      {tabContent}\r\n    </>\r\n  );\r\n\r\n  const isVertical = directives.orientation === 'vertical';\r\n\r\n  return (\r\n    <div className={clsx('root', root, internalStyle)}>\r\n      {isVertical && verticalLayout}\r\n      {!isVertical && horizontalLayout}\r\n    </div>\r\n  );\r\n};\r\n","import * as React from 'react'\nimport clsx from 'clsx'\n\nimport card from './MediaCard';\nimport csvLink from './CSVLink';\nimport counter from './Counter';\n\nimport drawer from './Drawer';\nimport dropdown from './Dropdown';\n\nimport { Div, Row, Col } from './Layout';\n\nimport masonry from './Masonry';\nimport modal from './Modal';\nimport propertyPage from './PropertyPage';\nimport tabs from './Tabs';\n\nimport useInlineStyle from './directives/useInlineStyle';\n\nimport uuid from 'uuid';\n\nexport default {\n  \n  counter,\n  csvLink,\n  \n  div: Div,\n  drawer,\n  dropdown,\n\n  card,\n  clsx,\n  col: Col,\n  \n  masonry,\n  modal,\n  propertyPage,\n  \n  row: Row,\n  \n  tabs,\n\n  useInlineStyle,\n}\n","import React from 'react';\r\nimport ui from '.';\r\n\r\nconst defaultMinCount = 0;\r\n\r\nexport type UiCounter = { min?: number; title?: string };\r\nexport default (props: UiCounter) => {\r\n  \r\n  const ref = React.useRef({ count: 0 }).current; \r\n\r\n  if (\r\n    ++ref.count <=\r\n    (typeof props.min !== 'undefined' ? props.min : defaultMinCount)\r\n  ) {\r\n    return null;\r\n  }\r\n  \r\n  const classes = ui.useInlineStyle({\r\n    root: {\r\n      position: 'absolute',\r\n      zIndex: 999999,\r\n      top: 0,\r\n      left: 0,\r\n      padding: '0 3px',\r\n      lineHeight: 1,\r\n      fontSize: '.7rem',\r\n      backgroundColor: 'red',\r\n      color: 'white',\r\n    }\r\n  }, [])();\r\n\r\n\r\n  return (\r\n    <div\r\n      title={props.title}\r\n      className={classes.root}\r\n    >\r\n      {ref.count}\r\n    </div>\r\n  );\r\n};\r\n","import React, { useEffect, useState } from 'react'\nimport ReactMarkdown from 'react-markdown'\nimport ui from '@reactiff/ui-core'\n\nconst md = `\n[![NPM](https://img.shields.io/npm/v/@reactiff/ui-core.svg)](https://www.npmjs.com/package/@reactiff/ui-core) [![JavaScript Style Guide](https://img.shields.io/badge/code_style-standard-brightgreen.svg)](https://standardjs.com)\n`;\n\nconst App = () => {\n\n  const [state, setState] = useState<any>();\n\n  useEffect(() => {\n    const run = () => {\n      const newState = { value: 0 };\n      setState(newState);\n      setTimeout(run, 1000);\n    }\n    run();\n  }, [setState]);\n\n  const styles = ui.useInlineStyle({\n    root: { \n      border: '4px solid #ffffff',\n      padding: 30,\n      '& > .value': { \n        fontSize: '3rem',\n        margin: '0 0 15px 0',\n      }\n    }\n  }, [])();\n\n  return (\n    <div> \n      <ui.col alignCenter>\n        <h1>\n          @reactiff/ui-core\n        </h1>\n        <p>\n          UI toolkit foundation\n        </p>\n        <ReactMarkdown>\n          {md}\n        </ReactMarkdown>\n        <div className={`flex column align-center ${styles.root}`}>\n          <h1 className=\"value\">\n            Nothing\n          </h1>\n        </div>\n        <p>\n          <a href=\"https://www.npmjs.com/package/@reactiff/ui-core\">npm</a> | <a href=\"https://github.com/reactiff/package-name\">git</a> | MIT © <a href=\"https://github.com/reactiff\">Rick Ellis</a>\n        </p>\n      </ui.col>\n    </div>\n  )\n}\n\nexport default App\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './App'\n\nimport './css/index.css'\nimport './css/orthogonal.css'\nimport './css/flex.css'\n\nReactDOM.render(<App />, document.getElementById('root'))\n"],"sourceRoot":""}