{"version":3,"sources":["../../src/util/logic.ts","../../src/util/string.ts","../../src/util/array.ts","../../src/util/date.ts","../../src/util/object/traverse/traverseLeaf.ts","../../src/util/object/traverse/traverseArray.ts","../../src/util/object/traverse/traverseObject.ts","../../src/util/object/traverse/isNullOrUndefined.ts","../../src/util/object/traverse/index.ts","../../src/util/object/assignPath.ts","../../src/util/object/mapReduceObject.ts","../../src/util/index.ts","../../src/util/object/index.ts","../../src/util/object/selectShape.ts","../../src/util/object/intersect.ts","../../src/MediaCard.tsx","../../src/directives/attributeMap.ts","../../src/directives/classMap.ts","../../src/directives/functions.ts","../../src/directives/resolveAttributeValue.ts","../../src/directives/classSwitches.ts","../../src/directives/styleAttributes.ts","../../src/directives/useInlineStyle.ts","../../src/directives/useStyleDirectives.ts","../../src/Layout.tsx","../../src/Masonry/index.tsx","../../src/Modal.tsx","../../src/Tabs.tsx","../../src/index.tsx","../../src/Counter.tsx","../../src/CSVLink.tsx","../../src/Drawer.tsx","../../src/Dropdown.tsx","../../src/PropertyPage.tsx","App.tsx","index.tsx"],"names":["fnOrValue","element","inline","matchSingleKey","key","matchKey","Array","pairs","i","defaultValue","strutil","camelToSentenceCase","string","t","trimmed","token","camelToKebabCase","toProperCase","mutateWhile","result","condition","transform","toCamelCase","temp","removeDoubleSpaces","s","all","array","test","uniques","Set","sortBy","valueForItem","order","dir","sortByDesc","toDictionary","items","Object","parse","date","offsetMinutes","minutes","adjustmentTime","hours","yyyymmdd","yyyy","MM","dd","Date","isoToInt","isoDate","parseInt","traverseLeaf","value","ctx","console","results","cbContext","type","contructorName","path","tokens","depth","other","index","traverseArray","isNullOrUndefined","symbols","symbol","traverseObject","traverse","ns","strategy","Reflect","source","select","assignPath","target","cursor","node","args","acc","aggregate","item","itemValue","elem","fn","fnConcat","MapReduceObject","this","count","map","concat","min","Math","Number","max","sum","avg","values","logic","object","selectShape","shape","x","alias","selector","sourcePath","_","intersect","mapReduce","useStyles","makeStyles","root","maxWidth","media","height","attributeMap","bgColor","classMap","scrollableX","scrollableY","createStyle","resolvedKey","getOrMakeStyle","createClass","resolvedClass","str","switches","absolute","alignStart","alignCenter","alignEnd","alignStretch","alignBaseline","alignAuto","alignSelfStart","alignSelfCenter","alignSelfEnd","alignSelfStretch","alignSelfBaseline","anchorBottom","anchorLeft","anchorRight","anchorTop","beveled","block","borderBox","centerX","centerXY","centerY","clickable","coverImage","fill","fixed","fullWidth","fullWidthAlways","grow","hidden","horizontal","inlineBlock","justifyStart","justifyCenter","justifyEnd","mobileCenter","mobileColumn","mobileOnly","noBr","noBreak","noMargin","noMobile","noOverflow","noPadding","noSelect","noTransform","noWrap","opaque","overlay","relative","round","rounded","scrollable","shrink","small","smaller","solid","spaced","sticky","tall","translucent","vertical","wide","backgroundColor","backgroundImage","backgroundRepeat","backgroundPosition","backgroundSize","border","borderTop","borderRight","borderBottom","borderLeft","borderRadius","borderTopLeftRadius","borderTopRightRadius","borderBottomLeftRadius","borderBottomRightRadius","color","dataProps","fontSize","fontStyle","fontWeight","innerProps","lineHeight","margin","marginTop","marginRight","marginBottom","marginLeft","minHeight","minWidth","opacity","padding","paddingTop","paddingRight","paddingBottom","paddingLeft","pseudo","textAlign","textTransform","title","width","top","right","bottom","left","useInlineStyle","style","useMemo","createStyles","util","useStyleDirectives","id","directives","children","className","ref","data","nonReact","specialProps","removeProps","keys","bag","classes","debug","styleAttributes","props","pseudoStyles","fullKey","usedStyles","attr","baseClasses","clsx","Div","Row","Col","ElementContainer","colSpan","image","DefaultMasonryItem","description","onClick","gridColumnEnd","Transition","direction","TabPanel","active","role","aria-labelledby","counter","position","zIndex","csvLink","textDecoration","div","drawer","React","open","setOpen","closed","setClosed","externallyControlled","drawerOpen","toggleDrawer","anchor","onClose","dropdown","localStorageKey","label","options","labelId","uuidv4","localStorage","selectedValue","setSelectedValue","auxOptions","text","aux","onChange","event","obj","card","footerActions","gutterBottom","variant","component","size","col","masonry","elementForItem","revision","d","theme","useTheme","mutable","resizing","gridItems","g","document","grid","rowHeight","window","rowGap","innerElement","e","heightRatio","container","resizeGridItem","rect","gi","heightWithGap","remainder","rowSpan","resizeAllGridItems","handleResizeAllGridItems","timer","setTimeout","clearTimeout","useEffect","gridTemplateColumns","boxShadow","overflow","modal","handleClose","handleEscapeKey","TransitionComponent","disableBackdropClick","disableEscapeKeyDown","propertyPage","row","tabs","activeKey","keyForItem","Error","selectedKey","setActiveKey","internalStyle","tabStrip","orientation","aria-label","tabContent","isActiveTab","verticalLayout","horizontalLayout","isVertical","uuid","App","useState","setState","run","styles","ui","href","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.66c2ba2c.chunk.js","sourcesContent":["export type ValueSymbolObject = \r\n  string | number | boolean | symbol | object | null | undefined | void;\r\nexport type ValueOrElement = ValueSymbolObject | Element | React.ReactNode;\r\nexport type FunctionOrValueOrElement = Function | ValueOrElement;\r\n\r\nexport const fnOrValue = (element: FunctionOrValueOrElement, param?: any) => {\r\n  if (typeof element === 'function') {\r\n    return (element as Function)(param);\r\n  }\r\n  return element;\r\n};\r\n\r\nexport type ArrayOfValueTypes = ValueSymbolObject[];\r\nexport type KeyOrKeys = ValueSymbolObject | ArrayOfValueTypes;\r\nexport type KeyOrValue = KeyOrKeys | FunctionOrValueOrElement;\r\nexport type KeyValuePairs = KeyOrValue[];\r\n\r\nconst inline = {\r\n  fnOrValue,\r\n\r\n  /**\r\n   * Returns a matching element from k1, v1, k2, v2... args following the defaultElement.\r\n   * Each key argument can be an array of alternative keys for the corresponding element.\r\n   * @param key - key: Selector value\r\n   * @param defaultElement - defaultElement: Default return value\r\n   */\r\n  switch(\r\n    rootKey: ValueSymbolObject,\r\n    defaultValue: FunctionOrValueOrElement,\r\n    ...pairs: KeyValuePairs\r\n  ) {\r\n    const matchSingleKey = (key: Function | ValueSymbolObject) => {\r\n      if (typeof key === 'function') {\r\n        return (key as Function)(rootKey);\r\n      }\r\n      return key === rootKey;\r\n    };\r\n\r\n    const matchKey = (key: KeyOrKeys) => {\r\n      if (Array.isArray(key)) {\r\n        return (key as ArrayOfValueTypes).some(matchSingleKey);\r\n      }\r\n      return matchSingleKey(key); \r\n    };\r\n\r\n    for (let i = 0; i < pairs.length; i += 2) {\r\n      const key = pairs[i] as KeyOrKeys;\r\n      if (matchKey(key)) {\r\n        return fnOrValue(pairs[i + 1], key);\r\n      }\r\n    }\r\n\r\n    // return default value\r\n    return fnOrValue(defaultValue, rootKey);\r\n  },\r\n};\r\n\r\nexport default inline;\r\n","const strutil = {\r\n  camelToSentenceCase: (string: string) => {\r\n    if (!string) return string;\r\n    const tokens = string\r\n      .replace(/([A-Z]+|[0-9]+)/g, ' $1')\r\n      .trim()\r\n      .split(' ');\r\n    return tokens\r\n      .filter((t) => t && t.length)\r\n      .map((token) => {\r\n        const trimmed = token.trim();\r\n        return trimmed[0].toUpperCase() + trimmed.substring(1);\r\n      })\r\n      .join(' ');\r\n  },\r\n\r\n  camelToKebabCase: (string: string) => {\r\n    if (!string) return string;\r\n    const tokens = string\r\n      .replace(/([A-Z]+)/g, ' $1')\r\n      .trim()\r\n      .split(' ');\r\n    return tokens\r\n      .map((token) => token.trim().toLowerCase())\r\n      .join('-');\r\n  },\r\n\r\n  toProperCase: (string: string) => {\r\n    if (!string) return string;\r\n    return string[0].toUpperCase() + string.substring(1);\r\n  },\r\n\r\n  mutateWhile: (\r\n    original: string,\r\n    condition: { (value: string): boolean },\r\n    transform: { (value: string): string },\r\n  ) => {\r\n    let result = original;\r\n    while (condition(result)) {\r\n      result = transform(result);\r\n    }\r\n    return result;\r\n  },\r\n\r\n  toCamelCase: (string: string) => {\r\n    if (!string) return string;\r\n    const temp = string.replace(/\\s/g, '').trim();\r\n    if (temp.length === 0) return '';\r\n    return temp[0].toLowerCase() + temp.substring(1);\r\n  },\r\n\r\n  removeDoubleSpaces: (string: string) => (\r\n    strutil\r\n      .mutateWhile(\r\n        string,\r\n        (s) => s.indexOf('  ') >= 0,\r\n        (s) => s.replaceAll(/\\s\\s/g, ' '),\r\n      )\r\n      .trim()\r\n  ),\r\n};\r\n\r\nexport default strutil;\r\n","export function all(array: any[], test: any) {\r\n  const someAreFalse = array.some((x) => !test(x));\r\n  return !someAreFalse;\r\n}\r\n\r\nexport function uniques(array: any[]) {\r\n  return Array.from(new Set(array));\r\n}\r\n\r\nexport function toDictionary(items: any[], key: (item: any) => any) {\r\n  return items.reduce(\r\n    (dict: any, item: any) => Object.assign(dict, { [key(item)]: item }),\r\n    {},\r\n  );\r\n}\r\n\r\nexport function sortBy(\r\n  valueForItem: (item: any) => any,\r\n  order?: 'asc' | 'desc',\r\n) {\r\n  const dir = order && order === 'desc' ? -1 : 1;\r\n  return (a: any, b: any) => (valueForItem(a) < valueForItem(b) ? -1 : 1) * dir;\r\n}\r\nexport function sortByDesc(valueForItem: (item: any) => any) {\r\n  return (a: any, b: any) => (valueForItem(a) > valueForItem(b) ? -1 : 1);\r\n}\r\n\r\nexport default {\r\n  all,\r\n  uniques,\r\n  sortBy,\r\n  sortByDesc,\r\n  toDictionary,\r\n};\r\n","export function parse(date: string) {\r\n  const d = new Date();\r\n  const offsetMinutes = d.getTimezoneOffset();\r\n  const minutes = offsetMinutes % 60;\r\n  const hours = offsetMinutes / 60;\r\n  const hh = hours.toString().padStart(2, '0');\r\n  const mm = minutes.toString().padStart(2, '0');\r\n  const adjustmentTime = `${hh}:${mm}`;\r\n  const yyyymmdd = date.split('T')[0];\r\n  const [yyyy, MM, dd] = yyyymmdd.split('-');\r\n  const value = new Date(`${yyyy}-${MM}-${dd}T${adjustmentTime}:00.000`);\r\n  return value;\r\n}\r\n\r\nexport function isoToInt(isoDate: string) {\r\n  const [yyyy, MM, dd] = isoDate.split('T')[0].split('-');\r\n  return parseInt(`${yyyy}${MM}${dd}`, 10);\r\n}\r\n\r\nexport default {\r\n  parse,\r\n  isoToInt,\r\n};\r\n","import traverseObject from './traverseObject';\r\nimport traverseArray from './traverseArray';\r\n\r\nimport { RecursiveContext, CallbackContext } from './types';\r\n\r\nexport default function traverseLeaf(value: any, ctx: RecursiveContext) {\r\n  if (ctx.debug)\r\n    console.log(\r\n      new Array(ctx.depth).fill(' ').join('') + 'traverseLeaf value:',\r\n      value,\r\n      ' ctx:',\r\n      ctx,\r\n    );\r\n\r\n  let results: any[] = [];\r\n\r\n  const cbContext: CallbackContext = {\r\n    value,\r\n    type: typeof value,\r\n    contructorName: value ? value.constructor.name : undefined,\r\n    key: ctx.key,\r\n    path: ctx.path\r\n      .map((t: any) => {\r\n        const token = typeof t === 'string' ? t : t.toString();\r\n        return token[0] === '[' ? token : '.' + token;\r\n      })\r\n      .join('')\r\n      .substring(1),\r\n    tokens: ctx.path,\r\n  };\r\n\r\n  // if find and select are both present\r\n  if (ctx.find && ctx.select && ctx.find(cbContext)) {\r\n    return ctx.select(cbContext);\r\n  }\r\n\r\n  if (ctx.filter) {\r\n    // if filter present\r\n    if (ctx.filter(cbContext)) {\r\n      if (ctx.visit) {\r\n        ctx.visit(cbContext);\r\n      }\r\n      if (ctx.select) {\r\n        results = results.concat(ctx.select(cbContext));\r\n      }\r\n    }\r\n  } else {\r\n    // no filter present\r\n    if (ctx.visit) {\r\n      ctx.visit(cbContext);\r\n    }\r\n    if (ctx.select) {\r\n      results = results.concat(ctx.select(cbContext));\r\n    }\r\n  }\r\n\r\n  if (Array.isArray(value)) {\r\n    if (!ctx.expand || ctx.expand(cbContext)) {\r\n      results = results.concat(traverseArray(value, ctx));\r\n    }\r\n  } else if (typeof value === 'object') {\r\n    if (!ctx.expand || ctx.expand(cbContext)) {\r\n      results = results.concat(traverseObject(value, ctx));\r\n    }\r\n  }\r\n\r\n  return results;\r\n}\r\n","import traverseLeaf from './traverseLeaf';\r\nimport { RecursiveContext } from './types';\r\n\r\nexport default function traverseArray(value: any, ctx: RecursiveContext) {\r\n  if (ctx.debug)\r\n    console.log(\r\n      new Array(ctx.depth).fill(' ').join('') + 'traverseArray value:',\r\n      value,\r\n      ' ctx:',\r\n      ctx,\r\n    );\r\n\r\n  let results: any[] = [];\r\n\r\n  const { path, depth, ...other } = ctx;\r\n\r\n  for (let index = 0; index < value.length; index++) {\r\n    results = results.concat(\r\n      traverseLeaf(value[index], {\r\n        ...other,\r\n        path: path.concat(`[${index}]`),\r\n        depth: depth + 1,\r\n        key: index,\r\n        index,\r\n      }),\r\n    );\r\n  }\r\n\r\n  return results;\r\n}\r\n","import traverseLeaf from './traverseLeaf';\r\nimport { RecursiveContext } from './types';\r\nimport isNullOrUndefined from './isNullOrUndefined';\r\n\r\nexport default function traverseObject(value: any, ctx: RecursiveContext) {\r\n  if (ctx.debug)\r\n    console.log(\r\n      new Array(ctx.depth).fill(' ').join('') + 'traverseObject value:',\r\n      value,\r\n      ' ctx:',\r\n      ctx,\r\n    );\r\n\r\n  let results: any[] = [];\r\n\r\n  if (isNullOrUndefined(value)) {\r\n    return results;\r\n  }\r\n\r\n  const { path, depth, ...other } = ctx;\r\n\r\n  // traverse own properties\r\n  for (let key of Object.keys(value)) {\r\n    results = results.concat(\r\n      traverseLeaf(value[key], {\r\n        ...other,\r\n        path: path.concat(key),\r\n        depth: depth + 1,\r\n        key,\r\n        index: key,\r\n      }),\r\n    );\r\n  }\r\n\r\n  // traverse symbol properties too\r\n  const symbols = Object.getOwnPropertySymbols(value);\r\n  if (symbols.length) {\r\n    for (let symbol of symbols) {\r\n      results = results.concat(\r\n        traverseLeaf(value[symbol], {\r\n          ...other,\r\n          path: path.concat(symbol),\r\n          depth: depth + 1,\r\n          key: symbol,\r\n          index: symbol,\r\n        }),\r\n      );\r\n    }\r\n  }\r\n\r\n  return results;\r\n}\r\n","export default function isNullOrUndefined(value: any) {\r\n    return typeof value === 'undefined' || value === null;\r\n}\r\n","import traverseLeaf from './traverseLeaf';\r\nimport { Traverse, TraverseOptions, SelectorFunction } from './types';\r\n\r\nconst traverse: Traverse = (\r\n  source: any,\r\n  strategy: TraverseOptions | SelectorFunction,\r\n) => {\r\n  const ns =\r\n    typeof strategy === 'object' && Reflect.has(strategy, 'namespace')\r\n      ? (strategy as TraverseOptions).namespace\r\n      : null;\r\n  const initialPathTokens = ns ? [ns] : [];\r\n\r\n  const options =\r\n    typeof strategy === 'object'\r\n      ? (strategy as TraverseOptions)\r\n      : { select: strategy as SelectorFunction };\r\n\r\n  const results = traverseLeaf(source, {\r\n    ...options,\r\n    path: initialPathTokens,\r\n    depth: 0,\r\n  });\r\n\r\n  return results;\r\n};\r\n\r\nexport default traverse;\r\n","/**\r\n * Recursively builds nested object from path tokens, assigning symbols (if any)\r\n * to each corresponding namespace, assigning value at the end.\r\n * @param {*} target\r\n * @param {*} tokens\r\n * @param {*} value\r\n */\r\nfunction assignPath(target: any, tokens: string[], value: any) {\r\n  let cursor = target;\r\n  for (let i = 0; i < tokens.length; i += 1) {\r\n    const token = tokens[i];\r\n    const node = cursor[token];\r\n    const t = typeof node;\r\n\r\n    if (t === 'undefined' || node === null) {\r\n      cursor[token] = {};\r\n    } else if (Array.isArray(cursor[token])) {\r\n      cursor[token] = { ...cursor[token] };\r\n    } else if (t === 'object') {\r\n      cursor[token] = { ...node };\r\n    }\r\n\r\n    if (i === tokens.length - 1) {\r\n      cursor[token] = value;\r\n      return value; // exit function\r\n    }\r\n    cursor = cursor[token];\r\n  }\r\n  return value;\r\n}\r\n\r\nexport default assignPath;\r\n","function sum(args: number[]) {\r\n  return args.reduce((acc, item) => acc + item, 0);\r\n}\r\n\r\nexport type SelectorFunction = (value: any, key: any, object: any) => any;\r\n\r\nconst aggregate = (\r\n  source: any,\r\n  fn: Function,\r\n  select: SelectorFunction,\r\n  defaultValue: any,\r\n) => {\r\n  if (!source) {\r\n    return defaultValue;\r\n  }\r\n\r\n  return Object.keys(source)\r\n    .map((key) => {\r\n      const item = { key, item: source[key] };\r\n      return item;\r\n    })\r\n    .reduce((acc, elem) => {\r\n      const itemValue = select(elem.item, elem.key, source);\r\n      const result = fn(acc, itemValue);\r\n\r\n      return result;\r\n    }, defaultValue);\r\n};\r\n\r\nconst fnConcat = (acc: any[], arr: any[]) => {\r\n  return acc.concat(arr);\r\n};\r\n\r\nexport default class MapReduceObject {\r\n  object: any;\r\n\r\n  constructor(object: any) {\r\n    this.object = object;\r\n  }\r\n  \r\n  count() {\r\n    return Object.keys(this.object).length;\r\n  }\r\n\r\n  map(select?: SelectorFunction) {\r\n    return Object.entries(this.object).map(([key, value]) => {\r\n      if (select) {\r\n        return select(value, key, this.object);\r\n      }  \r\n      return value;\r\n    });\r\n  }\r\n\r\n  concat(select: SelectorFunction) {\r\n    return aggregate(this.object, fnConcat, select, []);\r\n  }\r\n\r\n  min(select: SelectorFunction) {\r\n    return aggregate(this.object, Math.min, select, Number.MAX_VALUE);\r\n  }\r\n\r\n  max(select: SelectorFunction) {\r\n    return aggregate(this.object, Math.max, select, Number.MIN_VALUE);\r\n  }\r\n\r\n  sum(select: SelectorFunction) {\r\n    return sum(this.map(select));\r\n  }\r\n\r\n  avg(select: SelectorFunction) {\r\n    const values = this.map(select);\r\n    if (values.length === 0) return 0;\r\n    return sum(values) / values.length;\r\n  }\r\n}\r\n","import logic from './logic';\r\nimport string from './string';\r\nimport array from './array';\r\nimport date from './date';\r\nimport Object from './object';\r\n\r\n\r\nexport default {\r\n  array,\r\n  logic,\r\n  object: Object,\r\n  string,\r\n  date,\r\n};\r\n","import traverse from './traverse';\r\nimport assignPath from './assignPath';\r\nimport selectShape from './selectShape';\r\nimport intersect from './intersect';\r\nimport MapReduceObject from './mapReduceObject';\r\n\r\nexport default {\r\n  traverse,\r\n  assignPath,\r\n  selectShape,\r\n  intersect,\r\n  mapReduce(obj: any) {\r\n    return new MapReduceObject(obj);\r\n  },\r\n};\r\n","import _ from 'lodash';\r\nimport traverse from './traverse';\r\nimport assignPath from './assignPath';\r\n\r\nexport default function selectShape(object: any, shape: any) {\r\n  const selectors = traverse(shape, {\r\n    select: (x: any) => ({ tokens: x.tokens, key: x.key, alias: x.value }),\r\n  });\r\n  const result = selectors.reduce((map: any, selector: any) => {\r\n    const tokens = selector.tokens.slice(0, selector.tokens.length - 1);\r\n\r\n    const sourcePath = [...tokens, selector.key].join('.');\r\n    const value = _.get(object, sourcePath);\r\n\r\n    const targetPathTokens = [...tokens, selector.alias];\r\n\r\n    assignPath(map, targetPathTokens, value);\r\n\r\n    return map;\r\n  }, {});\r\n\r\n  return result;\r\n}\r\n","/**\r\n * @param object Returns a new object having only common top level properties with shape.\r\n * @param shape A shallow object defining properties to match.\r\n */\r\nexport default function intersect(object: any, shape: any) {\r\n  const keys = Object.keys(shape).filter((k) => Reflect.has(object, k));\r\n  return keys.reduce((target: any, key) => {\r\n    target[key] = object[key];\r\n    return target;\r\n  }, {});\r\n}\r\n","/* eslint jsx-quotes: [\"error\", \"prefer-double\"] */\r\nimport React, { ReactNode } from 'react';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardActionArea from '@material-ui/core/CardActionArea';\r\nimport CardActions from '@material-ui/core/CardActions';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport CardMedia from '@material-ui/core/CardMedia';\r\nimport Button from '@material-ui/core/Button';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport util from './util';\r\n\r\nconst useStyles = makeStyles({\r\n  root: {\r\n    maxWidth: 345,\r\n  },\r\n  media: {\r\n    height: 140,\r\n  },\r\n});\r\n\r\nexport type MediaCardActionMap = {\r\n  [index: string]: Function;\r\n};\r\nexport type MediaCardProps = {\r\n  title?: string;\r\n  description?: string;\r\n  children?: ReactNode;\r\n  image?: any;\r\n  onClick?: Function;\r\n  footerActions?: MediaCardActionMap;\r\n};\r\n\r\nexport default function MediaCard(props: MediaCardProps) {\r\n  const {\r\n    title, description, image, onClick, footerActions, children,\r\n  } = props;\r\n  const classes = useStyles();\r\n  return (\r\n    <Card className={classes.root}>\r\n      <CardActionArea onClick={() => onClick && onClick()}>\r\n        {image && (\r\n          <CardMedia\r\n            className={classes.media}\r\n            image={image.url}\r\n            title={title}\r\n          />\r\n        )}\r\n        <CardContent>\r\n          {title && (\r\n            <Typography gutterBottom variant=\"h5\" component=\"h2\">\r\n              {title}\r\n            </Typography>\r\n          )}\r\n\r\n          {description && (\r\n            <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\r\n              {description}\r\n            </Typography>\r\n          )}\r\n\r\n          {children && children}\r\n        </CardContent>\r\n      </CardActionArea>\r\n      {footerActions && (\r\n        <CardActions>\r\n          {Object.keys(footerActions).map((key) => (\r\n            <Button\r\n              size=\"small\"\r\n              color=\"primary\"\r\n              onClick={() => footerActions![key]()}\r\n            >\r\n              {util.string.camelToSentenceCase(key)}\r\n            </Button>\r\n          ))}\r\n        </CardActions>\r\n      )}\r\n    </Card>\r\n  );\r\n}\r\n","const attributeMap = {\r\n  bgColor: 'backgroundColor',\r\n};\r\n\r\nexport default attributeMap;\r\n","const classMap = {\r\n  scrollableX: 'scrollable scrollable-x',\r\n  scrollableY: 'scrollable scrollable-y',\r\n};\r\n\r\nexport default classMap;\r\n","import attributeMap from './attributeMap';\r\nimport resolveAttributeValue from './resolveAttributeValue';\r\nimport classMap from './classMap';\r\nimport str from '../util/string';\r\n\r\nexport type StyleBag = { style: any; classes: string[] };\r\nexport type BagKeyValue = {\r\n  bag: StyleBag;\r\n  key: string;\r\n  value?: any;\r\n  debug: boolean;\r\n};\r\n\r\nexport function getOrMakeStyle(x: BagKeyValue) {\r\n  const resolvedKey = Reflect.has(attributeMap, x.key)\r\n    ? (attributeMap as any)[x.key]\r\n    : x.key;\r\n  return { [resolvedKey]: resolveAttributeValue(resolvedKey, x.value) };\r\n}\r\n\r\nexport function createStyle(x: BagKeyValue) {\r\n  Object.assign(x.bag.style, getOrMakeStyle(x));\r\n  return true;\r\n}\r\n\r\nexport function createClass(x: BagKeyValue) {\r\n  const resolvedClass = Reflect.has(classMap, x.key)\r\n    ? (classMap as any)[x.key]\r\n    : str.camelToKebabCase(x.key);\r\n  x.bag.classes.push(resolvedClass);\r\n  return true;\r\n}\r\n","export default function resolveAttributeValue(key: string, value?: any) {\r\n  if (!value) return value;\r\n  return value.hex ? value.hex() : value;\r\n}\r\n","export interface ClassSwitches {\r\n  absolute?: boolean;\r\n\r\n  alignStart?: boolean;\r\n  alignCenter?: boolean;\r\n  alignEnd?: boolean;\r\n  alignStretch?: boolean;\r\n  alignBaseline?: boolean;\r\n  alignAuto?: boolean;\r\n\r\n  alignSelfStart?: boolean;\r\n  alignSelfCenter?: boolean;\r\n  alignSelfEnd?: boolean;\r\n  alignSelfStretch?: boolean;\r\n  alignSelfBaseline?: boolean;\r\n\r\n  anchorBottom?: boolean;\r\n  anchorLeft?: boolean;\r\n  anchorRight?: boolean;\r\n  anchorTop?: boolean;\r\n\r\n  beveled?: boolean;\r\n  block?: boolean;\r\n  borderBox?: boolean;\r\n\r\n  centerX?: boolean;\r\n  centerXY?: boolean;\r\n  centerY?: boolean;\r\n  clickable?: boolean;\r\n  coverImage?: boolean;\r\n\r\n  fill?: boolean;\r\n  fixed?: boolean;\r\n  fullWidth?: boolean;\r\n  fullWidthAlways?: boolean;\r\n\r\n  grow?: boolean;\r\n\r\n  hidden?: boolean;\r\n  horizontal?: boolean;\r\n\r\n  inline?: boolean;\r\n  inlineBlock?: boolean;\r\n\r\n  justifyStart?: boolean;\r\n  justifyCenter?: boolean;\r\n  justifyEnd?: boolean;\r\n\r\n  mobileCenter?: boolean;\r\n  mobileColumn?: boolean;\r\n  mobileOnly?: boolean;\r\n\r\n  noBr?: boolean;\r\n  noBreak?: boolean;\r\n  noMargin?: boolean;\r\n  noMobile?: boolean;\r\n  noOverflow?: boolean;\r\n  noPadding?: boolean;\r\n  noSelect?: boolean;\r\n  noTransform?: boolean;\r\n  noWrap?: boolean;\r\n\r\n  opaque?: boolean;\r\n  overlay?: boolean;\r\n\r\n  relative?: boolean;\r\n  root?: boolean;\r\n  round?: boolean;\r\n  rounded?: boolean;\r\n\r\n  scrollable?: boolean;\r\n  scrollableX?: boolean;\r\n  scrollableY?: boolean;\r\n  shrink?: boolean;\r\n  small?: boolean;\r\n  smaller?: boolean;\r\n  solid?: boolean;\r\n  spaced?: boolean;\r\n  square?: boolean;\r\n  sticky?: boolean;\r\n\r\n  tall?: boolean;\r\n  translucent?: boolean;\r\n\r\n  vertical?: boolean;\r\n\r\n  wide?: boolean;\r\n}\r\n\r\nconst switches: ClassSwitches = {\r\n  absolute: true,\r\n\r\n  alignStart: true,\r\n  alignCenter: true,\r\n  alignEnd: true,\r\n  alignStretch: true,\r\n  alignBaseline: true,\r\n  alignAuto: true,\r\n\r\n  alignSelfStart: true,\r\n  alignSelfCenter: true,\r\n  alignSelfEnd: true,\r\n  alignSelfStretch: true,\r\n  alignSelfBaseline: true,\r\n\r\n  anchorBottom: true,\r\n  anchorLeft: true,\r\n  anchorRight: true,\r\n  anchorTop: true,\r\n\r\n  beveled: true,\r\n  block: true,\r\n  borderBox: true,\r\n\r\n  centerX: true,\r\n  centerXY: true,\r\n  centerY: true,\r\n  clickable: true,\r\n  coverImage: true,\r\n\r\n  fill: true,\r\n  fixed: true,\r\n  fullWidth: true,\r\n  fullWidthAlways: true,\r\n\r\n  grow: true,\r\n\r\n  hidden: true,\r\n  horizontal: true,\r\n\r\n  inline: true,\r\n  inlineBlock: true,\r\n\r\n  justifyStart: true,\r\n  justifyCenter: true,\r\n  justifyEnd: true,\r\n\r\n  mobileCenter: true,\r\n  mobileColumn: true,\r\n  mobileOnly: true,\r\n\r\n  noBr: true,\r\n  noBreak: true,\r\n  noMargin: true,\r\n  noMobile: true,\r\n  noOverflow: true,\r\n  noPadding: true,\r\n  noSelect: true,\r\n  noTransform: true,\r\n  noWrap: true,\r\n\r\n  opaque: true,\r\n  overlay: true,\r\n\r\n  relative: true,\r\n  round: true,\r\n  rounded: true,\r\n\r\n  scrollable: true,\r\n  scrollableX: true,\r\n  scrollableY: true,\r\n  shrink: true,\r\n  small: true,\r\n  smaller: true,\r\n  solid: true,\r\n  spaced: true,\r\n  sticky: true,\r\n\r\n  tall: true,\r\n  translucent: true,\r\n\r\n  vertical: true,\r\n\r\n  wide: true,\r\n};\r\n\r\nexport default switches;\r\n","import { ReactNode } from 'react';\r\nimport { createStyle } from './functions';\r\n\r\nexport interface StyleAttributes {\r\n\r\n  backgroundColor?: any;\r\n  bgColor?: any;\r\n\r\n  backgroundImage?: any,\r\n  backgroundRepeat?: any,\r\n  backgroundPosition?: any,\r\n  backgroundSize?: any,\r\n\r\n  border?: any;\r\n  borderTop?: any;\r\n  borderRight?: any;\r\n  borderBottom?: any;\r\n  borderLeft?: any;\r\n\r\n  borderRadius?: any;\r\n  borderTopLeftRadius?: any;\r\n  borderTopRightRadius?: any;\r\n  borderBottomLeftRadius?: any;\r\n  borderBottomRightRadius?: any;\r\n\r\n  borderColor?: any;\r\n\r\n  children?: ReactNode;\r\n  className?: string;\r\n  color?: string;\r\n  cursor?: 'pointer' | string;\r\n\r\n  data?: any;\r\n  dataProps?: any;\r\n\r\n  fontSize?: any;\r\n  fontStyle?: any;\r\n  fontWeight?: any;\r\n\r\n  id?: any;\r\n  innerProps?: any;\r\n\r\n  lineHeight?: number;\r\n\r\n  margin?: any;\r\n  marginTop?: any;\r\n  marginRight?: any;\r\n  marginBottom?: any;\r\n  marginLeft?: any;\r\n\r\n  minHeight?: any;\r\n  minWidth?: any;\r\n\r\n  onBlur?: Function;\r\n  onClick?: Function;\r\n  onChange?: Function;\r\n  onFocus?: Function;\r\n  onMouseUp?: Function;\r\n  onMouseDown?: Function;\r\n\r\n  opacity?: any;\r\n\r\n  padding?: any;\r\n  paddingTop?: any;\r\n  paddingRight?: any;\r\n  paddingBottom?: any;\r\n  paddingLeft?: any;\r\n\r\n  pseudo?: any;\r\n\r\n  textAlign?: any;\r\n  textTransform?: any;\r\n  title?: any;\r\n\r\n  // SPECIAL GROUPS\r\n\r\n  // size\r\n  width?: any;\r\n  height?: any;\r\n\r\n  // position\r\n  top?: any;\r\n  right?: any;\r\n  bottom?: any;\r\n  left?: any;\r\n}\r\n\r\nexport default {\r\n  backgroundColor: createStyle,\r\n  bgColor: createStyle,\r\n\r\n  backgroundImage: createStyle,\r\n  backgroundRepeat: createStyle,\r\n  backgroundPosition: createStyle,\r\n  backgroundSize: createStyle,\r\n\r\n  border: createStyle,\r\n  borderTop: createStyle,\r\n  borderRight: createStyle,\r\n  borderBottom: createStyle,\r\n  borderLeft: createStyle,\r\n\r\n  borderRadius: createStyle,\r\n  borderTopLeftRadius: createStyle,\r\n  borderTopRightRadius: createStyle,\r\n  borderBottomLeftRadius: createStyle,\r\n  borderBottomRightRadius: createStyle,\r\n\r\n  color: createStyle,\r\n  cursor: createStyle,\r\n\r\n  dataProps: createStyle,\r\n  fontSize: createStyle,\r\n  fontStyle: createStyle,\r\n  fontWeight: createStyle,\r\n\r\n  innerProps: createStyle,\r\n  lineHeight: createStyle,\r\n\r\n  margin: createStyle,\r\n  marginTop: createStyle,\r\n  marginRight: createStyle,\r\n  marginBottom: createStyle,\r\n  marginLeft: createStyle,\r\n\r\n  minHeight: createStyle,\r\n  minWidth: createStyle,\r\n\r\n  opacity: createStyle,\r\n\r\n  padding: createStyle,\r\n  paddingTop: createStyle,\r\n  paddingRight: createStyle,\r\n  paddingBottom: createStyle,\r\n  paddingLeft: createStyle,\r\n\r\n  pseudo: createStyle,\r\n\r\n  textAlign: createStyle,\r\n  textTransform: createStyle,\r\n  title: createStyle,\r\n  width: createStyle,\r\n  height: createStyle,\r\n\r\n  // position\r\n  top: createStyle,\r\n  right: createStyle,\r\n  bottom: createStyle,\r\n  left: createStyle,\r\n};\r\n","import { useMemo } from 'react';\r\nimport { createStyles, makeStyles } from '@material-ui/core/styles';\r\nimport util from '../util';\r\n\r\nconst useInlineStyle = (style: any, dependencies: any) => {\r\n  const cb = useMemo(() => (\r\n    makeStyles(() => (\r\n      createStyles({ ...util.logic.fnOrValue(style) })\r\n    ))\r\n  ), [style, dependencies]);\r\n  return cb;\r\n};\r\nexport default useInlineStyle;\r\n","// import React from 'react';\r\nimport clsx from 'clsx';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { StyleBag, createClass } from './functions';\r\nimport classSwitches from './classSwitches';\r\nimport styleAttributes, { StyleAttributes } from './styleAttributes';\r\n// import { getPropsDescriptor } from './getPropsDescriptor';\r\n\r\n// const $$reactElement = Symbol.for('react.element');\r\n\r\nfunction useStyleDirectives<T>(\r\n  directives: any,\r\n  componentOwnProps: any,\r\n  tagName?: string,\r\n  ...baseClasses: string[]\r\n) {\r\n  const {\r\n    id,\r\n    children,\r\n    style,\r\n    className,\r\n    ref,\r\n    data,\r\n    pseudo,\r\n    innerProps,\r\n    ...nonReact\r\n  } = directives;\r\n  const specialProps = {\r\n    id,\r\n    children,\r\n    style,\r\n    className,\r\n    ref,\r\n    data,\r\n    innerProps,\r\n  };\r\n  const removeProps: string[] = [];\r\n  const keys = Object.keys(nonReact);\r\n  const bag: StyleBag = { style: style || {}, classes: [] };\r\n  keys.forEach((key: any) => {\r\n    if (!Reflect.has(specialProps, key)) {\r\n      const value = directives[key];\r\n      if (Reflect.has(classSwitches, key)) {\r\n        createClass({\r\n          bag, key, value, debug: false,\r\n        });\r\n        removeProps.push(key);\r\n      } else if (Reflect.has(styleAttributes, key)) {\r\n        (styleAttributes as any)[key]({ bag, key, value });\r\n        removeProps.push(key);\r\n      } else {\r\n        const type = typeof value;\r\n        if (type === 'boolean' && value === true) {\r\n          createClass({\r\n            bag, key, value, debug: false,\r\n          });\r\n        }\r\n      }\r\n    }\r\n  });\r\n\r\n  const props = { ...nonReact };\r\n  removeProps.forEach((key) => {\r\n    delete props[key];\r\n  });\r\n\r\n  const pseudoStyles = Object.keys(directives.pseudo || {}).reduce(\r\n    (acc: any, key) => {\r\n      const s = directives.pseudo[key];\r\n      const fullKey = key[0] === '&' ? key : `& :${key}`;\r\n      return Object.assign(acc, { [fullKey]: s });\r\n    },\r\n    {},\r\n  );\r\n\r\n  const usedStyles: any = makeStyles(() => {\r\n    const s: any = {};\r\n    if (Object.keys(bag.style).length) s.bag = bag.style;\r\n    if (Object.keys(pseudoStyles).length) s.pseudo = pseudoStyles;\r\n    return s;\r\n  })();\r\n\r\n  const { dataProps, ...attr } = (directives as StyleAttributes);\r\n  const result = {\r\n    root: {\r\n      className: clsx(\r\n        className,\r\n        baseClasses,\r\n        tagName,\r\n        bag.classes,\r\n        usedStyles.bag,\r\n        usedStyles.pseudo,\r\n      ),\r\n    },\r\n    props: { ...(props as T), ...specialProps },\r\n    attr,\r\n    data: dataProps,\r\n  };\r\n\r\n  return result;\r\n}\r\n\r\nexport default useStyleDirectives;\r\n","import React, { ReactNode } from 'react';\r\nimport { PropsDirectives, useStyleDirectives } from './directives';\r\n\r\ntype DivProps = { children?: ReactNode, id?: string };\r\nexport const Div = (directives: DivProps & PropsDirectives) => {\r\n  const { children, ...other } = directives;\r\n  const { \r\n    root, \r\n    props, \r\n    attr, \r\n    data \r\n  } = useStyleDirectives<DivProps>(other, null);\r\n  return (\r\n    <div className={root.className} id={directives.id} {...data}>\r\n      {children}\r\n    </div>\r\n  );\r\n};\r\n\r\ntype RowProps = { children?: ReactNode, id?: string };\r\nexport const Row = (directives: RowProps & PropsDirectives) => {\r\n  const { children, ...other } = directives;\r\n  const { root } = useStyleDirectives<RowProps>(\r\n    other,\r\n    null,\r\n    'Row',\r\n    'flex row',\r\n  );\r\n  return (\r\n    <div className={root.className} id={directives.id}>\r\n      {children}\r\n    </div>\r\n  );\r\n};\r\n\r\ntype ColProps = { children?: ReactNode, id?: string };\r\nexport const Col = (directives: ColProps & PropsDirectives) => {\r\n  const { children, ...other } = directives;\r\n  const { root } = useStyleDirectives<ColProps>(\r\n    other,\r\n    null,\r\n    'Col',\r\n    'flex column',\r\n  );\r\n  return (\r\n    <div className={root.className} id={directives.id}>\r\n      {children}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default {\r\n  Div,\r\n  Row,\r\n  Col,\r\n};\r\n","/* eslint jsx-quotes: [\"error\", \"prefer-double\"] */\r\nimport React, { \r\n  useEffect, \r\n  useRef, \r\n  ReactNode, \r\n  useMemo \r\n} from 'react';\r\nimport clsx from 'clsx';\r\nimport { Paper } from '@material-ui/core';\r\nimport { useTheme } from '@material-ui/core/styles';\r\n\r\nimport logic from '../util/logic';\r\nimport {\r\n  PropsDirectives,\r\n  useStyleDirectives,\r\n  useInlineStyle,\r\n} from '../directives';\r\nimport './style.css';\r\n\r\n/**\r\n * colSpan: (Optional) number of columns the item spans.  Default is 1.\r\n * image: (Optional) cover image for the card.\r\n *\r\n */\r\nexport interface IMasonryItem {\r\n  colSpan?: number;\r\n  image?: any;\r\n  title?: string;\r\n  description?: string;\r\n  onClick?: Function;\r\n}\r\n\r\n/**\r\n * min: Min value for the grid's minmax(min, max) function. Default 150px.\r\n * max: Max value for the grid's minmax(min, max) function. Default 1fr.\r\n * items: IMasonryItem[]\r\n */\r\nexport type MasonryProps = {\r\n  min?: any;\r\n  max?: any;\r\n  items: IMasonryItem[];\r\n  elementForItem?: (item: IMasonryItem, index: number) => ReactNode;\r\n  revision: number,\r\n};\r\n\r\nconst ElementContainer = (props: any) => {\r\n  const { element, colSpan, image } = props;\r\n  const inline = useInlineStyle(() => {\r\n    const root: any = {};\r\n    if (colSpan) {\r\n      root.gridColumnEnd = `span ${colSpan}`;\r\n    }\r\n    return {\r\n      root,\r\n      image: { backgroundImage: `url(\"${image}\")` },\r\n    };\r\n  }, [colSpan, image])();\r\n\r\n  return (\r\n    <div className={clsx('masonry-item', 'relative', inline.root)}>\r\n      <div className=\"content fill\">{element}</div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport const DefaultMasonryItem = (\r\n  directives: IMasonryItem & PropsDirectives,\r\n) => {\r\n  const {\r\n    colSpan, image, title, description, onClick, ...d\r\n  } = directives;\r\n  const { root } = useStyleDirectives<IMasonryItem>(\r\n    d,\r\n    null,\r\n    'MasonryItem',\r\n    'masonry-item',\r\n  );\r\n  const inline = useInlineStyle(() => ({\r\n    root: { gridColumnEnd: colSpan ? `span ${colSpan}` : null },\r\n    image: { backgroundImage: `url(\"${image}\")` },\r\n  }), [colSpan, image])();\r\n  return (\r\n    // eslint-disable-next-line\r\n    <div\r\n      className={clsx(root.className, inline.root)}\r\n      onClick={() => onClick && onClick()}\r\n    >\r\n      <Paper className=\"content\">\r\n        {image && <div className={clsx('cover-image', inline.image)} />}\r\n        {title && <div className=\"title\">{title}</div>}\r\n        {description && <div className=\"desc\">{description}</div>}\r\n      </Paper>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst Masonry = (directives: MasonryProps & PropsDirectives) => {\r\n  const {\r\n    min, max, items, elementForItem, revision, ...d\r\n  } = directives;\r\n\r\n  const theme = useTheme();\r\n\r\n  const { root } = useStyleDirectives<MasonryProps>(\r\n    d,\r\n    null,\r\n    'Masonry',\r\n    'ui-masonry-grid masonry-grid grid',\r\n  );\r\n\r\n  const mutable = useRef({ resizing: false, gridItems: [] }).current;\r\n\r\n  const g = document.getElementsByClassName('masonry-grid')[0];\r\n  const { \r\n    grid, \r\n    rowHeight, \r\n    rowGap, \r\n    gridItems \r\n  } = useMemo(() => {\r\n    if (!g) return { rowHeight: 0, rowGap: 0, gridItems: [] };\r\n    return {\r\n      grid: g,\r\n      rowHeight: parseInt(\r\n        window.getComputedStyle(g).getPropertyValue('grid-auto-rows'), 10,\r\n      ),\r\n      rowGap: parseInt(\r\n        window.getComputedStyle(g).getPropertyValue('grid-row-gap'), 10,\r\n      ),\r\n      gridItems: Array.from(document.getElementsByClassName('masonry-item'))\r\n        .map(\r\n          (e: any) => {\r\n            const innerElement = e.querySelector('.content > *');\r\n            const heightRatio = +innerElement.getAttribute('heightratio');\r\n            return {\r\n              container: e,\r\n              innerElement,\r\n              heightRatio,\r\n            };\r\n          }\r\n        ),\r\n    };\r\n  }, [g, items, revision, mutable.resizing]);\r\n  \r\n  // const resizeGridItem = React.useCallback((item: any) => {\r\n  //   const grid = document.getElementsByClassName('masonry-grid')[0];\r\n  //   const rowHeight = parseInt(\r\n  //     window.getComputedStyle(grid).getPropertyValue('grid-auto-rows'), 10,\r\n  //   );\r\n  //   const rowGap = parseInt(\r\n  //     window.getComputedStyle(grid).getPropertyValue('grid-row-gap'), 10,\r\n  //   );\r\n  //   const innerEllement = item.querySelector('.content > *');\r\n  //   // const heightRatio = innerEllement.get\r\n  //   const rowSpan = Math.ceil(\r\n  //     innerEllement.getBoundingClientRect().height / (rowHeight + rowGap),\r\n  //   );\r\n  //   item.style.gridRowEnd = `span ${rowSpan}`;\r\n  // }, []);\r\n\r\n  const resizeGridItem = React.useCallback((gi: any) => {\r\n    \r\n    const rect = gi.innerElement.getBoundingClientRect();\r\n    if (rect.width === 0) {\r\n      return;\r\n    }\r\n\r\n    let rowSpan;\r\n\r\n    if (gi.heightRatio) {\r\n      const impliedHeight = Math.round(rect.width * gi.heightRatio);\r\n      const heightWithGap = impliedHeight + rowGap;\r\n      const remainder = heightWithGap % (rowHeight + rowGap);\r\n      rowSpan = Math.round((heightWithGap - remainder) / (rowHeight + rowGap));\r\n    } else {\r\n      const heightWithGap = rect.height + rowGap;\r\n      const remainder = heightWithGap % (rowHeight + rowGap);\r\n      rowSpan = Math.round((heightWithGap - remainder) / (rowHeight + rowGap));\r\n    }\r\n\r\n    gi.container.style.gridRowEnd = `span ${rowSpan}`;\r\n  }, [grid, items, gridItems, revision, mutable.resizing]);\r\n\r\n  const resizeAllGridItems = React.useCallback(() => {\r\n      gridItems.forEach(gi => resizeGridItem(gi));\r\n    },\r\n    [grid, items, gridItems, revision, mutable.resizing, resizeGridItem]\r\n  );\r\n\r\n  // Triggers\r\n  const handleResizeAllGridItems = React.useCallback(() => {\r\n    if (mutable.resizing) {\r\n      return;\r\n    }\r\n    mutable.resizing = true;\r\n    const timer = setTimeout(() => {\r\n      mutable.resizing = false;\r\n    }, 100);\r\n    window.requestAnimationFrame(() => {\r\n      clearTimeout(timer);\r\n      resizeAllGridItems();\r\n      mutable.resizing = false;\r\n    });\r\n    \r\n  }, [grid, items, gridItems, revision, mutable.resizing, resizeAllGridItems]);\r\n  \r\n  useEffect(() => {\r\n    window.addEventListener('resize', handleResizeAllGridItems);\r\n    return () => {\r\n      window.removeEventListener('resize', handleResizeAllGridItems);\r\n    };\r\n  }, [grid, items, gridItems, revision, mutable.resizing, handleResizeAllGridItems]);\r\n\r\n  useEffect(() => {\r\n    setTimeout(() => handleResizeAllGridItems(), 100);\r\n  }, [grid, items, gridItems, revision, mutable.resizing, handleResizeAllGridItems]);\r\n\r\n  setTimeout(() => handleResizeAllGridItems(), 0);\r\n\r\n  const inline = useInlineStyle(() => {\r\n    const minval = min || '150px';\r\n    const maxval = max || '1.4fr';\r\n    return {\r\n      root: {\r\n        gridTemplateColumns: `repeat(auto-fill, minmax(${minval},${maxval}))`,\r\n        '& .masonry-item': {\r\n          boxShadow: logic.switch(\r\n            null, 'inherit', \r\n            () => theme.palette.type === 'light', '2px 2px 4px #9c9c9c',\r\n          ),\r\n          borderRadius: 3,\r\n          overflow: 'hidden',\r\n        },\r\n        '& .masonry-item:hover': {\r\n          boxShadow: logic.switch(\r\n            null, '3px 3px 6px #9c9c9c', \r\n            () => theme.palette.type === 'dark', '0px 0px 4px #55555522',\r\n          ),\r\n        },\r\n      },\r\n    };\r\n  }, [min, max])();\r\n\r\n  return (\r\n    <div className={clsx('root', root.className, inline.root)}>\r\n      {\r\n        /* eslint-disable react/jsx-props-no-spreading */\r\n        /* eslint-disable no-confusing-arrow */\r\n        /* eslint-disable react/no-array-index-key */\r\n        items.map((item, index) => elementForItem\r\n          ? (\r\n            <ElementContainer\r\n              key={index}\r\n              {...item}\r\n              element={elementForItem(item, index)}\r\n            />\r\n          ) : (\r\n            <DefaultMasonryItem key={index} {...item} />\r\n          ))\r\n      }\r\n    </div>\r\n  );\r\n};\r\nexport default Masonry;\r\n","import React, { ReactNode, useEffect, useState } from 'react';\r\n\r\n// MUI\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport Slide from '@material-ui/core/Slide';\r\nimport { TransitionProps } from '@material-ui/core/transitions';\r\nimport Button from '@material-ui/core/Button';\r\n\r\n// components\r\nimport { Div } from './Layout';\r\n\r\nconst Transition = React.forwardRef(function Transition(\r\n    props: TransitionProps & { children?: React.ReactElement<any, any> },\r\n    ref: React.Ref<unknown>) {\r\n    return <Slide direction=\"down\" ref={ref} {...props} />;\r\n});\r\n\r\ntype ModalProps = {show: boolean, title?: ReactNode, body?: ReactNode, onClose: Function, onEscape?: Function, onOk?: Function};\r\n\r\nconst Modal = (props: ModalProps) => {\r\n\r\n    const handleClose = () => props.onClose();\r\n    const handleEscapeKey = () => props.onEscape && props.onEscape();\r\n\r\n    const handleOk = () => {\r\n        props.onOk && props.onOk();\r\n        handleClose();\r\n    }\r\n\r\n    useEffect(() => {\r\n        document.addEventListener(\"keydown\", handleEscapeKey, false);\r\n        return () => document.removeEventListener(\"keydown\", handleEscapeKey, false);\r\n    }, []);\r\n    \r\n    return (\r\n        <Dialog\r\n            open={props.show}\r\n            TransitionComponent={Transition}\r\n            onClose={handleClose}\r\n            disableBackdropClick\r\n            disableEscapeKeyDown\r\n            maxWidth=\"lg\"\r\n        >\r\n            <Div relative>\r\n                {props.title}\r\n                {props.body}\r\n            </Div>\r\n\r\n            <DialogActions>\r\n                <Button onClick={handleClose} color=\"default\">\r\n                    {\r\n                        // For semantic reasons: \r\n                        // if the 'Close' button is juxtaposed with 'OK' button, it should say 'Cancel'\r\n                        props.onOk ? 'Cancel' : 'Close'\r\n                    }\r\n                </Button>\r\n                {\r\n                    props.onOk &&\r\n                    <Button onClick={handleOk} color=\"default\">\r\n                        OK\r\n                    </Button>\r\n                }                \r\n            </DialogActions>\r\n            \r\n        </Dialog>\r\n    )\r\n}\r\n\r\nexport default Modal;","import React, { ReactNode } from 'react';\r\nimport Tabs from '@material-ui/core/Tabs';\r\nimport Tab from '@material-ui/core/Tab';\r\nimport clsx from 'clsx';\r\nimport {\r\n  PropsDirectives,\r\n  useStyleDirectives,\r\n  useInlineStyle,\r\n} from './directives';\r\nimport { Row, Col } from './Layout';\r\nimport util from './util';\r\n\r\nexport type UiTabDef = {\r\n  label: ReactNode;\r\n  content: ReactNode | { (): ReactNode };\r\n};\r\nexport function isTabDef(object: any) {\r\n  return !!object && !!object.label && !!object.content;\r\n}\r\nexport type UiTab = ReactNode | UiTabDef;\r\nexport type UiTabData = { [index: string]: UiTab };\r\nexport type UiTabs = {\r\n  items: any[];\r\n  keyForItem?: (item: any) => string;\r\n  elementForItem: (item: any, active: boolean) => ReactNode;\r\n  //\r\n  id?: string; // needed if auto saved state is desired\r\n  onChange?: { (key: string): void };\r\n  activeKey?: string;\r\n  variant?: 'fullWidth' | 'scrollable';\r\n  orientation?: 'vertical';\r\n  centered?: boolean;\r\n};\r\ntype ValueType = string | number | boolean | symbol;\r\ntype ValueOrElement = ValueType | Element | React.ReactNode;\r\nexport type FunctionOrValueOrElement = Function | ValueOrElement;\r\n\r\ninterface TabPanelProps {\r\n  children?: FunctionOrValueOrElement;\r\n  active: boolean;\r\n  id?: string;\r\n  value: string;\r\n}\r\n\r\nfunction TabPanel(props: TabPanelProps) {\r\n  const {\r\n    children, active, value, id,\r\n  } = props;\r\n  return (\r\n    <div\r\n      role=\"tabpanel\"\r\n      hidden={!active}\r\n      id={`${id}-${value}`}\r\n      aria-labelledby={`${id}-${value}`}\r\n    >\r\n      {children || <div>No content</div>}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default (directives: UiTabs & PropsDirectives) => {\r\n  const {\r\n    id,\r\n    onChange,\r\n    activeKey,\r\n    variant,\r\n    orientation,\r\n    centered,\r\n    items,\r\n    keyForItem,\r\n    elementForItem,\r\n    ...d\r\n  } = directives;\r\n  const { root, props } = useStyleDirectives<UiTabs>(d, null, 'ui-tabs');\r\n\r\n  const keys = items.map((item) => {\r\n    if (!keyForItem) {\r\n      switch (typeof item) {\r\n        case 'string':\r\n          return item;\r\n        case 'number':\r\n          return item.toString();\r\n        default:\r\n          throw new Error('Invalid key');\r\n      }\r\n    }\r\n    return keyForItem(item);\r\n  });\r\n\r\n  const [selectedKey, setActiveKey] = React.useState(() => activeKey);\r\n\r\n  const handleChange = (event: React.ChangeEvent<{}>, key: string) => {\r\n    setActiveKey(key);\r\n    if (onChange) onChange(key);\r\n  };\r\n\r\n  const internalStyle = useInlineStyle(\r\n    () => ({\r\n      minWidth: 'unset!important',\r\n      minHeight: 'unset!important',\r\n    }),\r\n    [],\r\n  )();\r\n\r\n  if (!keys.length) return null;\r\n\r\n  const tabStrip = (\r\n    <Tabs\r\n      orientation={directives.orientation}\r\n      value={selectedKey || keys[0]}\r\n      onChange={handleChange}\r\n      aria-label={`tabs with ${keys.length} panels`}\r\n    >\r\n      {keys.map((key: string) => {\r\n        const label = util.string.camelToSentenceCase(key);\r\n        return <Tab key={key} label={label} value={key} />;\r\n      })}\r\n    </Tabs>\r\n  );\r\n\r\n  const tabContent = items.map((item: string, index: number) => {\r\n    const key = keys[index];\r\n    const isActiveTab = (typeof selectedKey === 'undefined' && index === 0)\r\n      || selectedKey === key;\r\n    return (\r\n      <TabPanel\r\n        key={key}\r\n        active={isActiveTab}\r\n        value={key}\r\n        id={props.id || 'global'}\r\n      >\r\n        {elementForItem(item, isActiveTab)}\r\n      </TabPanel>\r\n    );\r\n  });\r\n\r\n  const verticalLayout = (\r\n    <Row wide>\r\n      {keys.length > 1 && <Col>{tabStrip}</Col>}\r\n      <Col grow>{tabContent}</Col>\r\n    </Row>\r\n  );\r\n\r\n  const horizontalLayout = (\r\n    <>\r\n      {keys.length > 1 && tabStrip}\r\n      {tabContent}\r\n    </>\r\n  );\r\n\r\n  const isVertical = directives.orientation === 'vertical';\r\n\r\n  return (\r\n    <div className={clsx('root', root, internalStyle)}>\r\n      {isVertical && verticalLayout}\r\n      {!isVertical && horizontalLayout}\r\n    </div>\r\n  );\r\n};\r\n","import * as React from 'react'\nimport clsx from 'clsx'\n\nimport card from './MediaCard';\nimport csvLink from './CSVLink';\nimport counter from './Counter';\n\nimport drawer from './Drawer';\nimport dropdown from './Dropdown';\n\nimport { Div, Row, Col } from './Layout';\n\nimport masonry from './Masonry';\nimport modal from './Modal';\n\nimport propertyPage from './PropertyPage';\nimport tabs from './Tabs';\n\nimport useInlineStyle from './directives/useInlineStyle';\nimport util from './util';\nimport { v4 as uuid } from 'uuid';\n\nexport default {\n  \n  counter,\n  csvLink,\n  \n  div: Div,\n  drawer,\n  dropdown,\n\n  card,\n  clsx,\n  col: Col,\n  \n  masonry,\n  modal,\n\n  propertyPage,\n  \n  row: Row,\n  \n  tabs,\n\n  useInlineStyle,\n  uuid,\n\n  ...util,\n  \n}\n","import React from 'react';\r\nimport useInlineStyle from './directives/useInlineStyle';\r\n\r\nconst defaultMinCount = 0;\r\n\r\nexport type UiCounter = { min?: number; title?: string };\r\nexport default (props: UiCounter) => {\r\n  \r\n  const ref = React.useRef({ count: 0 }).current; \r\n\r\n  if (\r\n    ++ref.count <=\r\n    (typeof props.min !== 'undefined' ? props.min : defaultMinCount)\r\n  ) {\r\n    return null;\r\n  }\r\n  \r\n  const classes = useInlineStyle({\r\n    root: {\r\n      position: 'absolute',\r\n      zIndex: 999999,\r\n      top: 0,\r\n      left: 0,\r\n      padding: '0 3px',\r\n      lineHeight: 1,\r\n      fontSize: '.7rem',\r\n      backgroundColor: 'red',\r\n      color: 'white',\r\n    }\r\n  }, [])();\r\n\r\n\r\n  return (\r\n    <div\r\n      title={props.title}\r\n      className={classes.root}\r\n    >\r\n      {ref.count}\r\n    </div>\r\n  );\r\n};\r\n","import React, { ReactNode } from 'react';\r\nimport { CSVLink as ReactCSVLink } from 'react-csv';\r\nimport { Div } from './Layout';\r\nimport { useInlineStyle } from './directives';\r\n\r\nexport type UiCSVLink = {\r\n  data: any[];\r\n  text?: string;\r\n  children?: ReactNode;\r\n};\r\n\r\nconst CSVLink = (props: UiCSVLink) => {\r\n  const inline = useInlineStyle({\r\n    root: {\r\n      '& a': {\r\n        color: 'inherit',\r\n        textDecoration: 'none',\r\n        fontSize: '1rem',\r\n      },\r\n      '& a:hover': {\r\n        textDecoration: 'underline',\r\n      },\r\n    },\r\n  }, [])();\r\n  return (\r\n    <Div className={inline.root}>\r\n      <ReactCSVLink data={props.data}>\r\n        {props.text || props.children}\r\n      </ReactCSVLink>\r\n    </Div>\r\n  );\r\n};\r\n\r\nexport default CSVLink;\r\n","import React, { ReactNode, ReactElement } from 'react';\r\nimport Drawer from '@material-ui/core/Drawer';\r\n\r\ntype Anchor = 'top' | 'left' | 'bottom' | 'right';\r\ntype PropsType = {\r\n  anchor: Anchor;\r\n  open?: boolean;\r\n  button?: ReactElement;\r\n  onOpen?: Function;\r\n  onClose?: Function;\r\n  children?: ReactNode;\r\n};\r\n\r\nexport default (props: PropsType) => {\r\n  const [open, setOpen] = React.useState(false);\r\n  const [closed, setClosed] = React.useState<boolean|undefined>();\r\n\r\n  const externallyControlled = typeof props.open !== 'undefined';\r\n  const drawerOpen = !closed && (externallyControlled ? props.open : open);\r\n\r\n  const toggleDrawer = (open: boolean) => (event: React.KeyboardEvent | React.MouseEvent) => {\r\n    setOpen(open);\r\n    if (!open) {\r\n      setClosed(true);\r\n    }\r\n    if (open && props.onOpen) props.onOpen();\r\n    if (!open && props.onClose) props.onClose();      \r\n  };\r\n\r\n  return (\r\n    <>\r\n      {\r\n        props.button && !drawerOpen &&\r\n        React.cloneElement(props.button, {\r\n          onClick: toggleDrawer(true)\r\n        })\r\n      }\r\n      <Drawer \r\n        anchor={props.anchor} \r\n        open={drawerOpen} \r\n        onClose={toggleDrawer(false)}\r\n      >\r\n        {\r\n          !closed &&\r\n          drawerOpen && \r\n          props.children\r\n        }\r\n      </Drawer>\r\n    </>\r\n  );\r\n};\r\n","import React from 'react';\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport Select from '@material-ui/core/Select';\r\nimport { v4 as uuidv4 } from 'uuid';\r\n\r\nimport { Div } from './Layout';\r\n\r\ntype DropdownOption = string\r\n  | {\r\n      value: string | number;\r\n      text: string;\r\n    };\r\n\r\ntype DropdownProps = {\r\n  defaultValue?: string;\r\n  label?: string;\r\n  localStorageKey?: string;\r\n  options: DropdownOption[];\r\n  onChange: (value: any) => void,\r\n};\r\n\r\nexport default function Dropdown(props: DropdownProps) {\r\n  const { \r\n    localStorageKey, \r\n    label, \r\n    defaultValue, \r\n    options \r\n  } = props;\r\n  const labelId = uuidv4();\r\n\r\n  const [selectedValue, setSelectedValue] = React.useState<string | undefined>(\r\n    () => {\r\n      const storedString: string | null = localStorageKey\r\n        ? localStorage.getItem(localStorageKey)\r\n        : null;\r\n      return storedString || defaultValue;\r\n    },\r\n  );\r\n\r\n  const selectedValueExists = options.find((option: any) => {\r\n    const t = typeof option;\r\n    const obj = option as any;\r\n    const value = typeof obj === 'object' ? obj.value : option;\r\n    return selectedValue === value;\r\n  });\r\n  const auxOptions = !selectedValueExists \r\n    ? [{ value: selectedValue, text: selectedValue, aux: true }]\r\n    : []; \r\n\r\n  const handleChange = (event: React.ChangeEvent<{ value: unknown }>) => {\r\n    const value = event.target.value as string;\r\n    if (localStorageKey) {\r\n      localStorage.setItem(localStorageKey, value);\r\n    }\r\n    setSelectedValue(value);\r\n    props.onChange && props.onChange(value);\r\n  };\r\n\r\n  return (\r\n    <FormControl>\r\n      {label && <InputLabel id={labelId}>{label}</InputLabel>}\r\n      <Select\r\n        labelId={labelId}\r\n        value={selectedValue}\r\n        onChange={handleChange}\r\n      >\r\n        {[...options, ...auxOptions].map((option) => {\r\n          const t = typeof option;\r\n          const obj = option as any;\r\n          const text = typeof obj === 'object' ? obj.text : option;\r\n          const value = typeof obj === 'object' ? obj.value : option;\r\n          const aux = typeof obj === 'object' ? obj.aux === true : false;\r\n          return (\r\n            <MenuItem key={value} value={value}>\r\n              {\r\n                !aux && text\r\n              }\r\n              {\r\n                aux && <Div opacity={0.5} fontStyle=\"italic\">{text}</Div>\r\n              }\r\n            </MenuItem>\r\n          );\r\n        })}\r\n      </Select>\r\n    </FormControl>\r\n  );\r\n}\r\n","import React from 'react';\r\nimport { Div, Row } from './Layout';\r\nimport isNullOrUndefined from './util/object/traverse/isNullOrUndefined';\r\nimport str from './util/string';\r\n\r\ntype PropertyPageProps = {\r\n  data: any,\r\n};\r\n\r\nconst PropertyPage = (props: PropertyPageProps) => {\r\n  const { data } = props;\r\n  const keys = Object.keys(data)\r\n    .filter(key => !!data[key] || data[key] === 0);\r\n  \r\n  return (\r\n    <>\r\n      {\r\n        keys.map(key => {\r\n\r\n          const label = str.camelToSentenceCase(key);\r\n\r\n          return (\r\n            <Row key={key} spaced fontSize=\"0.8rem\">\r\n              <Div width=\"50%\" opacity={0.5}>\r\n                { label }\r\n              </Div>\r\n              <Div width=\"50%\">\r\n                {\r\n                  typeof data[key] === 'boolean' ? data[key].toString() : data[key]\r\n                }\r\n              </Div>\r\n            </Row>\r\n          );\r\n        })\r\n      }\r\n    </>\r\n  );\r\n};\r\nexport default PropertyPage;\r\n","import React, { useEffect, useState } from 'react'\nimport ReactMarkdown from 'react-markdown'\nimport ui from '@reactiff/ui-core'\n\nconst md = `\n[![NPM](https://img.shields.io/npm/v/@reactiff/ui-core.svg)](https://www.npmjs.com/package/@reactiff/ui-core) [![JavaScript Style Guide](https://img.shields.io/badge/code_style-standard-brightgreen.svg)](https://standardjs.com)\n`;\n\nconst App = () => {\n\n  const [state, setState] = useState<any>();\n\n  useEffect(() => {\n    const run = () => {\n      const newState = { value: 0 };\n      setState(newState);\n      setTimeout(run, 1000);\n    }\n    run();\n  }, [setState]);\n\n  const styles = ui.useInlineStyle({\n    root: { \n      border: '4px solid #ffffff',\n      padding: 30,\n      '& > .value': { \n        fontSize: '3rem',\n        margin: '0 0 15px 0',\n      }\n    }\n  }, [])();\n\n  return (\n    <div> \n      <ui.col alignCenter>\n        <h1>\n          @reactiff/ui-core\n        </h1>\n        <p>\n          UI toolkit foundation\n        </p>\n        <ReactMarkdown>\n          {md}\n        </ReactMarkdown>\n        <div className={`flex column align-center ${styles.root}`}>\n          <h1 className=\"value\">\n            Nothing\n          </h1>\n        </div>\n        <p>\n          <a href=\"https://www.npmjs.com/package/@reactiff/ui-core\">npm</a> | <a href=\"https://github.com/reactiff/package-name\">git</a> | MIT © <a href=\"https://github.com/reactiff\">Rick Ellis</a>\n        </p>\n      </ui.col>\n    </div>\n  )\n}\n\nexport default App\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './App'\n\nimport './css/index.css'\nimport './css/orthogonal.css'\nimport './css/flex.css'\n\nReactDOM.render(<App />, document.getElementById('root'))\n"],"sourceRoot":""}